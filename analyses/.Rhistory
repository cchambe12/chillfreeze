trx$taxa <- paste(trx$Genus, trx$Species, sep=" ")
trx$camera <- substr(trx$image, 0, 6)
trx$camera <- ifelse(trx$camera == "ATXing", substr(trx$image, 8, 13), trx$camera)
results$camera <- ifelse(results$camera=="CAM6A", "CAM06A", results$camera)
trx <- left_join(trx, classes)
View(trx)
View(classes)
trx$group <- ifelse(trx$scientific_name=="Corvus brachyrhynchos", "Bird", trx$group)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
## Libraries
library(dplyr)
library(ggplot2)
#Load the data
results <- read.csv("~/Desktop/test_results_usda_all.csv", header=TRUE)
classes <- read.csv("~/Desktop/listofnames.csv", header=TRUE)
results$image <- gsub(".*/\\s*|'.*", '', results$fileName)
errors <- c(4, 17)
results$modelfix<-NA
results$modelfix <- ifelse(results$guess1==22, results$guess2, results$guess1)
results$modelfix <- ifelse(results$guess1==1, results$guess2, results$modelfix)
results$modelfix <- ifelse(results$modelfix%in%errors, 18, results$modelfix)
results$camera <- gsub("_.*", '', results$image)
classes$modelfix<-classes$Class.ID
classes$group<-classes$Group.name
classes$taxa<-classes$scientific_name
results <- left_join(results, classes)
tocheck <- read.csv("~/Documents/git/cameratrap/WildlifeDetections_CameraTrap.csv", header=TRUE)
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$image <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$taxa <- paste(trx$Genus, trx$Species, sep=" ")
trx$camera <- substr(trx$image, 0, 6)
trx$camera <- ifelse(trx$camera == "ATXing", substr(trx$image, 8, 13), trx$camera)
results$camera <- ifelse(results$camera=="CAM6A", "CAM06A", results$camera)
trx$group <- ifelse(trx$scientific_name=="Vulpes vulpes", "Fox", trx$group)
trx$group <- ifelse(trx$scientific_name=="Canis latrans", "Canidae", trx$group)
trx$group <- ifelse(trx$scientific_name=="Sciurus carolinensis", "Squirrel", trx$group)
trx$group <- ifelse(trx$scientific_name=="Sylvilagus floridanus", "Rabbits", trx$group)
trx$group <- ifelse(trx$scientific_name=="Turdus migratorius", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Carduelis tristis", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Dumetella carolinensis", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Quiscalus quiscula", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Zenaida macroura", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Corvus brachyrhynchos", "Corvid", trx$group)
trx$group <- ifelse(trx$scientific_name=="Urocyon cinereoargenteus", "Fox", trx$group)
trx$group <- ifelse(trx$scientific_name=="Passer domesticus", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Butorides virescens", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Neovison vison", "Mustelidae", trx$group)
trx$group <- ifelse(trx$scientific_name=="Cardinalis cardinalis", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Tamias striatus", "Rodent", trx$group)
trx$group <- ifelse(trx$scientific_name=="Lontra canadensis", "Mustelidae", trx$group)
trx$group <- ifelse(trx$scientific_name=="Ardea herodias", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Martes pennanti", "Mustelidae", trx$group)
trx$group <- ifelse(trx$scientific_name=="Martes pennanti", "Mustelidae", trx$group)
View(trx)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
## Libraries
library(dplyr)
library(ggplot2)
#Load the data
results <- read.csv("~/Desktop/test_results_usda_all.csv", header=TRUE)
classes <- read.csv("~/Desktop/listofnames.csv", header=TRUE)
results$image <- gsub(".*/\\s*|'.*", '', results$fileName)
errors <- c(4, 17)
results$modelfix<-NA
results$modelfix <- ifelse(results$guess1==22, results$guess2, results$guess1)
results$modelfix <- ifelse(results$guess1==1, results$guess2, results$modelfix)
results$modelfix <- ifelse(results$modelfix%in%errors, 18, results$modelfix)
results$camera <- gsub("_.*", '', results$image)
classes$modelfix<-classes$Class.ID
classes$group<-classes$Group.name
classes$taxa<-classes$scientific_name
results <- left_join(results, classes)
tocheck <- read.csv("~/Documents/git/cameratrap/WildlifeDetections_CameraTrap.csv", header=TRUE)
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$image <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$taxa <- paste(trx$Genus, trx$Species, sep=" ")
trx$camera <- substr(trx$image, 0, 6)
trx$camera <- ifelse(trx$camera == "ATXing", substr(trx$image, 8, 13), trx$camera)
results$camera <- ifelse(results$camera=="CAM6A", "CAM06A", results$camera)
trx$group <- ifelse(trx$taxa=="Vulpes vulpes", "Fox", trx$group)
trx$group <- ifelse(trx$taxa=="Canis latrans", "Canidae", trx$group)
trx$group <- ifelse(trx$taxa=="Sciurus carolinensis", "Squirrel", trx$group)
trx$group <- ifelse(trx$taxa=="Sylvilagus floridanus", "Rabbits", trx$group)
trx$group <- ifelse(trx$taxa=="Turdus migratorius", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Carduelis tristis", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Dumetella carolinensis", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Quiscalus quiscula", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Zenaida macroura", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Corvus brachyrhynchos", "Corvid", trx$group)
trx$group <- ifelse(trx$taxa=="Urocyon cinereoargenteus", "Fox", trx$group)
trx$group <- ifelse(trx$taxa=="Passer domesticus", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Butorides virescens", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Neovison vison", "Mustelidae", trx$group)
trx$group <- ifelse(trx$taxa=="Cardinalis cardinalis", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Tamias striatus", "Rodent", trx$group)
trx$group <- ifelse(trx$taxa=="Lontra canadensis", "Mustelidae", trx$group)
trx$group <- ifelse(trx$taxa=="Ardea herodias", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$group)
trx$group <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$group)
View(trx)
trx <- left_join(trx, classes)
trx$taxa <- ifelse(trx$taxa=="Vulpes vulpes", "Vulpes vulpes and Urocyon Cinereoargentus", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Canis latrans", "Canidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Sciurus carolinensis", "Sciurus spp.", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Sylvilagus floridanus", "Leporidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Turdus migratorius", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Carduelis tristis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Dumetella carolinensis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Quiscalus quiscula", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Zenaida macroura", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Corvus brachyrhynchos", "Corvidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Urocyon cinereoargenteus", "Vulpes vulpes and Urocyon Cinereoargentus", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Passer domesticus", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Butorides virescens", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Neovison vison", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Cardinalis cardinalis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Tamias striatus", "Rodentia", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Lontra canadensis", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Ardea herodias", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$taxa)
trx<-subset(trx, subset=c("camera", "image", "taxa", "checkedbyhand"))
trx<-subset(trx, select=c("camera", "image", "taxa", "checkedbyhand"))
View(trx)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
## Libraries
library(dplyr)
library(ggplot2)
#Load the data
results <- read.csv("~/Desktop/test_results_usda_all.csv", header=TRUE)
classes <- read.csv("~/Desktop/listofnames.csv", header=TRUE)
results$image <- gsub(".*/\\s*|'.*", '', results$fileName)
errors <- c(4, 17)
results$modelfix<-NA
results$modelfix <- ifelse(results$guess1==22, results$guess2, results$guess1)
results$modelfix <- ifelse(results$guess1==1, results$guess2, results$modelfix)
results$modelfix <- ifelse(results$modelfix%in%errors, 18, results$modelfix)
results$camera <- gsub("_.*", '', results$image)
classes$modelfix<-classes$Class.ID
classes$group<-classes$Group.name
classes$taxa<-classes$scientific_name
results <- left_join(results, classes)
tocheck <- read.csv("~/Documents/git/cameratrap/WildlifeDetections_CameraTrap.csv", header=TRUE)
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$image <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$taxa <- paste(trx$Genus, trx$Species, sep=" ")
trx$camera <- substr(trx$image, 0, 6)
trx$camera <- ifelse(trx$camera == "ATXing", substr(trx$image, 8, 13), trx$camera)
results$camera <- ifelse(results$camera=="CAM6A", "CAM06A", results$camera)
trx$taxa <- ifelse(trx$taxa=="Vulpes vulpes", "Vulpes vulpes and Urocyon Cinereoargentus", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Canis latrans", "Canidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Sciurus carolinensis", "Sciurus spp.", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Sylvilagus floridanus", "Leporidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Turdus migratorius", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Carduelis tristis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Dumetella carolinensis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Quiscalus quiscula", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Zenaida macroura", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Corvus brachyrhynchos", "Corvidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Urocyon cinereoargenteus", "Vulpes vulpes and Urocyon Cinereoargentus", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Passer domesticus", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Butorides virescens", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Neovison vison", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Cardinalis cardinalis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Tamias striatus", "Rodentia", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Lontra canadensis", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Ardea herodias", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$taxa)
trx<-subset(trx, select=c("camera", "image", "taxa", "checkedbyhand"))
trx<-subset(trx, select=c("camera", "image", "taxa"))
trx <- left_join(trx, classes)
trx$checkedbyhand <- trx$Class.ID
trx <- subset(trx, select=c("image", "camera","checkedbyhand"))
goo <- left_join(results, trx)
goo <- full_join(results, trx)
howmanymatch <- unique(trx$image)
howmanymatch <- unique(trx$image)
foo <- goo[(goo$image%in%howmanymatch),]
View(foo)
goo <- left_join(results, trx)
howmanymatch <- unique(trx$image)
foo <- goo[(goo$image%in%howmanymatch),]
View(goo)
709/821
(exp(-0.48)-1)*100
(exp(0.14)-1)*100
(exp(0.4)-1)*100
(exp(0.19)-1)*100
(exp(0.35)-1)*100
(exp(0.42)-1)*100
(exp(-0.83)-1)*100
load("/Users/catchamberlain/Documents/git/regionalrisk/orig_full.Rdata")
orig.full
(exp(-0.12)-1)*100
broom::tidy(orig.full)
(exp(0.0008967095)-1)*100
bp <- read.csv("~/Downloads/perpheclim_Chamberlain_Catherine_201907221556/betpenbbch15.csv")
head(bp)
range(bp$Year)
table(bp$Year)
length(unique(bp$Site.name))
fs <- read.csv("~/Downloads/perpheclim_Chamberlain_Catherine_201907221650/fagsyl9and15.csv")
fs9 <- fs[!is.na(fs$STAGE09),]
fs15 <- fs[!is.na(fs$STAGE015),]
fs15 <- fs[!is.na(fs$STAGE15),]
range(fs9$Year)
table(fs9$Year)
#1997 1998 1999 2000 2001 2002 2003 2006 2007 2008 2009 2010 2011 2012 2013 2014
#27   35   35   28   32   34   33   33   35   31   33   31   29   34   32   32
length(unique(fs9$Site.name))
range(fs15$Year)
table(fs15$Year)
length(unique(fs15$Site.name))
df <- data.frame(conc = c(0, 100, 150, 200, 250, 300), absorb = c(0, 261, 362, 484, 529, 823))
lm(absorb ~ conc, data=df)
plot(absorb~conc, data=df)
plot(absorb/765~conc, data=df)
lm(absorb/765 ~ conc, data=df)
lm((absorb-765) ~ conc, data=df)
lm((absorb/765) ~ conc, data=df)
df.oneround <- data.frame(conc=c(0, 100, 150, 200, 250), absorb=c(0, 0.02, 3.39, 4.23, 7))
lm(absorb/765~conc, data=df.oneround)
df.oneround <- data.frame(conc=c(0, 100, 150, 200, 250), absorb=c(0, 0.02, 0.0339, 0.0423, 0.07))
lm(absorb/765~conc, data=df.oneround)
df.oneround <- data.frame(conc=c(100, 150, 200, 250), absorb=c(0.02, 0.0339, 0.0423, 0.07))
lm(absorb/765~conc, data=df.oneround)
df <- data.frame(conc = c(100, 150, 200, 250, 300), absorb = c(261, 362, 484, 529, 823))
lm((absorb/765) ~ conc, data=df)
rm(list=ls())
options(stringsAsFactors = FALSE)
# Load libraries
library(bayesplot) ## for plotting
library(egg) ## for plotting
library(shinystan)
library(rstanarm)
library(rstan)
library(brms)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
# Set working directory
setwd("~/Documents/git/chillfreeze/analyses")
source('source/stan_utility.R')
chill.stan <- read.csv("output/clean_dvr_60dayoutput.csv", header=TRUE)
chill.stan$thickness <- ((chill.stan$thick1 + chill.stan$thick2)/2)*10
chill.stan <- chill.stan[!is.na(chill.stan$thickness),]
hist(chill.stan$thickness)
thickness.mod <- brm(thickness ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2|species), data=chill.stan,
iter=4000, warmup=2500, control=list(max_treedepth = 15,adapt_delta = 0.99))
thickness.mod
save(thickness.mod, file="~/Documents/git/chillfreeze/analyses/stan/thickness_brms.Rdata")
chill.stan$species.name <- NA
chill.stan$species.name <- ifelse(chill.stan$species=="ACESAC", "Acer saccharinum", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="ALNRUG", "Alnus rugosa", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="BETPAP", "Betula papyrifera", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="BETPOP", "Betula populifolia", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="CORRAC", "Cornus racemosa", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="SALPUR", "Salix purpurea", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="SORAME", "Sorbus americana", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="VIBDEN", "Viburnum dentatum", chill.stan$species.name)
#chill.stan$species.name <- ifelse(chill.stan$species=="FAGGRA", "Fagus grandifolia", chill.stan$species.name)
#chill.stan$species.name <- ifelse(chill.stan$species=="NYSSYL", "Nyssa sylvatica", chill.stan$species.name)
#### Now for mu plots based of bb_analysis/models_stan_plotting.R ###
figpath <- "figures"
figpathmore <- "thickness_brms" ### change based on model
source("exp_muplot_brms.R")
cols <- adjustcolor("indianred3", alpha.f = 0.3)
my.pal <- rep(brewer.pal(n = 10, name = "Paired"), 8)
# display.brewer.all()
alphahere = 0.4
xlab <- "Model estimate of change in \nrelative growth rate (cm/days)" ## change based on model
#sumer.ni <- summary()$summary
#sumer.ni[grep("mu_", rownames(sumer.ni)),]
#sort(unique(chill.stan$species)) # numbers are alphabetical
spp <- unique(chill.stan$species)
modelhere <- thickness.mod
tx <- coef(modelhere, prob=c(0.25, 0.75))$species[, c(1, 3:4), 2] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(`25%` = Q25) %>%
rename(`75%` = Q75) %>%
dplyr::select(mean, `25%`, `75%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("tx", "[", i, "]", sep="")
}
tx$parameter<-new.names
chill1 <- coef(modelhere, prob=c(0.25, 0.75))$species[, c(1, 3:4), 3] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(`25%` = Q25) %>%
rename(`75%` = Q75) %>%
dplyr::select( mean, `25%`, `75%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("chill1", "[", i, "]", sep="")
}
chill1$parameter<-new.names
mod.ranef<-full_join(tx, chill1)
chill2 <- coef(modelhere, prob=c(0.25, 0.75))$species[, c(1, 3:4), 4] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(`25%` = Q25) %>%
rename(`75%` = Q75) %>%
dplyr::select( mean, `25%`, `75%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("chill2", "[", i, "]", sep="")
}
chill2$parameter<-new.names
mod.ranef <- full_join(mod.ranef, chill2)
txchill1 <- coef(modelhere, prob=c(0.25, 0.75))$species[, c(1, 3:4), 5] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(`25%` = Q25) %>%
rename(`75%` = Q75) %>%
dplyr::select( mean, `25%`, `75%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("tx:chill1", "[", i, "]", sep="")
}
txchill1$parameter<-new.names
mod.ranef<-full_join(mod.ranef, txchill1)
txchill2 <- coef(modelhere, prob=c(0.25, 0.75))$species[, c(1, 3:4), 6] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(`25%` = Q25) %>%
rename(`75%` = Q75) %>%
dplyr::select( mean, `25%`, `75%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("tx:chill2", "[", i, "]", sep="")
}
txchill2$parameter<-new.names
mod.ranef<-full_join(mod.ranef, txchill2)
modoutput <- tidy(modelhere, prob=c(0.5))
library(RColorBrewer)
library(rstan)
library(dplyr)
library(broom)
tx <- coef(modelhere, prob=c(0.25, 0.75))$species[, c(1, 3:4), 2] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(`25%` = Q25) %>%
rename(`75%` = Q75) %>%
dplyr::select(mean, `25%`, `75%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("tx", "[", i, "]", sep="")
}
tx$parameter<-new.names
chill1 <- coef(modelhere, prob=c(0.25, 0.75))$species[, c(1, 3:4), 3] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(`25%` = Q25) %>%
rename(`75%` = Q75) %>%
dplyr::select( mean, `25%`, `75%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("chill1", "[", i, "]", sep="")
}
chill1$parameter<-new.names
mod.ranef<-full_join(tx, chill1)
chill2 <- coef(modelhere, prob=c(0.25, 0.75))$species[, c(1, 3:4), 4] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(`25%` = Q25) %>%
rename(`75%` = Q75) %>%
dplyr::select( mean, `25%`, `75%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("chill2", "[", i, "]", sep="")
}
chill2$parameter<-new.names
mod.ranef <- full_join(mod.ranef, chill2)
txchill1 <- coef(modelhere, prob=c(0.25, 0.75))$species[, c(1, 3:4), 5] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(`25%` = Q25) %>%
rename(`75%` = Q75) %>%
dplyr::select( mean, `25%`, `75%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("tx:chill1", "[", i, "]", sep="")
}
txchill1$parameter<-new.names
mod.ranef<-full_join(mod.ranef, txchill1)
txchill2 <- coef(modelhere, prob=c(0.25, 0.75))$species[, c(1, 3:4), 6] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(`25%` = Q25) %>%
rename(`75%` = Q75) %>%
dplyr::select( mean, `25%`, `75%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("tx:chill2", "[", i, "]", sep="")
}
txchill2$parameter<-new.names
mod.ranef<-full_join(mod.ranef, txchill2)
modoutput <- tidy(modelhere, prob=c(0.5))
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
muplotfx(modelhere, "", 8, 8, c(0,5), c(-1, 1) , 1.2, 3.5)
xlab <- "Model estimate of change in \nleaf thickness (μm)" ## change based on model
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
muplotfx(modelhere, "", 8, 8, c(0,5), c(-1, 1) , 1.2, 3.5)
xlab <- "Model estimate of change in \nleaf thickness (( ", mu, " )m)" ## change based on model
xlab <- expression(paste("Model estimate of change in \nleaf thickness (( ", mu, " )m)")) ## change based on model
xlab
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
muplotfx(modelhere, "", 8, 8, c(0,5), c(-1, 1) , 1.2, 3.5)
my.pal <- rep(brewer.pal(n = 10, name = "Paired"), 8)
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
muplotfx(modelhere, "", 8, 8, c(0,5), c(-1, 1) , 1.2, 3.5)
xlab <- "Model estimate of change in \nleaf thickness (μm)" ## change based on model
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
muplotfx(modelhere, "", 8, 8, c(0,5), c(-1, 1) , 1.2, 3.5)
xlab <- "Model estimate of change in \nleaf thickness (",mu,"m)" ## change based on model
xlab <- expression(paste("Model estimate of change in \nleaf thickness (",mu,"m)")) ## change based on model
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
muplotfx(modelhere, "", 8, 8, c(0,5), c(-0.3, 0.3) , 0.5, 3.5)
xlab <- expression(paste("Model estimate of change in \nleaf thickness ("mu"m)")) ## change based on model
xlab <- expression(paste("Model estimate of change in \nleaf thickness ("mu,"m)")) ## change based on model
xlab <- expression(paste("Model estimate of change in \nleaf thickness ( ", mu," m)")) ## change based on model
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
muplotfx(modelhere, "", 8, 8, c(0,5), c(-0.5, 0.5) , 0.7, 3.5)
xlab <- "Model estimate of change in \nleaf thickness ($\\mu$m)" ## change based on model
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
muplotfx(modelhere, "", 8, 8, c(0,5), c(-0.5, 0.5) , 0.7, 3.5)
install.packages("latex2exp")
library(latex)
library(latex2exp)
xlab <- "Model estimate of change in \nleaf thickness ($\\mu$m)" ## change based on model
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
muplotfx(modelhere, "", 8, 8, c(0,5), c(-0.5, 0.5) , 0.7, 3.5)
xlab <- TeX("Model estimate of change in \nleaf thickness ($\\mu$m)") ## change based on model
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
muplotfx(modelhere, "", 8, 8, c(0,5), c(-0.5, 0.5) , 0.7, 3.5)
xlab <- TeX("Model estimate of change in \nleaf thickness ($\mu$m)") ## change based on model
xlab <- TeX("Model estimate of change in \nleaf thickness (\\mum)") ## change based on model
xlab
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
muplotfx(modelhere, "", 8, 8, c(0,5), c(-0.5, 0.5) , 0.7, 3.5)
xlab <- TeX("Model estimate of change in \nleaf thickness ($\\mu$m)") ## change based on model
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
muplotfx(modelhere, "", 8, 8, c(0,5), c(-0.5, 0.5) , 0.7, 3.5)
xlab <- expression("Model estimate of change in \nleaf thickness (",mu,"m)") ## change based on model
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
muplotfx(modelhere, "", 8, 8, c(0,5), c(-0.5, 0.5) , 0.7, 3.5)
xlab <- expression("Model estimate of change in \nleaf thickness ("mu"m)") ## change based on model
xlab <- expression("Model estimate of change in \nleaf thickness ("~mu"m)") ## change based on model
xlab <- expression(paste("Model estimate of change in \nleaf thickness (",phantom(x),mu,"m)")) ## change based on model
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
muplotfx(modelhere, "", 8, 8, c(0,5), c(-0.5, 0.5) , 0.7, 3.5)
xlab <- expression(paste("Model estimate of change in \nleaf thickness (", mu, "m)")) ## change based on model
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
muplotfx(modelhere, "", 8, 8, c(0,5), c(-0.5, 0.5) , 0.7, 3.5)
mu <- expression(mu)
xlab <- paste("Model estimate of change in \nleaf thickness (", mu, "m)", sep="") ## change based on model
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
muplotfx(modelhere, "", 8, 8, c(0,5), c(-0.5, 0.5) , 0.6, 3.5)
mu
xlab <- expression(paste("Model estimate of change in \nleaf thickness (", mu, "m)", sep="")) ## change based on model
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
muplotfx(modelhere, "", 8, 8, c(0,5), c(-0.5, 0.5) , 0.6, 3.5)
xlab <- expression(paste("Model estimate of change in \nleaf thickness ( ", mu, " m)", sep="")) ## change based on model
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
muplotfx(modelhere, "", 8, 8, c(0,5), c(-0.5, 0.5) , 0.6, 3.5)
xlab <- expression(paste("Model estimate of change in leaf thickness ( ", mu, " m)", sep="")) ## change based on model
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
muplotfx(modelhere, "", 8, 8, c(0,5), c(-0.5, 0.5) , 0.6, 3.5)
xlab <- expression(paste("Model estimate of change in leaf thickness (", mu, "m)", sep="")) ## change based on model
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
muplotfx(modelhere, "", 8, 8, c(0,5), c(-0.5, 0.5) , 0.6, 3.5)
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
muplotfx(modelhere, "", 8, 8, c(0,5), c(-0.5, 0.5) , 0.55, 3.5)
