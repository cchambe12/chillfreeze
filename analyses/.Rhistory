chill.stan$species.name <- ifelse(chill.stan$species=="ACESAC", "Acer saccharinum", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="ALNRUG", "Alnus rugosa", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="BETPAP", "Betula papyrifera", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="BETPOP", "Betula populifolia", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="CORRAC", "Cornus racemosa", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="SALPUR", "Salix purpurea", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="SORAME", "Sorbus americana", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="VIBDEN", "Viburnum dentatum", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="FAGGRA", "Fagus grandifolia", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="NYSSYL", "Nyssa sylvatica", chill.stan$species.name)
rmspp <- c("FAGGRA", "NYSSYL")
chill.stan <- chill.stan[!(chill.stan$species%in%rmspp),]
chill.stan$chillnew <- ifelse(chill.stan$chill==1, 3, NA)
chill.stan$chillnew <- ifelse(chill.stan$chill==2, 2, chill.stan$chillnew)
chill.stan$chillnew <- ifelse(chill.stan$chill==3, 1, chill.stan$chillnew)
chill.stan$chill1 = ifelse(chill.stan$chillnew == 2, 1, 0)
chill.stan$chill2 = ifelse(chill.stan$chillnew == 3, 1, 0)
cols <- adjustcolor("indianred3", alpha.f = 0.3)
my.pal <-viridis_pal(option="viridis")(8)
# display.brewer.all()
alphahere = 0.4
spp <- unique(chill.stan$species)
tx <- coef(modelhere, prob=c(0.10, 0.90))$species[, c(1, 3:4), 2] %>%
as.data.frame() %>%
round(digits = 2) %>%
dplyr::rename(mean = Estimate) %>%
dplyr::rename(`10%` = Q10) %>%
dplyr::rename(`90%` = Q90) %>%
dplyr::select(mean, `10%`, `90%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("tx", "[", i, "]", sep="")
}
tx$parameter<-new.names
chill1 <- coef(modelhere, prob=c(0.10, 0.90))$species[, c(1, 3:4), 3] %>%
as.data.frame() %>%
round(digits = 2) %>%
dplyr::rename(mean = Estimate) %>%
dplyr::rename(`10%` = Q10) %>%
dplyr::rename(`90%` = Q90) %>%
dplyr::select( mean, `10%`, `90%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("chill1", "[", i, "]", sep="")
}
chill1$parameter<-new.names
mod.ranef<-dplyr::full_join(tx, chill1)
chill2 <- coef(modelhere, prob=c(0.10, 0.90))$species[, c(1, 3:4), 4] %>%
as.data.frame() %>%
round(digits = 2) %>%
dplyr::rename(mean = Estimate) %>%
dplyr::rename(`10%` = Q10) %>%
dplyr::rename(`90%` = Q90) %>%
dplyr::select( mean, `10%`, `90%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("chill2", "[", i, "]", sep="")
}
chill2$parameter<-new.names
mod.ranef <- dplyr::full_join(mod.ranef, chill2)
txchill1 <- coef(modelhere, prob=c(0.10, 0.90))$species[, c(1, 3:4), 5] %>%
as.data.frame() %>%
round(digits = 2) %>%
dplyr::rename(mean = Estimate) %>%
dplyr::rename(`10%` = Q10) %>%
dplyr::rename(`90%` = Q90) %>%
dplyr::select( mean, `10%`, `90%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("tx:chill1", "[", i, "]", sep="")
}
txchill1$parameter<-new.names
mod.ranef<-dplyr::full_join(mod.ranef, txchill1)
txchill2 <- coef(modelhere, prob=c(0.10, 0.90))$species[, c(1, 3:4), 6] %>%
as.data.frame() %>%
round(digits = 2) %>%
dplyr::rename(mean = Estimate) %>%
dplyr::rename(`10%` = Q10) %>%
dplyr::rename(`90%` = Q90) %>%
dplyr::select( mean, `10%`, `90%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("tx:chill2", "[", i, "]", sep="")
}
txchill2$parameter<-new.names
mod.ranef<-dplyr::full_join(mod.ranef, txchill2)
### Now to add on 50% cred intervals on top
tx50 <- coef(modelhere, prob=c(0.25, 0.75))$species[, c(1, 3:4), 2] %>%
as.data.frame() %>%
round(digits = 2) %>%
dplyr::rename(mean = Estimate) %>%
dplyr::rename(`25%` = Q25) %>%
dplyr::rename(`75%` = Q75) %>%
dplyr::select(mean, `25%`, `75%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("tx", "[", i, "]", sep="")
}
tx50$parameter<-new.names
chill150 <- coef(modelhere, prob=c(0.25, 0.75))$species[, c(1, 3:4), 3] %>%
as.data.frame() %>%
round(digits = 2) %>%
dplyr::rename(mean = Estimate) %>%
dplyr::rename(`25%` = Q25) %>%
dplyr::rename(`75%` = Q75) %>%
dplyr::select(mean, `25%`, `75%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("chill1", "[", i, "]", sep="")
}
chill150$parameter<-new.names
mod.ranef50<-dplyr::full_join(tx50, chill150)
chill250 <- coef(modelhere, prob=c(0.25, 0.75))$species[, c(1, 3:4), 4] %>%
as.data.frame() %>%
round(digits = 2) %>%
dplyr::rename(mean = Estimate) %>%
dplyr::rename(`25%` = Q25) %>%
dplyr::rename(`75%` = Q75) %>%
dplyr::select(mean, `25%`, `75%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("chill2", "[", i, "]", sep="")
}
chill250$parameter<-new.names
mod.ranef50 <- dplyr::full_join(mod.ranef50, chill250)
txchill150 <- coef(modelhere, prob=c(0.25, 0.75))$species[, c(1, 3:4), 5] %>%
as.data.frame() %>%
round(digits = 2) %>%
dplyr::rename(mean = Estimate) %>%
dplyr::rename(`25%` = Q25) %>%
dplyr::rename(`75%` = Q75) %>%
dplyr::select(mean, `25%`, `75%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("tx:chill1", "[", i, "]", sep="")
}
txchill150$parameter<-new.names
mod.ranef50<-dplyr::full_join(mod.ranef50, txchill150)
txchill250 <- coef(modelhere, prob=c(0.25, 0.75))$species[, c(1, 3:4), 6] %>%
as.data.frame() %>%
round(digits = 2) %>%
dplyr::rename(mean = Estimate) %>%
dplyr::rename(`25%` = Q25) %>%
dplyr::rename(`75%` = Q75) %>%
dplyr::select(mean, `25%`, `75%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("tx:chill2", "[", i, "]", sep="")
}
txchill250$parameter<-new.names
mod.ranef50<-dplyr::full_join(mod.ranef50, txchill250)
mod.ranef <- dplyr::left_join(mod.ranef, mod.ranef50)
modoutput <- tidy(modelhere, conf.level=c(0.9))
mod50 <- tidy(modelhere, conf.level =c(0.5))
names(mod50) <- c("","","", "term", "estimate", "std.error", "low50", "high50")
mod50 <- mod50[4:8]
names(modoutput) <- c("","","", "term", "estimate", "std.error", "lower", "upper")
modoutput <- modoutput[4:8]
modoutput <- dplyr::left_join(modoutput, mod50)
modoutput <-modoutput[-1,]
#quartz()
source("source/exp_muplot_brms.R")
muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 11, 3.5) ## use for DVR
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(gridExtra)
library(RColorBrewer)
# Set Working Directory
setwd("~/Documents/git/chillfreeze/analyses")
chillfrz <- read.csv("output/clean_dvr_traits.csv", header=TRUE)
rmspp <- c("NYSSYL", "FAGGRA")
chillfrz <- chillfrz[!(chillfrz$species%in%rmspp),]
bbandgs <- subset(chillfrz, select=c("budburst", "leafout", "tx", "chill", "budsetdoy", "species"))
bbandgs <- na.omit(bbandgs)
bbandgs$txchill <- paste0(bbandgs$chill, bbandgs$tx)
unique(bbandgs$txchill)
#### Let's look at overall averages and then do barplots... I think that will be the best first stab
bbandgs$lobyspp <- ave(bbandgs$leafout, bbandgs$species)
bbandgs$code <- reorder(bbandgs$species, bbandgs$lobyspp) ## Levels: SALPUR CORRAC BETPAP BETPOP ALNRUG VIBDEN SORAME ACESAC
### Okay, now we're going to try and rank them based on order by treatment by species
# Step 1)
bbandgs$lobytxchill <- ave(bbandgs$leafout, bbandgs$species, bbandgs$txchill)
bbandgs$species_tx <- paste(bbandgs$species, bbandgs$txchill, sep="_")
bbandgs$code <- reorder(bbandgs$species_tx, bbandgs$lobytxchill)
bbandgs$rank <- rank(bbandgs$lobytxchill, bbandgs$species_tx)
bbandgs.sub <- subset(bbandgs, select=c("rank", "txchill", "species"))
bbandgs.sub <- bbandgs.sub[!duplicated(bbandgs.sub),]
bbandgs.sub <- arrange(bbandgs.sub, rank)
bbandgs.sub$rank_order <- 1:nrow(bbandgs.sub)
# Step 2) Plot using this rank
cols <- colorRampPalette(brewer.pal(8,"Dark2"))(8)
rankbytx <- ggplot(bbandgs.sub, aes(y=rank_order, x=txchill, col=species)) +
geom_line(aes(group=species)) +
coord_cartesian(ylim=c(0, 55)) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.text.align = 0,
legend.position = "none",
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.text = element_text(face="italic")) +
xlab("") +
ylab("Order of leafout") +
scale_color_manual(name="Species", values=cols,
labels=c("ACESAC"="Acer saccharinum",
"ALNRUG"="Alnus rugosa",
"BETPAP"="Betula papyrifera",
"BETPOP"="Betula populifolia",
"CORRAC"="Cornus racemosa",
"SALPUR"="Salix purpurea",
"SORAME"="Sorbus americana",
"VIBDEN"="Viburnum dentatum")) +
scale_x_discrete(labels=c("10"="Control x \n4wks Chill",
"11"="Spring Freeze x \n4wks Chill",
"20"="Control x \n6wks Chill",
"21"="Spring Freeze x \n6wks Chill",
"30"="Control x \n8wks Chill",
"31"="Spring Freeze x \n8wks Chill")) + scale_y_continuous(expand=c(0,0))
#### Now let's look at raw leafout data by treatments
leafoutbytx <- ggplot(bbandgs, aes(y=leafout, x=txchill, col=species)) +  geom_jitter(width=0.2) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.text.align = 0,
legend.position="none",
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.text = element_text(face="italic")) +
xlab("") +
ylab("Day of leafout") +
scale_color_manual(name="Species", values=cols,
labels=c("ACESAC"="Acer saccharinum",
"ALNRUG"="Alnus rugosa",
"BETPAP"="Betula papyrifera",
"BETPOP"="Betula populifolia",
"CORRAC"="Cornus racemosa",
"SALPUR"="Salix purpurea",
"SORAME"="Sorbus americana",
"VIBDEN"="Viburnum dentatum")) +
scale_x_discrete(labels=c("10"="Control x \n4wks Chill",
"11"="Spring Freeze x \n4wks Chill",
"20"="Control x \n6wks Chill",
"21"="Spring Freeze x \n6wks Chill",
"30"="Control x \n8wks Chill",
"31"="Spring Freeze x \n8wks Chill"))
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
mylegend<-g_legend(leafoutbytx)
png("figures/leafout_orderandraw.png", ### makes it a nice png and saves it so it doesn't take forever to load as a pdf!
width=12,
height=4.5, units="in", res = 350 )
grid.arrange(rankbytx, leafoutbytx, mylegend, ncol=3, widths=c(1.2,1.2,0.35))
dev.off()
# Step 3: Now let's try and reorder and be easier about days ranking system...
bbandgs$lobytxchill <- ave(bbandgs$leafout, bbandgs$species, bbandgs$txchill)
### So I think this has to be a for loop... where we order species_tx by rank and then adjust by window of 2 days
speciestxrank <- subset(bbandgs, select=c(species_tx, lobytxchill, txchill, rank))
speciestxrank <- speciestxrank[!duplicated(speciestxrank),]
speciestxrank <- arrange(speciestxrank, rank)
speciestxrank$rank_order <- 1:nrow(speciestxrank)
speciestxrank <- arrange(speciestxrank, txchill, rank)
speciestxrank$rank_adj <- NA
txs <- sort(unique(speciestxrank$species_tx))
newranks <- c()
for(j in 1:length(txs)) {  #j=5
subby <- subset(speciestxrank, as.numeric(speciestxrank$txchill)==txs[j])
for(i in c(1:nrow(subby))) { ## i=2
if(i==1) {
subby$rank_adj[i] <- subby$rank_order[i]
} else if (i>=3 && (subby$lobytxchill[i] - 3) <= subby$lobytxchill[i-2]) {
subby$rank_adj[i] <- subby$rank_order[i-2] + 0.8
} else if (i>=2 && (subby$lobytxchill[i] - 3) <= subby$lobytxchill[i-1]) {
subby$rank_adj[i] <- subby$rank_order[i-1] + 0.4
} else
subby$rank_adj[i] <- subby$rank_order[i]
}
newranks <- c(newranks, subby$rank_adj)
}
speciestxrank$rank_adj <- NULL
spp_rankfix <- cbind(speciestxrank, newranks)
bbandgs_rankfix <- full_join(bbandgs, spp_rankfix)
cols <- colorRampPalette(brewer.pal(8,"Dark2"))(8)
rankadj_bytx <- ggplot(bbandgs_rankfix, aes(y=newranks, x=txchill, col=species)) +
geom_line(aes(group=species)) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.text.align = 0,
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.text = element_text(face="italic")) +
xlab("") +
ylab("Order/Rank of leafout") +
scale_color_manual(name="Species", values=cols,
labels=c("ACESAC"="Acer saccharinum",
"ALNRUG"="Alnus rugosa",
"BETPAP"="Betula papyrifera",
"BETPOP"="Betula populifolia",
"CORRAC"="Cornus racemosa",
"SALPUR"="Salix purpurea",
"SORAME"="Sorbus americana",
"VIBDEN"="Viburnum dentatum")) +
scale_x_discrete(labels=c("10"="Control x \n4wks Chill",
"11"="Spring Freeze x \n4wks Chill",
"20"="Control x \n6wks Chill",
"21"="Spring Freeze x \n6wks Chill",
"30"="Control x \n8wks Chill",
"31"="Spring Freeze x \n8wks Chill")) + scale_y_continuous(expand = c(0, 0))
quartz()
rankadj_bytx
rankbytx
leafoutbytx
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(gridExtra)
library(RColorBrewer)
# Set Working Directory
setwd("~/Documents/git/chillfreeze/analyses")
chillfrz <- read.csv("output/clean_dvr_traits.csv", header=TRUE)
rmspp <- c("NYSSYL", "FAGGRA")
chillfrz <- chillfrz[!(chillfrz$species%in%rmspp),]
bbandgs <- subset(chillfrz, select=c("budburst", "leafout", "tx", "chill", "budsetdoy", "species"))
bbandgs <- na.omit(bbandgs)
bbandgs$txchill <- paste0(bbandgs$chill, bbandgs$tx)
unique(bbandgs$txchill)
#### Let's look at overall averages and then do barplots... I think that will be the best first stab
bbandgs$lobyspp <- ave(bbandgs$leafout, bbandgs$species)
bbandgs$code <- reorder(bbandgs$species, bbandgs$lobyspp) ## Levels: SALPUR CORRAC BETPAP BETPOP ALNRUG VIBDEN SORAME ACESAC
### Okay, now we're going to try and rank them based on order by treatment by species
# Step 1)
bbandgs$lobytxchill <- ave(bbandgs$leafout, bbandgs$species, bbandgs$txchill)
bbandgs$species_tx <- paste(bbandgs$species, bbandgs$txchill, sep="_")
bbandgs$code <- reorder(bbandgs$species_tx, bbandgs$lobytxchill)
bbandgs$rank <- rank(bbandgs$lobytxchill, bbandgs$species_tx)
bbandgs.sub <- subset(bbandgs, select=c("rank", "txchill", "species"))
bbandgs.sub <- bbandgs.sub[!duplicated(bbandgs.sub),]
bbandgs.sub <- arrange(bbandgs.sub, rank)
bbandgs.sub$rank_order <- 1:nrow(bbandgs.sub)
# Step 2) Plot using this rank
cols <- colorRampPalette(brewer.pal(8,"Dark2"))(8)
rankbytx <- ggplot(bbandgs.sub, aes(y=rank_order, x=txchill, col=species)) +
geom_line(aes(group=species)) +
coord_cartesian(ylim=c(0, 55)) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.text.align = 0,
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.text = element_text(face="italic")) +
xlab("") +
ylab("Order of leafout") +
scale_color_manual(name="Species", values=cols,
labels=c("ACESAC"="Acer saccharinum",
"ALNRUG"="Alnus rugosa",
"BETPAP"="Betula papyrifera",
"BETPOP"="Betula populifolia",
"CORRAC"="Cornus racemosa",
"SALPUR"="Salix purpurea",
"SORAME"="Sorbus americana",
"VIBDEN"="Viburnum dentatum")) +
scale_x_discrete(labels=c("10"="Control x \n4wks Chill",
"11"="Spring Freeze x \n4wks Chill",
"20"="Control x \n6wks Chill",
"21"="Spring Freeze x \n6wks Chill",
"30"="Control x \n8wks Chill",
"31"="Spring Freeze x \n8wks Chill")) + scale_y_continuous(expand=c(0,0))
png("figures/leafout_orderbyrank.png", ### makes it a nice png and saves it so it doesn't take forever to load as a pdf!
width=6,
height=5, units="in", res = 500 )
grid.arrange(rankbytx)
dev.off()
# Step 1) For budset now
bbandgs$bsetbytxchill <- ave(bbandgs$budsetdoy, bbandgs$species, bbandgs$txchill)
bbandgs$species_tx <- paste(bbandgs$species, bbandgs$txchill, sep="_")
bbandgs$codebset <- reorder(bbandgs$species_tx, bbandgs$bsetbytxchill)
bbandgs$rankbset <- rank(bbandgs$bsetbytxchill, bbandgs$species_tx)
# Step 2) Plot using this rank
cols <- colorRampPalette(brewer.pal(8,"Dark2"))(8)
bsetrankbytx <- ggplot(bbandgs, aes(y=rankbset, x=txchill, col=species)) +
geom_line(aes(group=species)) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.text.align = 0,
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.text = element_text(face="italic")) +
xlab("") +
ylab("Order/rank of budset") +
scale_color_manual(name="Species", values=cols,
labels=c("ACESAC"="Acer saccharinum",
"ALNRUG"="Alnus rugosa",
"BETPAP"="Betula papyrifera",
"BETPOP"="Betula populifolia",
"CORRAC"="Cornus racemosa",
"SALPUR"="Salix purpurea",
"SORAME"="Sorbus americana",
"VIBDEN"="Viburnum dentatum")) +
scale_x_discrete(labels=c("10"="Control x \n4wks Chill",
"11"="Spring Freeze x \n4wks Chill",
"20"="Control x \n6wks Chill",
"21"="Spring Freeze x \n6wks Chill",
"30"="Control x \n8wks Chill",
"31"="Spring Freeze x \n8wks Chill")) + scale_y_continuous(expand=c(0,0))
png("figures/budset_orderbyrank.png", ### makes it a nice png and saves it so it doesn't take forever to load as a pdf!
width=6,
height=5, units="in", res = 500 )
grid.arrange(bsetrankbytx)
dev.off()
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(gridExtra)
library(RColorBrewer)
# Set Working Directory
setwd("~/Documents/git/chillfreeze/analyses")
chillfrz <- read.csv("output/clean_dvr_traits.csv", header=TRUE)
rmspp <- c("NYSSYL", "FAGGRA")
chillfrz <- chillfrz[!(chillfrz$species%in%rmspp),]
### It would be good to know if the order of species changes
# in any of your treatments. You can use  the
# 'order' or 'rank' command in R I think to transform mean leafout to just
#a rank and try to plot how consistent this is across treatments.
bbandgs <- subset(chillfrz, select=c("budburst", "leafout", "tx", "chill", "budsetdoy", "species"))
bbandgs <- na.omit(bbandgs)
bbandgs$txchill <- paste0(bbandgs$chill, bbandgs$tx)
unique(bbandgs$txchill)
# "10"  "11"  "20"  "21"  "30"  "31"
#### Let's look at overall averages and then do barplots... I think that will be the best first stab
bbandgs$lobyspp <- ave(bbandgs$leafout, bbandgs$species)
bbandgs$code <- reorder(bbandgs$species, bbandgs$lobyspp) ## Levels: SALPUR CORRAC BETPAP BETPOP ALNRUG VIBDEN SORAME ACESAC
### Okay, now we're going to try and rank them based on order by treatment by species
# Step 1)
bbandgs$lobytxchill <- ave(bbandgs$leafout, bbandgs$species, bbandgs$txchill)
bbandgs$species_tx <- paste(bbandgs$species, bbandgs$txchill, sep="_")
bbandgs$code <- reorder(bbandgs$species_tx, bbandgs$lobytxchill)
bbandgs$rank <- rank(bbandgs$lobytxchill, bbandgs$species_tx)
bbandgs.sub <- subset(bbandgs, select=c("rank", "txchill", "species"))
bbandgs.sub <- bbandgs.sub[!duplicated(bbandgs.sub),]
bbandgs.sub <- arrange(bbandgs.sub, rank)
bbandgs.sub$rank_order <- 1:nrow(bbandgs.sub)
# Step 2) Plot using this rank
cols <- colorRampPalette(brewer.pal(8,"Dark2"))(8)
rankbytx <- ggplot(bbandgs.sub, aes(y=rank_order, x=txchill, col=species)) +
geom_line(aes(group=species)) +
coord_cartesian(ylim=c(0, 55)) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.text.align = 0,
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.text = element_text(face="italic")) +
xlab("") +
ylab("Order of leafout") +
scale_color_manual(name="Species", values=cols,
labels=c("ACESAC"="Acer saccharinum",
"ALNRUG"="Alnus rugosa",
"BETPAP"="Betula papyrifera",
"BETPOP"="Betula populifolia",
"CORRAC"="Cornus racemosa",
"SALPUR"="Salix purpurea",
"SORAME"="Sorbus americana",
"VIBDEN"="Viburnum dentatum")) +
scale_x_discrete(labels=c("10"="Control x \n4wks Chill",
"11"="Spring Freeze x \n4wks Chill",
"20"="Control x \n6wks Chill",
"21"="Spring Freeze x \n6wks Chill",
"30"="Control x \n8wks Chill",
"31"="Spring Freeze x \n8wks Chill")) + scale_y_continuous(expand=c(0,0))
png("figures/leafoutorder_byrank.png", ### makes it a nice png and saves it so it doesn't take forever to load as a pdf!
width=7,
height=5, units="in", res = 500 )
grid.arrange(rankbytx)
dev.off()
## Great!!
# Step 1) For budset now
bbandgs$bsetbytxchill <- ave(bbandgs$budsetdoy, bbandgs$species, bbandgs$txchill)
bbandgs$species_tx <- paste(bbandgs$species, bbandgs$txchill, sep="_")
bbandgs$codebset <- reorder(bbandgs$species_tx, bbandgs$bsetbytxchill)
bbandgs$rankbset <- rank(bbandgs$bsetbytxchill, bbandgs$species_tx)
# Step 2) Plot using this rank
cols <- colorRampPalette(brewer.pal(8,"Dark2"))(8)
bsetrankbytx <- ggplot(bbandgs, aes(y=rankbset, x=txchill, col=species)) +
geom_line(aes(group=species)) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.text.align = 0,
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.text = element_text(face="italic")) +
xlab("") +
ylab("Order/rank of budset") +
scale_color_manual(name="Species", values=cols,
labels=c("ACESAC"="Acer saccharinum",
"ALNRUG"="Alnus rugosa",
"BETPAP"="Betula papyrifera",
"BETPOP"="Betula populifolia",
"CORRAC"="Cornus racemosa",
"SALPUR"="Salix purpurea",
"SORAME"="Sorbus americana",
"VIBDEN"="Viburnum dentatum")) +
scale_x_discrete(labels=c("10"="Control x \n4wks Chill",
"11"="Spring Freeze x \n4wks Chill",
"20"="Control x \n6wks Chill",
"21"="Spring Freeze x \n6wks Chill",
"30"="Control x \n8wks Chill",
"31"="Spring Freeze x \n8wks Chill")) + scale_y_continuous(expand=c(0,0))
png("figures/budsetorder_byrank.png", ### makes it a nice png and saves it so it doesn't take forever to load as a pdf!
width=7,
height=5, units="in", res = 500 )
grid.arrange(bsetrankbytx)
dev.off()
