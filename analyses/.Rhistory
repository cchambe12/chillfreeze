library(shinystan)
library(rstanarm)
library(rstan)
library(brms)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
# Set working directory
setwd("~/Documents/git/chillfreeze/analyses")
source('source/stan_utility.R')
#chill.stan <- read.csv("output/clean_dvr_60dayoutput.csv", header=TRUE)
#chill.stan <- read.csv("output/fakedata_height.csv", header=TRUE)
chill.stan <- read.csv("output/clean_dvr_traits.csv")
#chill.stan <- read.csv("output/clean_dvr_drought.csv")
chill.stan <- chill.stan[!is.na(chill.stan$dvr),]
rmspp <- c("FAGGRA", "NYSSYL")
chill.stan <- chill.stan[!(chill.stan$species%in%rmspp),]
#chill.stan$gslength.bb <- chill.stan$budsetdoy - chill.stan$budburst
#chill.stan$gslength.lo <- chill.stan$budsetdoy - chill.stan$leafout
chill.stan.gs <- chill.stan[!is.na(chill.stan$gslength),]
chill.stan$bset - chill.stan$budburst
rm(list=ls())
options(stringsAsFactors = FALSE)
# Load libraries
library(dplyr)
library(lubridate)
library(tidyr)
library(RColorBrewer)
library(egg)
library(brms) ## just for initial glances during experiment!
library(rstan)
# Setting working directory
setwd("~/Documents/git/chillfreeze/analyses/input")
obs <- read.csv("chillobs.csv", header = TRUE)
## Start cleaning a bit...
obs$bb <- as.Date(obs$bb, "%m/%d/%y")
obs$bb <- yday(obs$bb)
obs$lo <- as.Date(obs$lo, "%m/%d/%y")
obs$lo <- yday(obs$lo)
obs$start <- as.Date(obs$start, format = "%m/%d/%y")
obs$budburst <- NA
obs$budburst <- ifelse(obs$start=="2018-12-24", obs$bb + 6, obs$budburst)
obs$budburst <- ifelse(obs$start=="2019-01-07", obs$bb - 7, obs$budburst)
obs$budburst <- ifelse(obs$start=="2019-01-21", obs$bb - 21, obs$budburst)
obs$leafout <- NA
obs$leafout <- ifelse(obs$start=="2018-12-24", obs$lo + 6, obs$leafout)
obs$leafout <- ifelse(obs$start=="2019-01-07", obs$lo - 7, obs$leafout)
obs$leafout <- ifelse(obs$start=="2019-01-21", obs$lo - 21, obs$leafout)
treats <- c(24, 44, 64, 84, 104, 124, 144, 164,
26, 46, 66, 86, 106, 126, 146, 166,
28, 48, 68, 88, 108, 128, 148, 168)
obs$inds <- substr(obs$id, 8, 10)
obs$tx <- ifelse(obs$inds %in% treats, 1, 0)
obs$chill <- NA
obs$chill <- ifelse(obs$start=="2018-12-24", 1, obs$chill)
obs$chill <- ifelse(obs$start=="2019-01-07", 2, obs$chill)
obs$chill <- ifelse(obs$start=="2019-01-21", 3, obs$chill)
obs$ht2 <- as.Date(obs$leafout + 28, origin = obs$start)
obs$ht.mid <- as.Date(obs$leafout + 60, origin = obs$start)
#whentomeasure <- subset(obs, select=c("id", "ht.mid"))
#whentomeasure <- whentomeasure[!duplicated(whentomeasure),]
#write.csv(whentomeasure, file="~/Desktop/whentomeasureheights.csv", row.names = FALSE)
## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##
## Breakdown treatments and experiment - 19 February 2019 issues with greenhouse!
if(FALSE){
howfaralong <- obs
howfaralong$chilltx <- NA
howfaralong$chilltx <- ifelse(howfaralong$chill==1, "4wks", howfaralong$chilltx)
howfaralong$chilltx <- ifelse(howfaralong$chill==2, "6wks", howfaralong$chilltx)
howfaralong$chilltx <- ifelse(howfaralong$chill==3, "8wks", howfaralong$chilltx)
howfaralong$chilltx <- paste(howfaralong$chilltx, howfaralong$tx, sep="_")
howfaralong.leafout <- howfaralong[!is.na(howfaralong$lo),]
table(howfaralong.leafout$chilltx)
howfaralong.budburst <- howfaralong[is.na(howfaralong$lo) & !is.na(howfaralong$bb),]
table(howfaralong.budburst$chilltx)
howfaralong.frz <- howfaralong[(howfaralong$tx ==1 & howfaralong$frz!=""),]
table(howfaralong.frz$chilltx)
}
## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##
## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##
chill.stan <- subset(obs, select=c("id", "budburst", "leafout", "tx", "chill", "lo.ht", "thick1", "thick2", "tough1", "tough2",
"budset", "shoots", "roots", "ht.final", "mg.cm2", "phenol", "chlavg",
"ht.diff", "meristem", "ht.prebudset"))
chill.stan$chill1 = ifelse(chill.stan$chill == 2, 1, 0)
chill.stan$chill2 = ifelse(chill.stan$chill == 3, 1, 0)
with(chill.stan, table(chill1, chill2))
chill.stan$species <- substr(chill.stan$id, 0, 6)
chill.stan$dvr <- chill.stan$leafout - chill.stan$budburst ### Using this point of code for "drought" effect test
#chill.stan$ht.diff <- chill.stan$X60dayheight - chill.stan$lo.ht
#chill.stan$chlavg <- apply(chill.stan[,8:11], 1, mean)
chill.stan$tough <- ifelse(!is.na(chill.stan$tough2), (chill.stan$tough1 + chill.stan$tough2)/2, chill.stan$tough1)
chill.stan$thick <- (chill.stan$thick1 + chill.stan$thick2)/2
chill.stan$tough.date <- NA
chill.stan$tough.date <- ifelse(chill.stan$chill==1, (170+6), chill.stan$tough.date)
chill.stan$tough.date <- ifelse(chill.stan$chill==2, (184-7), chill.stan$tough.date)
chill.stan$tough.date <- ifelse(chill.stan$chill==3, (184-21), chill.stan$tough.date)
chill.stan$tough.age <- chill.stan$tough.date - chill.stan$lo
chill.stan$reltough <- (chill.stan$tough/chill.stan$tough.age)*1000
chill.stan$ht.late <- chill.stan$ht.prebudset - chill.stan$lo.ht
chill.stan$ht.date.new <- NA
chill.stan$ht.date.new <- ifelse(chill.stan$chill==1, (chill.stan$ht.date+6), chill.stan$tough.date)
chill.stan$ht.date.new <- ifelse(chill.stan$chill==2, (chill.stan$ht.date-7), chill.stan$tough.date)
chill.stan$ht.date.new <- ifelse(chill.stan$chill==3, (chill.stan$ht.date-21), chill.stan$tough.date)
chill.stan$budset <- as.Date(chill.stan$budset, "%m/%d/%y")
chill.stan$bset <- as.numeric(yday(chill.stan$budset))
chill.stan$budsetdoy <- NA
chill.stan$budsetdoy <- ifelse(chill.stan$chill==1, (chill.stan$bset+6), chill.stan$budsetdoy)
chill.stan$budsetdoy <- ifelse(chill.stan$chill==2, (chill.stan$bset-7), chill.stan$budsetdoy)
chill.stan$budsetdoy <- ifelse(chill.stan$chill==3, (chill.stan$bset-21), chill.stan$budsetdoy)
chill.stan$gslength.lo <- chill.stan$budsetdoy - chill.stan$lo
chill.stan$bset <- NULL
chill.stan$rgr_prebudset <- (chill.stan$ht.prebudset - chill.stan$lo.ht)/(chill.stan$ht.date.new - chill.stan$leafout)*100
chill.stan$rgr_final <- (chill.stan$ht.final - chill.stan$lo.ht)/(chill.stan$gslength)*100
#source("..//standardcurve.R")
#chill.stan$folin <- folinfunc(as.numeric(chill.stan$phenol))
chill.stan$totbiomass <- chill.stan$roots + chill.stan$shoots
write.csv(chill.stan, file="~/Documents/git/chillfreeze/analyses/output/clean_dvr_traits.csv", row.names=FALSE)
rm(list=ls())
options(stringsAsFactors = FALSE)
# Load libraries
library(bayesplot) ## for plotting
library(egg) ## for plotting
library(shinystan)
library(rstanarm)
library(rstan)
library(brms)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
# Set working directory
setwd("~/Documents/git/chillfreeze/analyses")
source('source/stan_utility.R')
#chill.stan <- read.csv("output/clean_dvr_60dayoutput.csv", header=TRUE)
#chill.stan <- read.csv("output/fakedata_height.csv", header=TRUE)
chill.stan <- read.csv("output/clean_dvr_traits.csv")
#chill.stan <- read.csv("output/clean_dvr_drought.csv")
chill.stan <- chill.stan[!is.na(chill.stan$dvr),]
rmspp <- c("FAGGRA", "NYSSYL")
chill.stan <- chill.stan[!(chill.stan$species%in%rmspp),]
gslength.modlo <- brm(gslength ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2 | species),
data=chill.stan.gs, iter=4000, warmup=2500,
prior = prior(normal(200, 40), class=Intercept),
control=list(max_treedepth=15, adapt_delta=0.99))
#chill.stan$gslength.bb <- chill.stan$budsetdoy - chill.stan$budburst
#chill.stan$gslength.lo <- chill.stan$budsetdoy - chill.stan$leafout
chill.stan.gs <- chill.stan[!is.na(chill.stan$gslength),]
gslength.modlo <- brm(gslength ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2 | species),
data=chill.stan.gs, iter=4000, warmup=2500,
prior = prior(normal(200, 40), class=Intercept),
control=list(max_treedepth=15, adapt_delta=0.99))
gslength.modlo <- brm(gslength.lo ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2 | species),
data=chill.stan.gs, iter=4000, warmup=2500,
prior = prior(normal(200, 40), class=Intercept),
control=list(max_treedepth=15, adapt_delta=0.99))
gslength.modlo
chill.stan$gslength.bb <- chill.stan$budsetdoy - chill.stan$budburst
View(chill.stan)
chill.stan.gsbb <- chill.stan[!is.na(chill.stan$gslength.bb),]
gslength.modlo <- brm(gslength.bb ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2 | species),
data=chill.stan.gsbb, iter=4000, warmup=2500,
prior = prior(normal(200, 40), class=Intercept),
control=list(max_treedepth=15, adapt_delta=0.99))
gslength.modbb <- gslength.modlo
gslength.modbb
chill.stan.ht$finaldiff.rate <- chill.stan.ht$finaldiff/chill.stan.ht$gslength.lo
chill.stan.ht <- chill.stan[!is.na(chill.stan$ht.final),]
chill.stan.ht$finaldiff <- chill.stan.ht$ht.final - chill.stan.ht$lo.ht
chill.stan.ht$finaldiff.rate <- chill.stan.ht$finaldiff/chill.stan.ht$gslength.lo
get_prior(finaldiff.rate ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2 | species),
data=chill.stan.ht)
chill.stan.htrate <- chill.stan.ht[!is.na(chill.stan.ht$finaldiff.rate),]
get_prior(finaldiff.rate ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2 | species),
data=chill.stan.htrate)
range(chill.stan.htrate$finaldiff.rate)
chill.stan.ht$finaldiff.rate <- (chill.stan.ht$finaldiff/chill.stan.ht$gslength.lo)*100
get_prior(finaldiff.rate ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2 | species),
data=chill.stan.htrate)
range(chill.stan.htrate$finaldiff.rate)
chill.stan.htrate <- chill.stan.ht[!is.na(chill.stan.ht$finaldiff.rate),]
range(chill.stan.htrate$finaldiff.rate)
get_prior(finaldiff.rate ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2 | species),
data=chill.stan.htrate)
htdiffrate.mod <- brm(finaldiff.rate ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2 | species),
data=chill.stan.htrate, iter=4000, warmup=2500,
control=list(max_treedepth=15, adapt_delta=0.99),
prior = prior(normal(25, 15), class=Intercept))
htdiffrate.mod
save(htdiffrate.mod, file="~/Documents/git/chillfreeze/analyses/stan/htfinalrate_brms.Rdata")
chill.stan.ht <- chill.stan[!is.na(chill.stan$ht.final),]
chill.stan.ht$finaldiff <- chill.stan.ht$ht.final - chill.stan.ht$lo.ht
chill.stan.ht$finaldiff.rate <- (chill.stan.ht$finaldiff/chill.stan.ht$gslength.lo)*10 ## this makes the units mm/day
chill.stan.htrate <- chill.stan.ht[!is.na(chill.stan.ht$finaldiff.rate),]
get_prior(finaldiff.rate ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2 | species),
data=chill.stan.htrate)
htdiffrate.mod <- brm(finaldiff.rate ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2 | species),
data=chill.stan.htrate, iter=4000, warmup=2500,
control=list(max_treedepth=15, adapt_delta=0.99),
prior = prior(normal(5, 10), class=Intercept))
htdiffrate.mod
chill.stan.htrate <- chill.stan.ht[!is.na(chill.stan.ht$finaldiff.log),]
get_prior(finaldiff.log ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2 | species),
data=chill.stan.htrate)
chill.stan.ht <- chill.stan[!is.na(chill.stan$ht.final),]
chill.stan.ht$finaldiff <- chill.stan.ht$ht.final - chill.stan.ht$lo.ht
chill.stan.ht$finaldiff.log <- log(chill.stan.ht$finaldiff/chill.stan.ht$gslength.lo) ## Geoff says log scale is more numerically stable for calculating growth rates
View(chill.stan.ht)
View(chill.stan.ht)
chill.stan.htrate <- chill.stan.ht[!is.na(chill.stan.ht$finaldiff.log),]
get_prior(finaldiff.log ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2 | species),
data=chill.stan.htrate)
chill.stan.ht$finaldiff.rgr <- (ln(chill.stan.ht$ht.final)-ln(chill.stan.ht$lo.ht))/chill.stan.ht$gslength.lo
chill.stan.ht$finaldiff.rgr <- (log(chill.stan.ht$ht.final)-log(chill.stan.ht$lo.ht))/chill.stan.ht$gslength.lo
chill.stan.htrate <- chill.stan.ht[!is.na(chill.stan.ht$finaldiff.rgr),]
get_prior(finaldiff.rgr ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2 | species),
data=chill.stan.htrate, family=binomial(link="logit"))
htdiffrgr.mod <- brm(finaldiff.rgr ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2 | species),
data=chill.stan.htrate, iter=4000, warmup=2500, family=binomial(link="logit"),
control=list(max_treedepth=15, adapt_delta=0.99),
prior = prior(normal(0, 10), class=Intercept))
range(chill.stan.htrate$finaldiff.rgr)
chill.stan.ht$finaldiff.rgr <- (log(chill.stan.ht$ht.final)-log(chill.stan.ht$lo.ht))/(chill.stan.ht$gslength.lo) * 1000
chill.stan.htrate <- chill.stan.ht[!is.na(chill.stan.ht$finaldiff.rgr),]
get_prior(finaldiff.rgr ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2 | species),
data=chill.stan.htrate, family=binomial(link="logit"))
range(chill.stan.htrate$finaldiff.rgr)
get_prior(finaldiff.rgr ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2 | species),
data=chill.stan.htrate)
htdiffrgr.mod <- brm(finaldiff.rgr ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2 | species),
data=chill.stan.htrate, iter=4000, warmup=2500,
control=list(max_treedepth=15, adapt_delta=0.99),
prior = prior(normal(5, 20), class=Intercept))
htdiffrgr.mod
save(htdiffrgr.mod, file="~/Documents/git/chillfreeze/analyses/stan/htfinalrgr_brms.Rdata")
chill.stan$rootmassfrac <- chill.stan$roots/chill.stan$totbiomass
chill.stan.rmf <- chill.stan[!is.na(chill.stan$rootmassfrac),]
get_prior(rootmassfrac ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2 | species), data=chill.stan.rmf)
rootmassfrac.mod <- brm(rootmassfrac ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2 | species),
data=chill.stan.rmf, iter=4000, warmup=2500,
prior = prior(cauchy(0, 15), class=Intercept),
control=list(max_treedepth=15, adapt_delta=0.99))
rootmassfrac.mod
range(chill.stan.rmf$rootmassfrac)
rootmassfrac.mod <- brm(rootmassfrac ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2 | species),
data=chill.stan.rmf, iter=4000, warmup=2500,
prior = prior(log(0, 1), class=Intercept),
control=list(max_treedepth=15, adapt_delta=0.99))
rootmassfrac.mod <- brm(rootmassfrac ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2 | species),
data=chill.stan.rmf, iter=4000, warmup=2500,
prior = prior(normal(0, 1), class=Intercept),
control=list(max_treedepth=15, adapt_delta=0.99))
rootmassfrac.mod
View(chill.stan.htrate)
View(chill.stan.ht)
View(chill.stan.gsbb)
View(chill.stan.gs)
View(chill.stan.rmf)
rootmassfrac.mod <- brm(rootmassfrac ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2 | species),
data=chill.stan.rmf, iter=4000, warmup=2500, family=binomial(link="logit"),
prior = prior(normal(0, 1), class=Intercept),
control=list(max_treedepth=15, adapt_delta=0.99))
chill.stan$rootmassfrac.log <- log(chill.stan$roots/chill.stan$totbiomass)
range(chill.stan$rootmassfrac.log)
range(chill.stan$rootmassfrac.log, na.rm=TRUE)
chill.stan$rootmassfrac.100 <- (chill.stan$roots/chill.stan$totbiomass)*100
chill.stan.rmf <- chill.stan[!is.na(chill.stan$rootmassfrac.100),]
get_prior(rootmassfrac.100 ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2 | species), data=chill.stan.rmf)
rootmassfrac.mod <- brm(rootmassfrac.100 ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2 | species),
data=chill.stan.rmf, iter=4000, warmup=2500,
prior = prior(normal(75, 25), class=Intercept),
control=list(max_treedepth=15, adapt_delta=0.99))
rootmassfrac.mod
chill.stan$biomassrate <- chill.stan$totbiomass/chill.stan$gslength.lo
chill.stan$biomassrate <- chill.stan$totbiomass/chill.stan$gslength.lo
chill.stan.tb <- chill.stan[!is.na(chill.stan$biomassrate),]
get_prior(biomassrate ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2 | species), data=chill.stan.tb)
range(chill.stan$biomassrate)
range(chill.stan$biomassrate, na.rm=TRUE)
chill.stan$biomassrate <- (chill.stan$totbiomass/chill.stan$gslength.lo)*100
chill.stan.tb <- chill.stan[!is.na(chill.stan$biomassrate),]
get_prior(biomassrate ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2 | species), data=chill.stan.tb)
biomassrate100.mod <- brm(biomassrate ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2 | species),
data=chill.stan.tb, iter=4000, warmup=2500,
prior = prior(normal(30, 15), class=Intercept),
control=list(max_treedepth=15, adapt_delta=0.99))
biomassrate100.mod
save(biomassrate100.mod, file="~/Documents/git/chillfreeze/analyses/stan/biomassrate100_brms.Rdata")
chill.stan$biomassrate <- (chill.stan$totbiomass/chill.stan$gslength.lo)
chill.stan.tb <- chill.stan[!is.na(chill.stan$biomassrate),]
get_prior(biomassrate ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2 | species), data=chill.stan.tb)
biomassrate.mod <- brm(biomassrate ~ tx*chill1 + tx*chill2 + (tx*chill1 + tx*chill2 | species),
data=chill.stan.tb, iter=4000, warmup=2500,
prior = prior(normal(0, 15), class=Intercept),
control=list(max_treedepth=15, adapt_delta=0.99))
biomassrate.mod
mod <- htfinalrate.mod
mod <- htdiffrate.mod
mod90<-as.data.frame(tidy(mod, prob=0.9))
names(mod90)<-c("term", "estimate", "error", "10%", "90%")
mod50<-as.data.frame(tidy(mod, prob=0.5))
names(mod50)<-c("term", "estimate", "error", "25%", "75%")
modfull <- full_join(mod90, mod50)
mod98<-as.data.frame(tidy(mod, prob=0.98))
names(mod98)<-c("term", "estimate", "error", "2%", "98%")
modfull <- full_join(modfull, mod98)
modfull <- subset(modfull, select=c("term", "estimate", "2%", "10%", "25%", "75%", "90%", "98%"))
write.csv(modfull, file="output/htdiffrate_modeloutput.csv", row.names=FALSE)
load("stan/biomassrate_brms.Rdata")
mod <- biomassrate100.mod
mod90<-as.data.frame(tidy(mod, prob=0.9))
names(mod90)<-c("term", "estimate", "error", "10%", "90%")
mod50<-as.data.frame(tidy(mod, prob=0.5))
names(mod50)<-c("term", "estimate", "error", "25%", "75%")
modfull <- full_join(mod90, mod50)
mod98<-as.data.frame(tidy(mod, prob=0.98))
names(mod98)<-c("term", "estimate", "error", "2%", "98%")
modfull <- full_join(modfull, mod98)
modfull <- subset(modfull, select=c("term", "estimate", "2%", "10%", "25%", "75%", "90%", "98%"))
write.csv(modfull, file="output/biomassrate100_modeloutput.csv", row.names=FALSE)
## load the model
#load("stan/dvr_brms.Rdata")
load("stan/gslengthlo_brms_adjusted.Rdata")
# Set working directory
setwd("~/Documents/git/chillfreeze/analyses")
## load the model
#load("stan/dvr_brms.Rdata")
load("stan/gslengthlo_brms_adjusted.Rdata")
gslength.modlo
save(gslength.modlo, file="~/Documents/git/chillfreeze/analyses/stan/gslengthlo_brms_adjusted.Rdata")
chill.stan$species.name <- NA
chill.stan$species.name <- ifelse(chill.stan$species=="ACESAC", "Acer saccharinum", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="ALNRUG", "Alnus rugosa", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="BETPAP", "Betula papyrifera", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="BETPOP", "Betula populifolia", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="CORRAC", "Cornus racemosa", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="SALPUR", "Salix purpurea", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="SORAME", "Sorbus americana", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="VIBDEN", "Viburnum dentatum", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="FAGGRA", "Fagus grandifolia", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="NYSSYL", "Nyssa sylvatica", chill.stan$species.name)
rmspp <- c("FAGGRA", "NYSSYL")
chill.stan <- chill.stan[!(chill.stan$species%in%rmspp),]
#### Now for mu plots based of bb_analysis/models_stan_plotting.R ###
figpath <- "figures"
figpathmore <- "gslengthlocorrected_brms" ### change based on model
cols <- adjustcolor("indianred3", alpha.f = 0.3)
my.pal <- rep(brewer.pal(n = 10, name = "Paired"), 8)
# display.brewer.all()
alphahere = 0.4
#xlab <- "Model estimate of change in \nduration of vegetative risk (days)"
xlab <- "Model estimate of change in growing season length (days)"
if(FALSE){
#xlab <- "Model estimate of change in belowground biomass (g)"
#xlab <- "Model estimate of change in aboveground biomass (g)"
}
spp <- unique(chill.stan$species)
modelhere <- gslength.modlo
tx <- coef(modelhere, prob=c(0.25, 0.75))$species[, c(1, 3:4), 2] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(`25%` = Q25) %>%
rename(`75%` = Q75) %>%
dplyr::select(mean, `25%`, `75%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("tx", "[", i, "]", sep="")
}
tx$parameter<-new.names
chill1 <- coef(modelhere, prob=c(0.25, 0.75))$species[, c(1, 3:4), 3] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(`25%` = Q25) %>%
rename(`75%` = Q75) %>%
dplyr::select( mean, `25%`, `75%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("chill1", "[", i, "]", sep="")
}
chill1$parameter<-new.names
mod.ranef<-full_join(tx, chill1)
chill2 <- coef(modelhere, prob=c(0.25, 0.75))$species[, c(1, 3:4), 4] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(`25%` = Q25) %>%
rename(`75%` = Q75) %>%
dplyr::select( mean, `25%`, `75%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("chill2", "[", i, "]", sep="")
}
chill2$parameter<-new.names
mod.ranef <- full_join(mod.ranef, chill2)
txchill1 <- coef(modelhere, prob=c(0.25, 0.75))$species[, c(1, 3:4), 5] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(`25%` = Q25) %>%
rename(`75%` = Q75) %>%
dplyr::select( mean, `25%`, `75%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("tx:chill1", "[", i, "]", sep="")
}
txchill1$parameter<-new.names
mod.ranef<-full_join(mod.ranef, txchill1)
txchill2 <- coef(modelhere, prob=c(0.25, 0.75))$species[, c(1, 3:4), 6] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(`25%` = Q25) %>%
rename(`75%` = Q75) %>%
dplyr::select( mean, `25%`, `75%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("tx:chill2", "[", i, "]", sep="")
}
txchill2$parameter<-new.names
mod.ranef<-full_join(mod.ranef, txchill2)
modoutput <- tidy(modelhere, prob=c(0.5))
#quartz()
source("exp_muplot_brms.R")
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 16.5, 3.5) ## use for DVR
muplotfx(modelhere, "", 8, 8, c(0,5), c(-35, 35) , 36.5, 3.5) ## use for gslengthlo
figpathmore <- "htfinalrate_brms" ### change based on model
cols <- adjustcolor("indianred3", alpha.f = 0.3)
my.pal <- rep(brewer.pal(n = 10, name = "Paired"), 8)
#xlab <- "Model estimate of change in shoot growth (cm)"
xlab <- "Model estimate of change in shoot growth per day (mm/day)"
spp <- unique(chill.stan$species)
modelhere <- htfinalrate.mod
modelhere <- htdiffrate.mod
tx <- coef(modelhere, prob=c(0.25, 0.75))$species[, c(1, 3:4), 2] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(`25%` = Q25) %>%
rename(`75%` = Q75) %>%
dplyr::select(mean, `25%`, `75%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("tx", "[", i, "]", sep="")
}
tx$parameter<-new.names
chill1 <- coef(modelhere, prob=c(0.25, 0.75))$species[, c(1, 3:4), 3] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(`25%` = Q25) %>%
rename(`75%` = Q75) %>%
dplyr::select( mean, `25%`, `75%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("chill1", "[", i, "]", sep="")
}
chill1$parameter<-new.names
mod.ranef<-full_join(tx, chill1)
chill2 <- coef(modelhere, prob=c(0.25, 0.75))$species[, c(1, 3:4), 4] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(`25%` = Q25) %>%
rename(`75%` = Q75) %>%
dplyr::select( mean, `25%`, `75%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("chill2", "[", i, "]", sep="")
}
chill2$parameter<-new.names
mod.ranef <- full_join(mod.ranef, chill2)
txchill1 <- coef(modelhere, prob=c(0.25, 0.75))$species[, c(1, 3:4), 5] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(`25%` = Q25) %>%
rename(`75%` = Q75) %>%
dplyr::select( mean, `25%`, `75%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("tx:chill1", "[", i, "]", sep="")
}
txchill1$parameter<-new.names
mod.ranef<-full_join(mod.ranef, txchill1)
txchill2 <- coef(modelhere, prob=c(0.25, 0.75))$species[, c(1, 3:4), 6] %>%
as.data.frame() %>%
round(digits = 2) %>%
rename(mean = Estimate) %>%
rename(`25%` = Q25) %>%
rename(`75%` = Q75) %>%
dplyr::select( mean, `25%`, `75%`)
new.names<-NULL
for(i in 1:length(spp)){
new.names[i]<-paste("tx:chill2", "[", i, "]", sep="")
}
txchill2$parameter<-new.names
mod.ranef<-full_join(mod.ranef, txchill2)
modoutput <- tidy(modelhere, prob=c(0.5))
#quartz()
source("exp_muplot_brms.R")
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-22, 22) , 23.5, 3.5) ## ht final
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-8, 8) , 9, 3.5) ## tot biomass
muplotfx(modelhere, "", 8, 8, c(0,5), c(-1, 1) , 1.1, 3.5) ### root to shoot
mod <- gslength.modlo
mod90<-as.data.frame(tidy(mod, prob=0.9))
names(mod90)<-c("term", "estimate", "error", "10%", "90%")
mod50<-as.data.frame(tidy(mod, prob=0.5))
names(mod50)<-c("term", "estimate", "error", "25%", "75%")
modfull <- full_join(mod90, mod50)
mod98<-as.data.frame(tidy(mod, prob=0.98))
names(mod98)<-c("term", "estimate", "error", "2%", "98%")
modfull <- full_join(modfull, mod98)
modfull <- subset(modfull, select=c("term", "estimate", "2%", "10%", "25%", "75%", "90%", "98%"))
write.csv(modfull, file="output/gslength_modeloutput.csv", row.names=FALSE)
