hist(gddssumlastfrost)
#library(abind)
minmaxtemp<-abind(chmin,chmax, along = 3)
chmindates<-chmin[,3:ncol(chmin)]
days<-as.numeric(colnames(chmindates))
jfordates<-ifelse(days>=270, j-1, j)
datesch<-as.Date(days,origin=paste0(jfordates,"-01-01"))
## compute chilling
nodata<-which(apply(minmaxtemp,1,function(x){return(ifelse(sum(is.na(x[,1:2]))>0,T,F))}))
if(length(nodata)>0){minmaxtemp=minmaxtemp[-nodata,,]}
chillunitseachcelleachday<-do.call(rbind,
apply(minmaxtemp,1,function(x){
#x<-minmaxtemp[300,,]
#if(sum(is.na(x[3:nrow(x),2]))<151){
extracweathdf<-data.frame(
Year=as.numeric(format(datesch,"%Y")),
Month=as.numeric(format(datesch,"%m")),
Day=as.numeric(format(datesch,"%d")),
Tmax=x[3:nrow(x),2],
Tmin=x[3:nrow(x),1]
)
weather<-fix_weather(extracweathdf)
hourtemps<-stack_hourly_temps(weather,latitude=x[2])
chll<-chilling(hourtemps,275,60)
#}
return(chll)
}
))
## store results
yearlyresults[,3,which(period == j)] <- gddssum
yearlyresults[,4,which(period == j)] <- gddssumlastfrost
yearlyresults[,5,which(period == j)] <- last.frost
yearlyresults[,6,which(period == j)] <- rowMeans(chmin,na.rm=T)
yearlyresults[,7,which(period == j)] <- apply(chmin,1,sd,na.rm=T)
if(length(nodata)>0){
yearlyresults[c(c(1:npix))[-nodata],8,which(period == j)] <- chillunitseachcelleachday$Utah_Model
yearlyresults[c(c(1:npix))[-nodata],9,which(period == j)] <- chillunitseachcelleachday$Chill_portions
} else {
yearlyresults[c(c(1:npix)),8,which(period == j)] <- chillunitseachcelleachday$Utah_Model
yearlyresults[c(c(1:npix)),9,which(period == j)] <- chillunitseachcelleachday$Chill_portions
}
minmaxtemps.eachsps[[i]] <- yearlyresults
minmaxtemps.eachsps
## store results
yearlyresults[,1,which(period == j)] <- chmin["x"]
yearlyresults[,2,which(period == j)] <- chmin["y"]
chmin["y"]
minmaxtemps.eachsps[[i]] <- yearlyresults
minmaxtemps.eachsps
chmin[[1]]["x"]
plot(ffmax)
plot(ffmin)
plot(wamin)
## store results
yearlyresults[,3,which(period == j)] <- gddssum
# extract values and format to compute means and sdevs
forcesub11foo<-extract(tminshpforce,spsshapeproj,cellnumbers=TRUE)[-nas,]
my.meann
my.mean
#spsshapeproj <- spsshape
#proj4string(spsshapeproj) <- CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0 ")
my.mean <- function(x){ mean(x, na.rm=TRUE) }
my.mean
# housekeeping
rm(list=ls())
options(stringsAsFactors = FALSE)
## load packages
require(sp)
require(raster)
require(rgdal)
require(ncdf4)
require(abind)
require(chillR)
require(lubridate)
species.list <- read.csv("~/Documents/git/ospree/analyses/output/masterspecieslist.csv")
#species.list <- read.csv("~/Documents/git/ospree/analyses/output/masterspecieslist.csv")
species.list <- as.vector(species.list$x)
zipped_names <- grep('\\.shp', unzip("~/Documents/git/ospree/analyses/ranges/NA_range_files/NA_ranges.zip", list=TRUE)$Name,ignore.case=TRUE, value=TRUE)
# generate a list of species with maps in the .zip
species.list.maps <- unlist(zipped_names)
species.list.maps <- gsub(pattern = "(.*/)(.*)(.shp.*)", replacement = "\\2", x = species.list.maps)
species.list.clean <- species.list.maps
## Now I need to rename these folders to match the ospree info
names(species.list.clean) <- c("Betula_lenta", "Populus_grandidentata", "Fagus_grandifolia", "Quercus_rubra",
"Acer_pensylvanicum", "Betula_papyrifera", "Fraxinus_excelsior", "Alnus_rubra",
"Pseudotsuga_menziesii", "Prunus_pensylvanica", "Betula_alleghaniensis",
"Acer_saccharum", "Alnus_incana", "Acer_rubrum", "Cornus_cornuta", "Picea_glauca")
# get a list of species in ospree for which we have EU maps
ospreespslist <- species.list[which(species.list %in% names(species.list.clean))]
## This takes out:
# Alnus rubra
ospreespslist <- c(ospreespslist, "Alnus_rubra")
spslist <- species.list.maps
## define array to store results
nsps<-length(spslist)
nyears<-length(period)
minmaxtemps.eachsps <- list()
i=2
#print(c(i, j))
#spslist=ospreefolder[i]
spsi<-spslist[i]
path.source.i <- "~/Documents/git/ospree/analyses/ranges/NA_range_files/NA_ranges.zip"
unzipped <- unzip("~/Documents/git/ospree/analyses/ranges/NA_range_files/NA_ranges.zip", list = TRUE)$Name
shpsource <-"NA_ranges"
zipped_name.i <- grep(paste(shpsource, spsi, spsi, sep="/"), unzipped, ignore.case = TRUE, value = TRUE)
# load shapefile
unzip(path.source.i, files=zipped_name.i)
# load shapefile
spsshape <- shapefile(zipped_name.i[1])
## need to re-project shape from lamber equal area to geographic
#spsshapeproj <- spsshape
proj4string(spsshape) <- CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0 ")
spsshapeproj<-spTransform(spsshape,CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0 "))
spsshapeproj
plot(spsshapeproj)
spsshapeproj@data
spsshapeproj@polygons
spsshapeproj@polygons$Polygons
extractCoords <- function(spsshapeproj)
{
results <- list()
for(i in 1:(length(spsshapeproj@polygons)-1))
{
results[[i]] <- spsshapeproj@polygons[[i]]@Polygons[[1]]@coords
}
results <- Reduce(rbind, results)
results
}
sppscoords <- extractCoords(spsshapeproj)
sppscoords
unique(sort(sppscoords))
unique(sppscoords)
class(sppscoords)
chillstart:yrend
foo <- subset(valuess(ras.numpixels), forcoords)
#foo <- chmin1[!is.na(chmin1$z),]
yearlyresults[,1:2,]<-chcoordmin1
rm(list=ls())
options(stringsAsFactors = FALSE)
## load packages
require(sp)
require(raster)
require(rgdal)
require(ncdf4)
require(abind)
require(chillR)
require(lubridate)
species.list <- read.csv("~/Documents/git/ospree/analyses/output/masterspecieslist.csv")
#species.list <- read.csv("~/Documents/git/ospree/analyses/output/masterspecieslist.csv")
species.list <- as.vector(species.list$x)
zipped_names <- grep('\\.shp', unzip("~/Documents/git/ospree/analyses/ranges/NA_range_files/NA_ranges.zip", list=TRUE)$Name,ignore.case=TRUE, value=TRUE)
# generate a list of species with maps in the .zip
species.list.maps <- unlist(zipped_names)
species.list.maps <- gsub(pattern = "(.*/)(.*)(.shp.*)", replacement = "\\2", x = species.list.maps)
species.list.clean <- species.list.maps
## Now I need to rename these folders to match the ospree info
names(species.list.clean) <- c("Betula_lenta", "Populus_grandidentata", "Fagus_grandifolia", "Quercus_rubra",
"Acer_pensylvanicum", "Betula_papyrifera", "Fraxinus_excelsior", "Alnus_rubra",
"Pseudotsuga_menziesii", "Prunus_pensylvanica", "Betula_alleghaniensis",
"Acer_saccharum", "Alnus_incana", "Acer_rubrum", "Cornus_cornuta", "Picea_glauca")
# get a list of species in ospree for which we have EU maps
ospreespslist <- species.list[which(species.list %in% names(species.list.clean))]
## This takes out:
# Alnus rubra
ospreespslist <- c(ospreespslist, "Alnus_rubra")
spslist <- species.list.maps
0.79^1.72
1999-1980
rm(list=ls())
options(stringsAsFactors = FALSE)
## load packages
require(sp)
require(raster)
require(rgdal)
require(ncdf4)
require(abind)
require(chillR)
require(lubridate)
species.list <- read.csv("~/Documents/git/ospree/analyses/output/masterspecieslist.csv")
#species.list <- read.csv("~/Documents/git/ospree/analyses/output/masterspecieslist.csv")
species.list <- as.vector(species.list$x)
zipped_names <- grep('\\.shp', unzip("~/Documents/git/ospree/analyses/ranges/NA_range_files/NA_ranges.zip", list=TRUE)$Name,ignore.case=TRUE, value=TRUE)
# generate a list of species with maps in the .zip
species.list.maps <- unlist(zipped_names)
species.list.maps <- gsub(pattern = "(.*/)(.*)(.shp.*)", replacement = "\\2", x = species.list.maps)
species.list.clean <- species.list.maps
## Now I need to rename these folders to match the ospree info
names(species.list.clean) <- c("Betula_lenta", "Populus_grandidentata", "Fagus_grandifolia", "Quercus_rubra",
"Acer_pensylvanicum", "Betula_papyrifera", "Fraxinus_excelsior", "Alnus_rubra",
"Pseudotsuga_menziesii", "Prunus_pensylvanica", "Betula_alleghaniensis",
"Acer_saccharum", "Alnus_incana", "Acer_rubrum", "Cornus_cornuta", "Picea_glauca")
# get a list of species in ospree for which we have EU maps
ospreespslist <- species.list[which(species.list %in% names(species.list.clean))]
## This takes out:
# Alnus rubra
ospreespslist <- c(ospreespslist, "Alnus_rubra")
spslist <- species.list.maps
spslist
2016-1980
36/2
i=3
#print(c(i, j))
#spslist=ospreefolder[i]
spsi<-spslist[i]
path.source.i <- "~/Documents/git/ospree/analyses/ranges/NA_range_files/NA_ranges.zip"
unzipped <- unzip("~/Documents/git/ospree/analyses/ranges/NA_range_files/NA_ranges.zip", list = TRUE)$Name
shpsource <-"NA_ranges"
zipped_name.i <- grep(paste(shpsource, spsi, spsi, sep="/"), unzipped, ignore.case = TRUE, value = TRUE)
# load shapefile
unzip(path.source.i, files=zipped_name.i)
# load shapefile
spsshape <- shapefile(zipped_name.i[1])
plot(spsshape)
i=6
#print(c(i, j))
#spslist=ospreefolder[i]
spsi<-spslist[i]
zipped_name.i <- grep(paste(shpsource, spsi, spsi, sep="/"), unzipped, ignore.case = TRUE, value = TRUE)
# load shapefile
unzip(path.source.i, files=zipped_name.i)
# load shapefile
spsshape <- shapefile(zipped_name.i[1])
plot(spsshape)
check <- read.csv("~/Documents/git/ospree/analyses/ranges/climoutput/Climate.in.range.betulent.1980.1999.csv")
head(check)
rm(list=ls())
options(stringsAsFactors = FALSE)
## load packages
require(sp)
require(raster)
require(rgdal)
require(ncdf4)
require(abind)
require(chillR)
require(lubridate)
species.list <- read.csv("~/Documents/git/ospree/analyses/output/masterspecieslist.csv")
zipped_names <- grep('\\.shp', unzip("~/Documents/git/ospree/analyses/ranges/NA_range_files/NA_ranges.zip", list=TRUE)$Name,ignore.case=TRUE, value=TRUE)
# generate a list of species with maps in the .zip
species.list.maps <- unlist(zipped_names)
species.list.maps <- gsub(pattern = "(.*/)(.*)(.shp.*)", replacement = "\\2", x = species.list.maps)
species.list.clean <- species.list.maps
## Now I need to rename these folders to match the ospree info
names(species.list.clean) <- c("Betula_lenta", "Populus_grandidentata", "Fagus_grandifolia", "Quercus_rubra",
"Acer_pensylvanicum", "Betula_papyrifera", "Fraxinus_excelsior", "Alnus_rubra",
"Pseudotsuga_menziesii", "Prunus_pensylvanica", "Betula_alleghaniensis",
"Acer_saccharum", "Alnus_incana", "Acer_rubrum", "Cornus_cornuta", "Picea_glauca")
# get a list of species in ospree for which we have EU maps
ospreespslist <- species.list[which(species.list %in% names(species.list.clean))]
## This takes out:
# Alnus rubra
ospreespslist <- c(ospreespslist, "Alnus_rubra")
spslist <- species.list.maps
spslist
1999-1980
19/2
foo <- lapply(tmaxlist.nam, function(x)
{foo <- extent(x);
return(tmaxlist.nam)})
climatedrive = "/n/wolkovich_lab/Lab/Cat" # Cat's climate drive
#climatedrive = "/Volumes/climdata" # Cat's climate drive
## load climate data rasters (these data are not currently in the ospree folder
nafiles <- dir(climatedrive)[grep("princetonclimdata", dir(climatedrive))]
nc_close(L[[i]])
chillstart
foo <- read.csv("~/Documents/git/ospree/analyses/ranges/climoutput/Climate.in.range.betulent.1980.1999.csv")
head(foo)
foo <- read.csv("~/Documents/git/ospree/analyses/ranges/climoutput/Climate.in.range.betulent.1980.1999.csv")
head(foo)
# housekeeping
rm(list=ls())
options(stringsAsFactors = FALSE)
## load packages
require(sp)
require(raster)
require(rgdal)
require(ncdf4)
require(abind)
require(chillR)
require(lubridate)
climatedrive = "/Volumes/climdata" # Cat's climate drive
## load species list
species.list <- read.csv("/n/wolkovich_lab/Lab/Cat/masterspecieslist.csv")
species.list <- read.csv("~/Documents/git/ospree/analyses/output/masterspecieslist.csv")
#species.list <- read.csv("~/Documents/git/ospree/analyses/output/masterspecieslist.csv")
species.list <- as.vector(species.list$x)
zipped_names <- grep('\\.shp', unzip("~/Documents/git/ospree/analyses/ranges/NA_range_files/NA_ranges.zip", list=TRUE)$Name,ignore.case=TRUE, value=TRUE)
# generate a list of species with maps in the .zip
species.list.maps <- unlist(zipped_names)
species.list.maps <- gsub(pattern = "(.*/)(.*)(.shp.*)", replacement = "\\2", x = species.list.maps)
species.list.clean <- species.list.maps
## Now I need to rename these folders to match the ospree info
names(species.list.clean) <- c("Betula_lenta", "Populus_grandidentata", "Fagus_grandifolia", "Quercus_rubra",
"Acer_pensylvanicum", "Betula_papyrifera", "Fraxinus_excelsior", "Alnus_rubra",
"Pseudotsuga_menziesii", "Prunus_pensylvanica", "Betula_alleghaniensis",
"Acer_saccharum", "Alnus_incana", "Acer_rubrum", "Cornus_cornuta", "Picea_glauca")
# get a list of species in ospree for which we have EU maps
ospreespslist <- species.list[which(species.list %in% names(species.list.clean))]
## This takes out:
# Alnus rubra
ospreespslist <- c(ospreespslist, "Alnus_rubra")
spslist <- species.list.maps
allclimyrs <- 1979:2016
# housekeeping
rm(list=ls())
options(stringsAsFactors = FALSE)
## load packages
require(sp)
require(raster)
require(rgdal)
require(ncdf4)
require(abind)
require(chillR)
require(lubridate)
#climatedrive = "/n/wolkovich_lab/Lab/Cat" # Cat's climate drive
climatedrive = "~/Desktop/Big Data Files" # Cat's climate drive
## load climate data rasters (these data are not currently in the ospree folder
#nafiles <- dir(climatedrive)[grep("princetonclimdata", dir(climatedrive))]
nafiles <- dir(climatedrive)[grep("princetondata", dir(climatedrive))]
## load species list
#species.list <- read.csv("/n/wolkovich_lab/Lab/Cat/masterspecieslist.csv")
species.list <- read.csv("~/Documents/git/ospree/analyses/output/masterspecieslist.csv")
species.list <- as.vector(species.list$x)
## read in list of species with distribution shapefiles
# get a list of the polygon shapefiles in the .zip with the maps
#zipped_names <- grep('\\.shp', unzip("/n/wolkovich_lab/Lab/Cat/NA_range_files/NA_ranges.zip",
#                                    list=TRUE)$Name,ignore.case=TRUE, value=TRUE)
zipped_names <- grep('\\.shp', unzip("~/Documents/git/ospree/analyses/ranges/NA_range_files/NA_ranges.zip", list=TRUE)$Name,ignore.case=TRUE, value=TRUE)
# generate a list of species with maps in the .zip
species.list.maps <- unlist(zipped_names)
species.list.maps <- gsub(pattern = "(.*/)(.*)(.shp.*)", replacement = "\\2", x = species.list.maps)
species.list.clean <- species.list.maps
## Now I need to rename these folders to match the ospree info
names(species.list.clean) <- c("Betula_lenta", "Populus_grandidentata", "Fagus_grandifolia", "Quercus_rubra",
"Acer_pensylvanicum", "Betula_papyrifera", "Fraxinus_excelsior", "Alnus_rubra",
"Pseudotsuga_menziesii", "Prunus_pensylvanica", "Betula_alleghaniensis",
"Acer_saccharum", "Alnus_incana", "Acer_rubrum", "Cornus_cornuta", "Picea_glauca")
# get a list of species in ospree for which we have EU maps
ospreespslist <- species.list[which(species.list %in% names(species.list.clean))]
## This takes out:
# Alnus rubra
ospreespslist <- c(ospreespslist, "Alnus_rubra")
spslist <- species.list.maps
spslist
ospreespslist
spslist
spslist=spslist[c(1,3:7,9:16)]
spslist
superd1 <- within(superd1, { se <- ave(gsw, tomatch, FUN=function(x) sd(x)/sqrt(length(unique(x))))})
#withr::with_makevars(c(PKG_LIBS = "-liconv"), install.packages("chillR"), assignment = "+=")
# housekeeping
rm(list=ls())
options(stringsAsFactors = FALSE)
## load packages
require(sp)
require(raster)
require(rgdal)
require(ncdf4)
require(abind)
require(chillR)
require(lubridate)
#climatedrive = "/n/wolkovich_lab/Lab/Cat" # Cat's climate drive
climatedrive = "~/Desktop/Big Data Files" # Cat's climate drive
## load climate data rasters (these data are not currently in the ospree folder
#nafiles <- dir(climatedrive)[grep("princetonclimdata", dir(climatedrive))]
nafiles <- dir(climatedrive)[grep("princetondata", dir(climatedrive))]
## load species list
#species.list <- read.csv("/n/wolkovich_lab/Lab/Cat/masterspecieslist.csv")
species.list <- read.csv("~/Documents/git/ospree/analyses/output/masterspecieslist.csv")
species.list <- as.vector(species.list$x)
zipped_names <- grep('\\.shp', unzip("~/Documents/git/ospree/analyses/ranges/NA_range_files/NA_ranges.zip", list=TRUE)$Name,ignore.case=TRUE, value=TRUE)
# generate a list of species with maps in the .zip
species.list.maps <- unlist(zipped_names)
species.list.maps <- gsub(pattern = "(.*/)(.*)(.shp.*)", replacement = "\\2", x = species.list.maps)
species.list.clean <- species.list.maps
## Now I need to rename these folders to match the ospree info
names(species.list.clean) <- c("Betula_lenta", "Populus_grandidentata", "Fagus_grandifolia", "Quercus_rubra",
"Acer_pensylvanicum", "Betula_papyrifera", "Fraxinus_excelsior", "Alnus_rubra",
"Pseudotsuga_menziesii", "Prunus_pensylvanica", "Betula_alleghaniensis",
"Acer_saccharum", "Alnus_incana", "Acer_rubrum", "Cornus_cornuta", "Picea_glauca")
# get a list of species in ospree for which we have EU maps
ospreespslist <- species.list[which(species.list %in% names(species.list.clean))]
## This takes out:
# Alnus rubra
ospreespslist <- c(ospreespslist, "Alnus_rubra")
spslist <- species.list.maps
spslist
spslist=spslist[2]
spslist
load("~/Desktop/ranges_jointmod.Rda")
# Checking against sim data
bigfitpost <- rstan::extract(jointfit)
bigfitsum <- summary(jointfit)$summary
load("/Users/CatherineChamberlain/Desktop/ranges_jointmod.Rda")
(7.1/2.5)^(10/15)
2.3(60)*log(5/145)
2.3*60
log(5/145)
-3.367*138
-3.367*60
log(5)-log(145)
*60
8.314*37
307.618/96485
*2.3
0.003188*2.3
ln(5/145)
((2.3*8.314*37)/96485)*log(5/145)
5/145
log(5)-log(145)
log(0.0345)
*60
60*log(5/145)
60*log10(5/145)
((2.3*8.314*37)/96485)*log10(5/145)
((2.3*8.314*298)/96485)*log10(5/145)
setwd("~/Documents/git/chillfreeze/analyses")
bb <- read.csv("output/clean_dvr_traits.csv")
View(bb)
bb.mod <- lm(budburst ~ chill, data=bbdat)
bbdat <- read.csv("output/clean_dvr_traits.csv")
bb.mod <- lm(budburst ~ chill, data=bbdat)
bb <- as.data.frame(tidy(bb.mod, prob=0.90))
library(xtable)
library(broom)
bb <- as.data.frame(tidy(bb.mod, prob=0.90))
View(bb)
bb.mod <- lm(budburst ~ chill1 + chill2, data=bbdat)
bb <- as.data.frame(tidy(bb.mod, prob=0.90))
View(bb)
c(bb$statistic, bb$p.value) <- NULL
bb$statistic<- NULL
bb$p.value<- NULL
bb$term <- gsub("(Intercept)", "Intercept", bb$term)
bb$term <- gsub("chill1", "Chilling 6 Wks", bb$term)
bb$term <- gsub("chill2", "Chilling 8 Wks", bb$term)
bb$statistic<- NULL
bb$p.value<- NULL
colnames(bb) <- c("term", "mean", "std.err")
View(bb)
gsub("(Intercept)", "Intercept", bb$term)
bb$term <- ifelse(bb$term=="(Intercept)", "Intercept", bb$term)
View(bb)
dvr.mod <- lm(dvr ~ chill1 + chill2, data=bbdat)
dvr <- as.data.frame(tidy(dvr.mod, prob=0.90))
dvr$term <- ifelse(dvr$term=="(Intercept)", "Intercept", dvr$term)
dvr$term <- gsub("chill1", "Chilling 6 Wks", dvr$term)
dvr$term <- gsub("chill2", "Chilling 8 Wks", dvr$term)
dvr$statistic<- NULL
dvr$p.value<- NULL
colnames(dvr) <- c("term", "mean", "std.err")
View(dvr)
simpbbchill1 <- summary(bb.mod)$coef[2,2]
View(bb)
summary(bb.mod)$coef[1,2]
summary(bb.mod)$coef[2,1]
summary(bb.mod)$coef[2,2]
summary(bb.mod)$coef[3,1]
summary(bb.mod)$coef[3,2]
meritx.perc<-meritx/4
### Meristem Model - MERISTEM DAMAGE ACROSS CHILL TXs!!
meritx<-round(mean(fixef(meri.mod, pars="tx", summary=FALSE)), digits=2) ### 2.07
#load models and data to report numbers of things
options(stringsAsFactors = FALSE)
library(brms)
## Set Working Directory
setwd("/Users/CatherineChamberlain/Documents/git/chillfreeze/analyses/")
load("stan/meristem_brms.Rdata")
### Meristem Model - MERISTEM DAMAGE ACROSS CHILL TXs!!
meritx<-round(mean(fixef(meri.mod, pars="tx", summary=FALSE)), digits=2) ### 2.07
meritx.perc<-meritx/4
meritx.perc
View(meri.mod)
meritxsd.perc <- meritxsd/4
meritxsd<-round(mean(fixef(meri.mod, pars="tx")[2]), digits=2) # 0.97
meritxsd.perc <- meritxsd/4
meritxsd.perc
meritx
log(meritx)
log(meritxsd)
meritxsd
### Meristem Model - MERISTEM DAMAGE ACROSS CHILL TXs!!
meritx<-round(mean(fixef(meri.mod, pars="tx", summary=FALSE)), digits=2) ### 2.07
meritx.perc <- meritx/4
meritxsd <- round(mean(fixef(meri.mod, pars="tx")[2]), digits=2) # 0.97
merichill1<-round(mean(fixef(meri.mod, pars="chill1", summary=FALSE)), digits=2) # -0.53
merichill1sd<-round(mean(fixef(meri.mod, pars="chill1")[2]), digits=2) # 1.88
merichill2<-round(mean(fixef(meri.mod, pars="chill2", summary=FALSE)), digits=2) # -0.18
merichill2sd<-round(mean(fixef(meri.mod, pars="chill2")[2]), digits=2) # 1.17
#merichill2sd <- merichill2sd[2] - merichill2sd[1]
meritxchill1<-round(mean(fixef(meri.mod, pars="tx:chill1", summary=FALSE)), digits=2)
meritxchill1.perc <- meritxchill1/4
meritxchill1sd<-round(mean(fixef(meri.mod, pars="tx:chill1")[2]), digits=2) # 1.42
#meritxchill1sd <- meritxchill1sd[2] - meritxchill1sd[1]
meritxchill1 <- meritx + merichill1 + meritxchill1 # 1.33
meritxchill2<-round(mean(fixef(meri.mod, pars="tx:chill2", summary=FALSE)), digits=2)
meritxchill2.perc <- meritxchill2/4
meritxchill2sd<-round(mean(fixef(meri.mod, pars="tx:chill2")[2]), digits=2) # 1.31
#meritxchill2sd <- meritxchill2sd[2] - meritxchill2sd[1]
meritxchill2 <- meritx + merichill2 + meritxchill2 ### 2.17
### Chlo Model ### PROBABLY MOVE TO SUPP!!! TX DECREASES CHLORO ESP WITH MORE CHILLING...
chltx<-round(mean(fixef(chl.mod, pars="tx", summary=FALSE)), digits=2) # -0.35
chltxsd<-round(mean(fixef(chl.mod, pars="tx")[2]), digits=2) # 0.77
meritxchill1.perc <- round(meritxchill1/4, digits=2)*100
meritxchill1.perc
meritx.perc <- round((meritx/4)*100, digits=2)
meritx.perc
meritx.perc <- round((meritx/4)*100, digits=1)
meritx.perc
meritxchill1.perc <- round((meritxchill1/4)*100, digits=1)
meritxchill1.perc
meritxchill2.perc <- round((meritxchill2/4)*100, digits=1)
meritxchill2.perc
