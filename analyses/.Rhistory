graphics.off()
## Libraries
library(dplyr)
library(ggplot2)
#Load the data
results <- read.csv("~/Desktop/test_results_usda_all.csv", header=TRUE)
classes <- read.csv("~/Desktop/listofnames.csv", header=TRUE)
results$image <- gsub(".*/\\s*|'.*", '', results$fileName)
errors <- c(4, 17)
results$modelfix<-NA
results$modelfix <- ifelse(results$guess1==22, results$guess2, results$guess1)
results$modelfix <- ifelse(results$guess1==1, results$guess2, results$modelfix)
results$modelfix <- ifelse(results$modelfix%in%errors, 18, results$modelfix)
results$camera <- gsub("_.*", '', results$image)
classes$modelfix<-classes$Class.ID
classes$group<-classes$Group.name
classes$taxa<-classes$scientific_name
results <- left_join(results, classes)
tocheck <- read.csv("~/Documents/git/cameratrap/WildlifeDetections_CameraTrap.csv", header=TRUE)
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$image <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$taxa <- paste(trx$Genus, trx$Species, sep=" ")
trx$camera <- substr(trx$image, 0, 6)
trx$camera <- ifelse(trx$camera == "ATXing", substr(trx$image, 8, 13), trx$camera)
results$camera <- ifelse(results$camera=="CAM6A", "CAM06A", results$camera)
trx$group <- ifelse(trx$taxa=="Vulpes vulpes", "Fox", trx$group)
trx$group <- ifelse(trx$taxa=="Canis latrans", "Canidae", trx$group)
trx$group <- ifelse(trx$taxa=="Sciurus carolinensis", "Squirrel", trx$group)
trx$group <- ifelse(trx$taxa=="Sylvilagus floridanus", "Rabbits", trx$group)
trx$group <- ifelse(trx$taxa=="Turdus migratorius", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Carduelis tristis", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Dumetella carolinensis", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Quiscalus quiscula", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Zenaida macroura", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Corvus brachyrhynchos", "Corvid", trx$group)
trx$group <- ifelse(trx$taxa=="Urocyon cinereoargenteus", "Fox", trx$group)
trx$group <- ifelse(trx$taxa=="Passer domesticus", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Butorides virescens", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Neovison vison", "Mustelidae", trx$group)
trx$group <- ifelse(trx$taxa=="Cardinalis cardinalis", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Tamias striatus", "Rodent", trx$group)
trx$group <- ifelse(trx$taxa=="Lontra canadensis", "Mustelidae", trx$group)
trx$group <- ifelse(trx$taxa=="Ardea herodias", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$group)
trx$group <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$group)
View(trx)
trx <- left_join(trx, classes)
trx$taxa <- ifelse(trx$taxa=="Vulpes vulpes", "Vulpes vulpes and Urocyon Cinereoargentus", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Canis latrans", "Canidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Sciurus carolinensis", "Sciurus spp.", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Sylvilagus floridanus", "Leporidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Turdus migratorius", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Carduelis tristis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Dumetella carolinensis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Quiscalus quiscula", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Zenaida macroura", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Corvus brachyrhynchos", "Corvidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Urocyon cinereoargenteus", "Vulpes vulpes and Urocyon Cinereoargentus", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Passer domesticus", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Butorides virescens", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Neovison vison", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Cardinalis cardinalis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Tamias striatus", "Rodentia", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Lontra canadensis", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Ardea herodias", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$taxa)
trx<-subset(trx, subset=c("camera", "image", "taxa", "checkedbyhand"))
trx<-subset(trx, select=c("camera", "image", "taxa", "checkedbyhand"))
View(trx)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
## Libraries
library(dplyr)
library(ggplot2)
#Load the data
results <- read.csv("~/Desktop/test_results_usda_all.csv", header=TRUE)
classes <- read.csv("~/Desktop/listofnames.csv", header=TRUE)
results$image <- gsub(".*/\\s*|'.*", '', results$fileName)
errors <- c(4, 17)
results$modelfix<-NA
results$modelfix <- ifelse(results$guess1==22, results$guess2, results$guess1)
results$modelfix <- ifelse(results$guess1==1, results$guess2, results$modelfix)
results$modelfix <- ifelse(results$modelfix%in%errors, 18, results$modelfix)
results$camera <- gsub("_.*", '', results$image)
classes$modelfix<-classes$Class.ID
classes$group<-classes$Group.name
classes$taxa<-classes$scientific_name
results <- left_join(results, classes)
tocheck <- read.csv("~/Documents/git/cameratrap/WildlifeDetections_CameraTrap.csv", header=TRUE)
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$image <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$taxa <- paste(trx$Genus, trx$Species, sep=" ")
trx$camera <- substr(trx$image, 0, 6)
trx$camera <- ifelse(trx$camera == "ATXing", substr(trx$image, 8, 13), trx$camera)
results$camera <- ifelse(results$camera=="CAM6A", "CAM06A", results$camera)
trx$taxa <- ifelse(trx$taxa=="Vulpes vulpes", "Vulpes vulpes and Urocyon Cinereoargentus", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Canis latrans", "Canidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Sciurus carolinensis", "Sciurus spp.", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Sylvilagus floridanus", "Leporidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Turdus migratorius", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Carduelis tristis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Dumetella carolinensis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Quiscalus quiscula", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Zenaida macroura", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Corvus brachyrhynchos", "Corvidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Urocyon cinereoargenteus", "Vulpes vulpes and Urocyon Cinereoargentus", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Passer domesticus", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Butorides virescens", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Neovison vison", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Cardinalis cardinalis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Tamias striatus", "Rodentia", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Lontra canadensis", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Ardea herodias", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$taxa)
trx<-subset(trx, select=c("camera", "image", "taxa", "checkedbyhand"))
trx<-subset(trx, select=c("camera", "image", "taxa"))
trx <- left_join(trx, classes)
trx$checkedbyhand <- trx$Class.ID
trx <- subset(trx, select=c("image", "camera","checkedbyhand"))
goo <- left_join(results, trx)
goo <- full_join(results, trx)
howmanymatch <- unique(trx$image)
howmanymatch <- unique(trx$image)
foo <- goo[(goo$image%in%howmanymatch),]
View(foo)
goo <- left_join(results, trx)
howmanymatch <- unique(trx$image)
foo <- goo[(goo$image%in%howmanymatch),]
View(goo)
709/821
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(RColorBrewer)
library(egg)
# Set Working Directory
setwd("~/Documents/git/treespotters/analysis/input")
b<-read.csv("individual_phenometrics_data.csv",header=TRUE)
df<-dplyr::select(b, ObservedBy_Person_ID, First_Yes_Year, First_Yes_DOY)
df[] <- lapply(df, gsub, pattern="'", replacement="")
df<-filter(df, First_Yes_Year==2018)
deight<-df %>%
mutate(ObservedBy_Person_ID = strsplit(as.character(ObservedBy_Person_ID), ",")) %>%
unnest(ObservedBy_Person_ID)
total.numobs.eight <- as.data.frame(table(sort(deight$ObservedBy_Person_ID)))
total.numobs.eight <- data.frame(observer=total.numobs.eight$Var1, n=total.numobs.eight$Freq)
View(total.numobs.eight)
View(total.numobs.eight)
View(total.numobs.eight)
sum(total.numobs.eight$n)
rm(list=ls())
options(stringsAsFactors = FALSE)
# Load libraries
library(dplyr)
library(lubridate)
library(tidyr)
library(RColorBrewer)
library(egg)
library(brms) ## just for initial glances during experiment!
library(rstan)
# Setting working directory
setwd("~/Documents/git/chillfreeze/analyses/input")
obs <- read.csv("chillobs.csv", header = TRUE)
## Start cleaning a bit...
obs$bb <- as.Date(obs$bb, "%m/%d/%y")
obs$bb <- yday(obs$bb)
obs$lo <- as.Date(obs$lo, "%m/%d/%y")
obs$lo <- yday(obs$lo)
obs$start <- as.Date(obs$start, format = "%m/%d/%y")
obs$budburst <- NA
obs$budburst <- ifelse(obs$start=="2018-12-24", obs$bb + 6, obs$budburst)
obs$budburst <- ifelse(obs$start=="2019-01-07", obs$bb - 7, obs$budburst)
obs$budburst <- ifelse(obs$start=="2019-01-21", obs$bb - 21, obs$budburst)
obs$leafout <- NA
obs$leafout <- ifelse(obs$start=="2018-12-24", obs$lo + 6, obs$leafout)
obs$leafout <- ifelse(obs$start=="2019-01-07", obs$lo - 7, obs$leafout)
obs$leafout <- ifelse(obs$start=="2019-01-21", obs$lo - 21, obs$leafout)
treats <- c(24, 44, 64, 84, 104, 124, 144, 164,
26, 46, 66, 86, 106, 126, 146, 166,
28, 48, 68, 88, 108, 128, 148, 168)
obs$inds <- substr(obs$id, 8, 10)
obs$tx <- ifelse(obs$inds %in% treats, 1, 0)
obs$chill <- NA
obs$chill <- ifelse(obs$start=="2018-12-24", 1, obs$chill)
obs$chill <- ifelse(obs$start=="2019-01-07", 2, obs$chill)
obs$chill <- ifelse(obs$start=="2019-01-21", 3, obs$chill)
obs$ht2 <- as.Date(obs$leafout + 28, origin = obs$start)
obs$ht.mid <- as.Date(obs$leafout + 60, origin = obs$start)
whentomeasure <- subset(obs, select=c("id", "ht.mid"))
whentomeasure <- whentomeasure[!duplicated(whentomeasure),]
#write.csv(whentomeasure, file="~/Desktop/whentomeasureheights.csv", row.names = FALSE)
## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##
## Breakdown treatments and experiment - 19 February 2019 issues with greenhouse!
if(FALSE){
howfaralong <- obs
howfaralong$chilltx <- NA
howfaralong$chilltx <- ifelse(howfaralong$chill==1, "4wks", howfaralong$chilltx)
howfaralong$chilltx <- ifelse(howfaralong$chill==2, "6wks", howfaralong$chilltx)
howfaralong$chilltx <- ifelse(howfaralong$chill==3, "8wks", howfaralong$chilltx)
howfaralong$chilltx <- paste(howfaralong$chilltx, howfaralong$tx, sep="_")
howfaralong.leafout <- howfaralong[!is.na(howfaralong$lo),]
table(howfaralong.leafout$chilltx)
howfaralong.budburst <- howfaralong[is.na(howfaralong$lo) & !is.na(howfaralong$bb),]
table(howfaralong.budburst$chilltx)
howfaralong.frz <- howfaralong[(howfaralong$tx ==1 & howfaralong$frz!=""),]
table(howfaralong.frz$chilltx)
}
## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##
## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##
chill.stan <- subset(obs, select=c("id", "budburst", "leafout", "tx", "chill", "lo.ht", "X60dayheight", "chl1", "chl2",
"chl3", "chl4", "mg.cm2"))
chill.stan$chill1 = ifelse(chill.stan$chill == 2, 1, 0)
chill.stan$chill2 = ifelse(chill.stan$chill == 3, 1, 0)
with(chill.stan, table(chill1, chill2))
chill.stan$species <- substr(chill.stan$id, 0, 6)
chill.stan$dvr <- chill.stan$leafout - chill.stan$budburst ### Using this point of code for "drought" effect test
chill.stan$ht.diff <- chill.stan$X60dayheight - chill.stan$lo.ht
chill.stan$chlavg <- apply(chill.stan[,8:11], 1, mean)
write.csv(chill.stan, file="~/Documents/git/chillfreeze/analyses/output/clean_dvr_60dayoutput.csv", row.names=FALSE)
### 1 April 2019 - Cat
### Initial figures
## housekeeping
rm(list=ls())
options(stringsAsFactors = FALSE)
# Load libraries
library(RColorBrewer)
library(egg)
# Setting working directory
setwd("~/Documents/git/chillfreeze/analyses/output")
chill.stan <- read.csv("clean_dvr_60dayoutput.csv", header=TRUE)
labs <- c("SALPUR"=expression(paste(italic("Salix purpurea"))),
"CORRAC"=expression(paste(italic("Cornus racemosa"))),
"BETPAP"=expression(paste(italic("Betula papyrifera"))),
"BETPOP"=expression(paste(italic("Betula populifolia"))),
"ALNRUG"=expression(paste(italic("Alnus incana"))),
"SORAME"=expression(paste(italic("Sorbus americana"))),
"ACESAC"=expression(paste(italic("Acer saccharinum"))),
"VIBDEN"=expression(paste(italic("Viburnum dentatum"))),
"FAGGRA"=expression(paste(italic("Fagus grandifolia"))),
"NYSSYL"=expression(paste(italic("Nyssa sylvatica"))))
cols <- colorRampPalette(brewer.pal(10,"Paired"))(10)
# to use for now until all species leafout
values <- c( "SALPUR"="#A6CEE3", "CORRAC"="#1F78B4", "BETPAP"="#B2DF8A", "BETPOP"="#33A02C",
"ALNRUG"="#FB9A99", "SORAME"="#E31A1C", "ACESAC"="#FDBF6F",
"VIBDEN"="#FF7F00", "FAGGRA"="#CAB2D6", "NYSSYL"="#6A3D9A")
species_order <- c("SALPUR", "CORRAC", "BETPAP", "BETPOP", "ALNRUG", "SORAME", "ACESAC", "VIBDEN", "FAGGRA", "NYSSYL")
fourweeks <- subset(chill.stan, chill.stan$chill==1)
fourweeks.meas <- fourweeks[!is.na(fourweeks$ht.diff),]
#cols <- colorRampPalette(brewer.pal(8,"Set2"))(8)
height<- ggplot(fourweeks.meas, aes(x=factor(species, levels = species_order), y=ht.diff, alpha=tx)) + geom_boxplot(aes(alpha=as.factor(tx), fill=as.factor(species), col=as.factor(species)), outlier.shape=NA) +
theme(legend.text=element_text(size=7), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="Helvetica"),
legend.text.align = 0, axis.text.x = element_text(face = "italic", angle=45, hjust=1),
legend.key = element_rect(colour = "transparent", fill = "white"),
axis.title.x = element_blank(),
legend.position = "none") + # top, right, bottom, left
scale_y_continuous(expand = c(0, 0)) +
ylab("Height Difference (cm)") +
scale_alpha_manual(name="Treatment", values=c(0.2, 0.7),
labels=c("0"="Control", "1"="False Spring")) +
scale_fill_manual(name="Species", values=values,
labels=labs) +
scale_color_manual(name="Species", values=values,
labels=labs) + scale_x_discrete(labels=labs) +
guides(alpha=guide_legend(override.aes=list(fill=hcl(c(15,195),100,0,alpha=c(0.2,0.7)))), col=FALSE, fill=FALSE)
chlorophyll<- ggplot(fourweeks.meas, aes(x=factor(species, levels = species_order), y=mg.cm2, alpha=tx)) + geom_boxplot(aes(alpha=as.factor(tx), fill=as.factor(species), col=as.factor(species)), outlier.shape=NA) +
theme(legend.text=element_text(size=7), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="Helvetica"),
legend.text.align = 0, axis.text.x = element_text(face = "italic", angle=45, hjust=1),
legend.key = element_rect(colour = "transparent", fill = "white"),
axis.title.x = element_blank()) + # top, right, bottom, left
scale_y_continuous(expand = c(0, 0)) +
ylab("Chlorophyll Content\n (mg/cm2)") +
scale_alpha_manual(name="Treatment", values=c(0.2, 0.7),
labels=c("0"="Control", "1"="False Spring")) +
scale_fill_manual(name="Species", values=values,
labels=labs) +
scale_color_manual(name="Species", values=values,
labels=labs) + scale_x_discrete(labels=labs) +
guides(alpha=guide_legend(override.aes=list(fill=hcl(c(15,195),100,0,alpha=c(0.2,0.7)))), col=FALSE, fill=FALSE)
sixweeks <- subset(chill.stan, chill.stan$chill==2)
#sixweeks <- sixweeks[!is.na(sixweeks$ht.diff),]
height.six<- ggplot(sixweeks, aes(x=factor(species, levels = species_order), y=ht.diff, alpha=tx)) + geom_boxplot(aes(alpha=as.factor(tx), fill=as.factor(species), col=as.factor(species)), outlier.shape=NA) +
theme(legend.text=element_text(size=7), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="Helvetica"),
legend.text.align = 0, axis.text.x = element_text(face = "italic", angle=45, hjust=1),
legend.key = element_rect(colour = "transparent", fill = "white"),
axis.title.x = element_blank(),
legend.position = "none") + # top, right, bottom, left
scale_y_continuous(expand = c(0, 0)) +
ylab("Height Difference (cm)") +
scale_alpha_manual(name="Treatment", values=c(0.2, 0.7),
labels=c("0"="Control", "1"="False Spring")) +
scale_fill_manual(name="Species", values=values,
labels=labs) +
scale_color_manual(name="Species", values=values,
labels=labs) + scale_x_discrete(labels=labs) +
guides(alpha=guide_legend(override.aes=list(fill=hcl(c(15,195),100,0,alpha=c(0.2,0.7)))), col=FALSE, fill=FALSE)
chlorophyll.six<- ggplot(sixweeks, aes(x=factor(species, levels = species_order), y=mg.cm2, alpha=tx)) + geom_boxplot(aes(alpha=as.factor(tx), fill=as.factor(species), col=as.factor(species)), outlier.shape=NA) +
theme(legend.text=element_text(size=7), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="Helvetica"),
legend.text.align = 0, axis.text.x = element_text(face = "italic", angle=45, hjust=1),
legend.key = element_rect(colour = "transparent", fill = "white"),
axis.title.x = element_blank()) + # top, right, bottom, left
scale_y_continuous(expand = c(0, 0)) +
ylab("Chlorophyll Content\n (mg/cm2)") +
scale_alpha_manual(name="Treatment", values=c(0.2, 0.7),
labels=c("0"="Control", "1"="False Spring")) +
scale_fill_manual(name="Species", values=values,
labels=labs) +
scale_color_manual(name="Species", values=values,
labels=labs) + scale_x_discrete(labels=labs) +
guides(alpha=guide_legend(override.aes=list(fill=hcl(c(15,195),100,0,alpha=c(0.2,0.7)))), col=FALSE, fill=FALSE)
quartz()
ggarrange(height, chlorophyll, ncol=2)
ggarrange(height.six, chlorophyll.six, ncol=2)
rm(list=ls())
options(stringsAsFactors = FALSE)
# Load libraries
library(bayesplot) ## for plotting
library(egg) ## for plotting
library(shinystan)
library(brms)
library(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
# Set working directory
setwd("~/Documents/git/chillfreeze/analyses")
source('source/stan_utility.R')
chill.stan <- read.csv("output/clean_dvr_60dayoutput.csv", header=TRUE)
#testdat <- read.csv("output/fakedata.csv", header=TRUE)
chill.stan <- chill.stan[!is.na(chill.stan$dvr),]
View(chill.stan)
chill.stan <- subset(chill.stan, select=c("ht.diff", "tx", "chill1", "chill2", "species"))
chill.stan <- chill.stan[!is.na(chill.stan$ht.diff),]
datalist.chill <- with(chill.stan,
list(y = ht.diff,
tx = tx,
chill1 = chill1,
chill2 = chill2,
sp = as.numeric(as.factor(species)),
N = nrow(chill.stan),
n_sp = length(unique(chill.stan$species))
)
)
ht.inter.ncp = stan('stan/dvr_winter_2level_ncp.stan', data = datalist.chill,
iter = 2500, warmup=1500, control=list(max_treedepth = 12,adapt_delta = 0.99)) ##
datalist.chill <- with(chill.stan,
list(y = ht.diff,
tx = tx,
chill1 = chill1,
#chill2 = chill2,
sp = as.numeric(as.factor(species)),
N = nrow(chill.stan),
n_sp = length(unique(chill.stan$species))
)
)
ht.inter.ncp = stan('stan/dvr_winter_2level_ncp.stan', data = datalist.chill,
iter = 2500, warmup=1500, control=list(max_treedepth = 12,adapt_delta = 0.99)) ##
library(rstanarm)
ht.arm.twochill <- stan_glmer(ht.diff~tx:chill1+(tx:chill1|species), data=chill.stan)
ht.arm.twochill
ht.arm.twochill <- brm(ht.diff~tx*chill1+(tx*chill1|species), data=chill.stan)
ht.arm.twochill
chill.stan <- read.csv("output/clean_dvr_60dayoutput.csv", header=TRUE)
chill.stan <- chill.stan[!is.na(chill.stan$mg.cm2),]
chl.arm.twochill <- brm(mg.cm2~tx*chill1+(tx*chill1|species), data=chill.stan)
chl.arm.twochill
chl.arm.twochill <- brm(chlavg~tx*chill1+(tx*chill1|species), data=chill.stan)
chl.arm.twochill
chl.arm.twochill <- brm(chlavg~tx*chill1 + tx*chill2 +(tx*chill1 + tx*chill2|species), data=chill.stan)
chl.arm.twochill
ht.arm.twochill <- brm(ht.diff~tx*chill1 + tx*chill2 +(tx*chill1 + tx*chill2|species), data=chill.stan)
ht.arm.twochill
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
## Libraries
library(dplyr)
library(ggplot2)
#Load the data
results <- read.csv("~/Desktop/test_results_usda_all.csv", header=TRUE)
classes <- read.csv("~/Desktop/listofnames.csv", header=TRUE)
results$image <- gsub(".*/\\s*|'.*", '', results$fileName)
errors <- c(4, 17)
results$modelfix<-NA
results$modelfix <- ifelse(results$guess1==22, results$guess2, results$guess1)
results$modelfix <- ifelse(results$guess1==1, results$guess2, results$modelfix)
results$modelfix <- ifelse(results$modelfix%in%errors, 18, results$modelfix)
results$camera <- gsub("_.*", '', results$image)
classes$modelfix<-classes$Class.ID
classes$group<-classes$Group.name
classes$taxa<-classes$scientific_name
results <- left_join(results, classes)
tocheck <- read.csv("~/Documents/git/cameratrap/WildlifeDetections_CameraTrap.csv", header=TRUE)
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$image <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$taxa <- paste(trx$Genus, trx$Species, sep=" ")
trx$camera <- substr(trx$image, 0, 6)
trx$camera <- ifelse(trx$camera == "ATXing", substr(trx$image, 8, 13), trx$camera)
results$camera <- ifelse(results$camera=="CAM6A", "CAM06A", results$camera)
trx$taxa <- ifelse(trx$taxa=="Vulpes vulpes", "Vulpes vulpes and Urocyon Cinereoargentus", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Canis latrans", "Canidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Sciurus carolinensis", "Sciurus spp.", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Sylvilagus floridanus", "Leporidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Turdus migratorius", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Carduelis tristis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Dumetella carolinensis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Quiscalus quiscula", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Zenaida macroura", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Corvus brachyrhynchos", "Corvidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Urocyon cinereoargenteus", "Vulpes vulpes and Urocyon Cinereoargentus", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Passer domesticus", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Butorides virescens", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Neovison vison", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Cardinalis cardinalis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Tamias striatus", "Rodentia", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Lontra canadensis", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Ardea herodias", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$taxa)
trx<-subset(trx, select=c("camera", "image", "taxa"))
trx <- left_join(trx, classes)
trx$checkedbyhand <- trx$Class.ID
trx <- subset(trx, select=c("image", "camera","checkedbyhand"))
goo <- left_join(results, trx)
howmanymatch <- unique(trx$image)
foo <- goo[(goo$image%in%howmanymatch),]
results.sub <- subset(results, select=c("modelfix", "group", "taxa", "camera", "image"))
uninteresting <- c("Empty", "Human", "Vehicle")
results.sub.noempt <- results.sub[!(results.sub$group%in%uninteresting),]
ggplot(results.sub.noempt, aes(x=group)) + geom_bar() + theme_classic()
ggplot(results.sub.noempt, aes(x=group)) + geom_bar() + theme_classic() + facet_wrap(~camera)
ggplot(results.sub.noempt, aes(x=group)) + geom_bar() + theme_classic() + facet_wrap(~camera) +
axis.text.x = element_text(angle=45, vjust=0.5)
ggplot(results.sub.noempt, aes(x=group)) + geom_bar() + theme_classic() + facet_wrap(~camera) +
theme(axis.text.x = element_text(angle=45, vjust=0.5))
ggplot(results.sub.noempt, aes(x=group)) + geom_bar() + theme_classic() + facet_wrap(~camera) +
theme(axis.text.x = element_text(angle=45))
ggplot(results.sub.noempt, aes(x=group)) + geom_bar() + theme_classic() + facet_wrap(~camera) +
theme(axis.text.x = element_text(angle=45, vjust=0.2, hjust=0.95))
ggplot(results.sub.noempt, aes(x=group)) + geom_bar() + theme_classic() + facet_wrap(~camera) +
theme(axis.text.x = element_text(angle=45, vjust=0.2, hjust=0.05))
ggplot(results.sub.noempt, aes(x=group)) + geom_bar() + theme_classic() + facet_wrap(~camera) +
theme(axis.text.x = element_text(angle=45, hjust=0.95))
View(trx)
location <- read.csv("~/Documents/git/cameratrap/WildlifeDetections_CameraTrap.csv", header=TRUE)
location <- subset(location, select=c("Sampling.Event", "Raw.Name", "Latitude", "Longitude" ))
location$image <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
location$camera <- substr(location$image, 0, 6)
location <- read.csv("~/Documents/git/cameratrap/WildlifeDetections_CameraTrap.csv", header=TRUE)
location <- subset(location, select=c("Sampling.Event", "Raw.Name", "Latitude", "Longitude" ))
location$image <- paste(location$Sampling.Event, location$Raw.Name, sep="_")
location$camera <- substr(location$image, 0, 6)
location$camera <- ifelse(location$camera == "ATXing", substr(location$image, 8, 13), location$camera)
location$site <- paste(location$Latitude, location$Longitude, sep=" x ")
goober <- left_join(results.sub.noempt, location)
ggplot(goober, aes(x=group)) + geom_bar() + theme_classic() + facet_wrap(~site) +
theme(axis.text.x = element_text(angle=45, hjust=0.95)) + ylab("") + xlab("Number of images")
View(location)
ggplot(goober, aes(x=group)) + geom_bar() + theme_classic() + facet_wrap(~camera) +
theme(axis.text.x = element_text(angle=45, hjust=0.95)) + ylab("") + xlab("Number of images")
rmcams <- c("CAM10A", "CAM11A", "CAM11B")
goober <- goober[!(goober$camera%in%rmcams),]
ggplot(goober, aes(x=group)) + geom_bar() + theme_classic() + facet_wrap(~camera) +
theme(axis.text.x = element_text(angle=45, hjust=0.95)) + ylab("") + xlab("Number of images")
View(location)
sort(unique(location$site))
sort(unique(goober$site))
location <- subset(location, subset=c("camera", "site"))
location <- subset(location, select=c("camera", "site"))
goober <- left_join(results.sub.noempt, location)
ggplot(goober, aes(x=group)) + geom_bar() + theme_classic() + facet_wrap(~site) +
theme(axis.text.x = element_text(angle=45, hjust=0.95)) + ylab("") + xlab("Number of images")
table(location$camera, location$site)
rmcams <- c("CAM10A", "CAM11A", "CAM11B")
goober <- goober[!(goober$camera%in%rmcams),]
View(results.sub.noempt)
goober <- full_join(results.sub.noempt, location)
goober <- left_join(results.sub.noempt, location)
goober <- right_join(results.sub.noempt, location)
location<-location[!duplicated(location),]
goober <- left_join(results.sub.noempt, location)
ggplot(goober, aes(x=group)) + geom_bar() + theme_classic() + facet_wrap(~site) +
theme(axis.text.x = element_text(angle=45, hjust=0.95)) + ylab("") + xlab("Number of images")
rmcams <- c("CAM10A", "CAM11A", "CAM11B")
goober <- goober[!(goober$camera%in%rmcams),]
ggplot(goober, aes(x=group)) + geom_bar() + theme_classic() + facet_wrap(~site) +
theme(axis.text.x = element_text(angle=45, hjust=0.95)) + ylab("") + xlab("Number of images")
goober$site <- ifelse(is.na(goober$site), "CAM07A", goober$site)
ggplot(goober, aes(x=group)) + geom_bar() + theme_classic() + facet_wrap(~site) +
theme(axis.text.x = element_text(angle=45, hjust=0.95)) + ylab("") + xlab("Number of images")
ggplot(goober, aes(x=group)) + geom_bar() + theme_classic() + facet_wrap(~site) +
theme(axis.text.x = element_text(angle=45, hjust=0.95)) + xlab("") + ylab("Number of images")
quartz()
ggplot(goober, aes(x=group)) + geom_bar() + theme_classic() + facet_wrap(~site) +
theme(axis.text.x = element_text(angle=45, hjust=0.95)) + xlab("") + ylab("Number of images")
