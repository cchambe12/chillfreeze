labels=sizes, guide = guide_legend(title.position = "top", nrow=1,
override.aes = list(shape = 21),
label.theme = element_text(size=7))) +
scale_color_manual(name="Species", values=cols, labels=tt$species.name,
guide = guide_legend(title.position = "top", nrow=1,
override.aes = list(size = 3),
label.theme = element_text(face = "italic", size=7)))+
theme(legend.position = "bottom", legend.box="vertical",
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.box.just = "left",
legend.justification = c("center", "bottom"),
legend.box.background = element_rect(),
legend.title = element_text(size=9),
legend.text.align = 0,
legend.margin = margin(-0.1,0,0,0, unit="cm"))
mylegend<-g_legend(sizelegend)
dvrplot <- plot_grid(g1, NULL, mylegend, nrow=3, rel_heights=c(3, 0.3, 0.5))
dvrplot
grid.arrange(dvr4, dvr6, dvr8, mylegend, nrow=3, heights = c(3, 0.5, 1),
layout_matrix=rbind(c(1, 2, 3),
c(NA),
c(NA, 4, 4, 4, NA)))
grid.arrange(dvr4, dvr6, dvr8, mylegend, nrow=3, heights = c(3, 0.5, 1),
layout_matrix=rbind(c(1, NA, 2, NA, 3),
c(NA),
c(NA, 4, 4, 4, NA)))
grid.arrange(dvr4, dvr6, dvr8, mylegend, nrow=4, heights = c(3, 0.5, 1, 0.2),
layout_matrix=rbind(c(1, 1, NA, 2, 2, NA, 3, 3),
c(NA),
c(NA, 4, 4, 4, NA),
c(NA)))
sizelegend <- ggplot(aes(x=dvrcontmean, y=dvrfrzmean, col=species.name, size=as.factor(diff.labels)), data=tt) +
geom_point(shape=19) +
scale_size_manual(name=expression("Change in duration of vegetative risk (days)"), values=valsize,
labels=sizes, guide = guide_legend(title.position = "top", nrow=1,
override.aes = list(shape = 21),
label.theme = element_text(size=7))) +
scale_color_manual(name="Species", values=cols, labels=tt$species.name,
guide = guide_legend(title.position = "top", nrow=1,
override.aes = list(size = 3),
label.theme = element_text(face = "italic", size=7)))+
theme(legend.position = "bottom", legend.box="vertical",
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.box.just = "left",
legend.justification = c("center", "bottom"),
legend.box.background = element_rect(),
legend.title = element_text(size=9),
legend.text.align = 0)
mylegend<-g_legend(sizelegend)
grid.arrange(dvr4, dvr6, dvr8, mylegend, nrow=4, heights = c(3, 0.5, 1, 0.2),
layout_matrix=rbind(c(1, 1, 1, NA, 2, 2, 2, NA, 3, 3, 3),
c(NA),
c(NA, 4, 4, 4, NA),
c(NA)))
grid.arrange(dvr4, dvr6, dvr8, mylegend, nrow=4, heights = c(3, 0.5, 1, 0.5),
layout_matrix=rbind(c(1, 1, 1,1, NA,2, 2, 2, 2, NA,3, 3, 3, 3),
c(NA),
c(NA, 4, 4, 4, NA),
c(NA)))
grid.arrange(dvr4, dvr6, dvr8, mylegend, nrow=4, heights = c(3, 0.5, 0.5, 0.5),
layout_matrix=rbind(c(1, 1, 1,1, NA,2, 2, 2, 2, NA,3, 3, 3, 3),
c(NA),
c(NA, 4, 4, 4, NA),
c(NA)))
grid.arrange(dvr4, dvr6, dvr8, mylegend, nrow=4, heights = c(3, 0.75, 0.5, 0.75),
layout_matrix=rbind(c(1, 1, 1,1, NA,2, 2, 2, 2, NA,3, 3, 3, 3),
c(NA),
c(NA, 4, 4, 4, NA),
c(NA)))
grid.arrange(dvr4, dvr6, dvr8, mylegend, nrow=4, heights = c(3, 0.75, 0.5, 0.75),
layout_matrix=rbind(c(1, 1, 1, 1, 1, 1, NA, 2, 2, 2, 2, 2, 2, NA,3, 3, 3, 3, 3, 3),
c(NA),
c(NA, 4, 4, 4, NA),
c(NA)))
dvr4 <- ggplot(chill4, aes(x=dvrcontmean, y=dvrfrzmean, col=species.name), alpha=2) +
geom_point(aes(x=dvrcontmean, y=dvrfrzmean, size=as.factor(diff.labels)), shape=21) +
geom_linerange(aes(ymin=ymin, ymax=ymax), alpha=0.3) +
geom_errorbarh(aes(xmin = xmin, xmax = xmax, height = 0), alpha=0.3) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.text.align = 0,
legend.position = "none",
legend.key = element_rect(colour = "transparent", fill = "white")) +
#geom_text(aes(label=species), vjust=2) +
xlab("Duration of vegetative risk (control)") +
ylab("Duration of vegetative \nrisk (treatment)") +
scale_color_manual(name="Species", values=cols,
labels=chill4$species.name) +
scale_size_manual(name=expression("Change in duration of \nvegetative risk (days)"), values=valsize,
labels=sizes) +
#scale_size_continuous(name=expression(Delta*" in false spring risk")) +
scale_y_continuous(breaks=seq(8,28,2)) +
scale_x_continuous(breaks=seq(8,28,2)) +
coord_cartesian(xlim=c(8,28), ylim=c(8,28), expand=TRUE) + guides(col=FALSE) +
ggtitle("A. Four weeks chilling")
dvr6 <- ggplot(chill6, aes(x=dvrcontmean, y=dvrfrzmean, col=species.name), alpha=2) +
geom_point(aes(x=dvrcontmean, y=dvrfrzmean, size=as.factor(diff.labels)), shape=21) +
geom_linerange(aes(ymin=ymin, ymax=ymax), alpha=0.3) +
geom_errorbarh(aes(xmin = xmin, xmax = xmax, height = 0), alpha=0.3) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.text.align = 0,
legend.position = "none",
legend.key = element_rect(colour = "transparent", fill = "white")) +
#geom_text(aes(label=species), vjust=2) +
xlab("Duration of vegetative risk (control)") +
ylab("Duration of vegetative \nrisk (treatment)") +
scale_color_manual(name="Species", values=cols,
labels=chill6$species.name) +
scale_size_manual(name=expression("Change in duration of \nvegetative risk (days)"), values=valsize,
labels=sizes) +
#scale_size_continuous(name=expression(Delta*" in false spring risk")) +
scale_y_continuous(breaks=seq(8,28,2)) +
scale_x_continuous(breaks=seq(8,28,2)) +
coord_cartesian(xlim=c(8,28), ylim=c(8,28), expand=TRUE) + guides(col=FALSE) +
ggtitle("B. Six weeks chilling")
dvr8 <- ggplot(chill8, aes(x=dvrcontmean, y=dvrfrzmean, col=species.name), alpha=2) +
geom_point(aes(x=dvrcontmean, y=dvrfrzmean, size=as.factor(diff.labels)), shape=21) +
geom_linerange(aes(ymin=ymin, ymax=ymax), alpha=0.3) +
geom_errorbarh(aes(xmin = xmin, xmax = xmax, height = 0), alpha=0.3) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.text.align = 0,
legend.position="none",
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.box="horizontal") +
#geom_text(aes(label=species.name), vjust=-1, angle=345, fontface="italic") +
xlab("Duration of vegetative risk (control)") +
ylab("Duration of vegetative \nrisk (treatment)") +
scale_color_manual(name="Species", values=cols,
labels=chill8$species.name) +
scale_size_manual(name=expression("Change in duration of \nvegetative risk (days)"), values=valsize,
labels=sizes) +
scale_y_continuous(breaks=seq(8,28,2)) +
scale_x_continuous(breaks=seq(8,28,2)) +
coord_cartesian(xlim=c(8,28), ylim=c(8,28), expand=TRUE) +
ggtitle("C. Eight weeks chilling")
sizelegend <- ggplot(aes(x=dvrcontmean, y=dvrfrzmean, col=species.name, size=as.factor(diff.labels)), data=tt) +
geom_point(shape=19) +
scale_size_manual(name=expression("Change in duration of vegetative risk (days)"), values=valsize,
labels=sizes, guide = guide_legend(title.position = "top", nrow=1,
override.aes = list(shape = 21),
label.theme = element_text(size=7))) +
scale_color_manual(name="Species", values=cols, labels=tt$species.name,
guide = guide_legend(title.position = "top", nrow=1,
override.aes = list(size = 3),
label.theme = element_text(face = "italic", size=7)))+
theme(legend.position = "bottom", legend.box="vertical",
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.box.just = "left",
legend.justification = c("center", "bottom"),
legend.box.background = element_rect(),
legend.title = element_text(size=9),
legend.text.align = 0)
grid.arrange(dvr4, dvr6, dvr8, mylegend, nrow=4, heights = c(3, 0.75, 0.5, 0.75),
layout_matrix=rbind(c(1, 1, 1, 1, 1, 1, NA, 2, 2, 2, 2, 2, 2, NA,3, 3, 3, 3, 3, 3),
c(NA),
c(NA, NA, 4, 4, 4, NA, NA),
c(NA)))
sizelegend <- ggplot(aes(x=dvrcontmean, y=dvrfrzmean, col=species.name, size=as.factor(diff.labels)), data=tt) +
geom_point(shape=19) +
scale_size_manual(name=expression("Change in duration of vegetative risk (days)"), values=valsize,
labels=sizes, guide = guide_legend(title.position = "top", nrow=1,
override.aes = list(shape = 21),
label.theme = element_text(size=7))) +
scale_color_manual(name="Species", values=cols, labels=tt$species.name,
guide = guide_legend(title.position = "top", nrow=1,
override.aes = list(size = 3),
label.theme = element_text(face = "italic", size=7)))+
theme(legend.position = "bottom", legend.box="vertical",
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.box.just = "left",
legend.justification = c("center", "bottom"),
legend.box.background = element_rect(),
legend.title = element_text(size=9),
legend.text.align = 0,
legend.spacing.y = unit(-0.1, "cm"))
mylegend<-g_legend(sizelegend)
grid.arrange(dvr4, dvr6, dvr8, mylegend, nrow=4, heights = c(3, 0.75, 0.5, 0.75),
layout_matrix=rbind(c(1, 1, 1, 1, 1, 1, NA, 2, 2, 2, 2, 2, 2, NA,3, 3, 3, 3, 3, 3),
c(NA),
c(NA, NA, 4, 4, 4, NA, NA),
c(NA)))
sizelegend <- ggplot(aes(x=dvrcontmean, y=dvrfrzmean, col=species.name, size=as.factor(diff.labels)), data=tt) +
geom_point(shape=19) +
scale_size_manual(name=expression("Change in duration of vegetative risk (days)"), values=valsize,
labels=sizes, guide = guide_legend(title.position = "top", nrow=1,
override.aes = list(shape = 21),
label.theme = element_text(size=7))) +
scale_color_manual(name="Species", values=cols, labels=tt$species.name,
guide = guide_legend(title.position = "top", nrow=1,
override.aes = list(size = 3),
label.theme = element_text(face = "italic", size=7)))+
theme(legend.position = "bottom", legend.box="vertical",
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.box.just = "left",
legend.justification = c("center", "bottom"),
legend.box.background = element_rect(),
legend.title = element_text(size=9),
legend.text.align = 0,
legend.spacing.y = unit(-0.05, "cm"))
mylegend<-g_legend(sizelegend)
grid.arrange(dvr4, dvr6, dvr8, mylegend, nrow=4, heights = c(3, 0.55, 0.5, 0.55),
layout_matrix=rbind(c(1, 1, 1, 1, 1, 1, NA, 2, 2, 2, 2, 2, 2, NA,3, 3, 3, 3, 3, 3),
c(NA),
c(NA, NA, 4, 4, 4, NA, NA),
c(NA)))
grid.arrange(dvr4, dvr6, dvr8, mylegend, nrow=4, heights = c(3, 0.55, 0.5, 0.55),
layout_matrix=rbind(c(1, 1, 1, 1, 1, 1, 1, 1, NA, 2, 2, 2, 2, 2, 2, 2, 2, NA,3, 3, 3, 3, 3, 3, 3, 3),
c(NA),
c(NA, NA, 4, 4, 4, NA, NA),
c(NA)))
grid.arrange(dvr4, dvr6, dvr8, mylegend, nrow=4, heights = c(3, 0.55, 0.5, 0.55),
layout_matrix=rbind(c(1, 1, 1, 1, 1, 1, 1,  NA, 2, 2, 2, 2, 2, 2, 2,  NA,3, 3, 3, 3, 3, 3, 3),
c(NA),
c(NA, NA, 4, 4, 4, NA, NA),
c(NA)))
grid.arrange(dvr4, dvr6, dvr8, mylegend, nrow=4, heights = c(3, 0.55, 0.5, 0.55),
layout_matrix=rbind(c(1, 1, 1, 1, 1, 1, NA, 2, 2, 2, 2, 2, 2, NA, 3, 3, 3, 3, 3, 3),
c(NA),
c(NA, NA, 4, 4, 4, NA, NA),
c(NA)))
grid.arrange(dvr4, dvr6, dvr8, mylegend, nrow=4, heights = c(3, 0.55, 0.5, 0.55),
layout_matrix=rbind(c(1, 1, 1, 1, 1, 1, 1, NA, 2, 2, 2, 2, 2, 2, 2, NA, 3, 3, 3, 3, 3, 3, 3),
c(NA),
c(NA, NA, NA, 4, 4, 4, NA, NA, NA),
c(NA)))
grid.arrange(dvr4, dvr6, dvr8, mylegend, nrow=4, heights = c(3, 0.55, 0.5, 0.55),
layout_matrix=rbind(c(1, 1, 1, 1, NA, 2, 2, 2, 2, NA, 3, 3, 3, 3),
c(NA),
c(NA, NA, 4, 4, 4, NA, NA),
c(NA)))
grid.arrange(dvr4, dvr6, dvr8, mylegend, nrow=4, heights = c(4, 0.55, 0.5, 0.55),
layout_matrix=rbind(c(1, 1, 1, 1, NA, 2, 2, 2, 2, NA, 3, 3, 3, 3),
c(NA),
c(NA, NA, 4, 4, 4, NA, NA),
c(NA)))
grid.arrange(dvr4, dvr6, dvr8, mylegend, nrow=4, heights = c(4, 0.55, 0.5, 0.55),
layout_matrix=rbind(c(1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3),
c(NA),
c(NA, 4, 4, 4, NA),
c(NA)))
dvrplot<-grid.arrange(dvr4, dvr6, dvr8, mylegend, nrow=4, heights = c(4, 0.55, 0.5, 0.55),
layout_matrix=rbind(c(1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3),
c(NA),
c(NA, 4, 4, 4, NA),
c(NA)))
quartz()
dvrplot<-grid.arrange(dvr4, dvr6, dvr8, mylegend, nrow=4, heights = c(4, 0.55, 0.5, 0.55),
layout_matrix=rbind(c(1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3),
c(NA),
c(NA, 4, 4, 4, NA),
c(NA)))
ggsave("figures/dvrspeciesdiff.png",width=6,height=3,units="in",bg = "white", dpi=500, plot=dvrplot)
ggsave("figures/dvrspeciesdiff.png",width=6,height=3,units="cm",bg = "white", dpi=500, plot=dvrplot)
ggsave("figures/dvrspeciesdiff.png",width=10,height=5,units="cm",bg = "white", dpi=500, plot=dvrplot)
pdf("figures/", "dvrspeciesdiffstest", ".pdf", sep="",
width = 10, height = 6)
pdf("figures/", "dvrspeciesdiffstest.pdf",
width = 10, height = 6)
pdf("figures", "dvrspeciesdiffstest.pdf",
width = 10, height = 6)
pdf("figures/dvrspeciesdiffstest.pdf",
width = 10, height = 6)
png("figures/dvrspeciesdiffstest.pdf",
width = 10, height = 6, res=750)
png("figures/dvrspeciesdiffstest",
width = 10, height = 6, res=750)
dvrplot<-grid.arrange(dvr4, dvr6, dvr8, mylegend, nrow=4, heights = c(4, 0.55, 0.5, 0.55),
layout_matrix=rbind(c(1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3),
c(NA),
c(NA, 4, 4, 4, NA),
c(NA)))
png("figures/dvrspeciesdiffstest",
width = 10, height = 6, res=750)
plot(dvrplot)
dev.off
dev.off()
png("figures/dvrspeciesdiffstest",
width = 10, height = 6, res=750, units="cm")
plot(dvrplot)
dev.off()
png("figures/dvrspeciesdiffstest",
width = 10, height = 6, res=300, units="cm")
plot(dvrplot)
dev.off()
ggsave("figures/dvrspeciesdifftest.png",width=10,height=5,units="cm",bg = "white", dpi=500, plot=dvrplot)
ggsave("figures/dvrspeciesdifftest.png",units="cm",bg = "white", dpi=500, plot=dvrplot)
ggsave("figures/dvrspeciesdifftest.png",width=8, height=4, units="cm",bg = "white", dpi=500, plot=dvrplot)
ggsave("figures/dvrspeciesdifftest.png",width=5, height=3, units="cm",bg = "white", dpi=500, plot=dvrplot)
ggsave("figures/dvrspeciesdifftest.png",width=5, height=3, units="cm",bg = "white", plot=dvrplot)
ggsave("figures/dvrspeciesdifftest.png",units="cm",bg = "white", plot=dvrplot)
ggsave("figures/dvrspeciesdifftest.png",width=12, height=7,units="cm",bg = "white", plot=dvrplot)
ggsave("figures/dvrspeciesdifftest.png",width=16, height=8,units="cm",bg = "white", plot=dvrplot)
ggsave("figures/dvrspeciesdifftest.png",width=20, height=12,units="cm",bg = "white", plot=dvrplot)
ggsave("figures/dvrspeciesdifftest.png",width=30, height=12,units="cm",bg = "white", plot=dvrplot)
ggsave("figures/dvrspeciesdifftest.png",width=30, height=12,units="cm",bg = "white",dpi=500, plot=dvrplot)
ggsave("figures/dvrspeciesdifftest.png",width=30, height=14,units="cm",bg = "white",dpi=500, plot=dvrplot)
rm(list=ls())
options(stringsAsFactors = FALSE)
# Load libraries
library(bayesplot) ## for plotting
library(egg) ## for plotting
library(shinystan)
library(rstanarm)
library(rstan)
library(brms)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
# Set working directory
setwd("~/Documents/git/chillfreeze/analyses")
source('source/stan_utility.R')
chill.stan <- read.csv("output/clean_dvr_60dayoutput.csv", header=TRUE)
#testdat <- read.csv("output/fakedata.csv", header=TRUE)
chill.stan <- chill.stan[!is.na(chill.stan$dvr),]
rmspp <- c("FAGGRA", "NYSSYL")
datalist.chill <- with(chill.stan,
list(y = dvr,
tx = tx,
chill1 = chill1,
chill2 = chill2,
sp = as.numeric(as.factor(species)),
N = nrow(chill.stan),
n_sp = length(unique(chill.stan$species))
)
)
########################################################################################
########################################################################################
dvr.inter.ncp.skew = stan('stan/zarchive/dvr_winter_2level.stan', data = datalist.chill,
iter = 2500, warmup=1500, control=list(max_treedepth = 12,adapt_delta = 0.99)) ##
########################################################################################
########################################################################################
dvr.inter.ncp.skew = stan('stan/zarchive/dvr_winter_2level_ncp.stan', data = datalist.chill,
iter = 2500, warmup=1500, control=list(max_treedepth = 12,adapt_delta = 0.99)) ##
dvr.inter.ncp.skew
check_all_diagnostics(dvr.inter.ncp.skew)
########################################################################################
########################################################################################
dvr.inter.ncp = stan('stan/dvr_winter_2level_ncp.stan', data = datalist.chill,
iter = 5000, warmup=2000, control=list(max_treedepth = 15,adapt_delta = 0.99)) ##
chill.stan$species.name <- NA
chill.stan$species.name <- ifelse(chill.stan$species=="ACESAC", "Acer saccharinum", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="ALNRUG", "Alnus rugosa", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="BETPAP", "Betula papyrifera", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="BETPOP", "Betula populifolia", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="CORRAC", "Cornus racemosa", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="SALPUR", "Salix purpurea", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="SORAME", "Sorbus americana", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="VIBDEN", "Viburnum dentatum", chill.stan$species.name)
#### Now for mu plots based of bb_analysis/models_stan_plotting.R ###
figpath <- "figures"
figpathmore <- "dvr" ### change based on model
source("exp_muplot.R")
cols <- adjustcolor("indianred3", alpha.f = 0.3)
my.pal <- rep(brewer.pal(n = 10, name = "Paired"), 8)
# display.brewer.all()
alphahere = 0.4
xlab <- "Model estimate of change in \nduration of vegetative risk (days)" ## change based on model
sumer.ni <- summary(dvr.inter.ncp)$summary
sumer.ni[grep("mu_", rownames(sumer.ni)),]
sort(unique(chill.stan$species)) # numbers are alphabetical
modelhere <- dvr.inter.ncp
#quartz()
muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
########################################################################################
########################################################################################
dvr.inter.ncp = stan('stan/dvr_winter_2level_ncp.stan', data = datalist.chill,
iter = 5000, warmup=2000, control=list(max_treedepth = 15,adapt_delta = 0.99)) ## 7 divergent transitions
sumer.ni <- summary(dvr.inter.ncp)$summary
sumer.ni[grep("mu_", rownames(sumer.ni)),]
sort(unique(chill.stan$species)) # numbers are alphabetical
#quartz()
muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
dvr.inter.ncp.skew = stan('stan/zarchive/dvr_winter_2level_ncp_skewnormal.stan', data = datalist.chill,
iter = 5000, warmup=2000, control=list(max_treedepth = 15,adapt_delta = 0.99)) ## 7 divergent transitions
figpathmore <- "dvrskew" ### change based on model
sumer.ni <- summary(dvr.inter.ncp.skew)$summary
modelhere <- dvr.inter.ncp.skew
#quartz()
muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
########################################################################################
########################################################################################
dvr.inter.ncp = stan('stan/dvr_winter_2level_ncp.stan', data = datalist.chill,
iter = 5000, warmup=2000, control=list(max_treedepth = 15,adapt_delta = 0.99)) ## 7 divergent transitions
figpathmore <- "dvr" ### change based on model
sumer.ni <- summary(dvr.inter.ncp)$summary
modelhere <- dvr.inter.ncp
#quartz()
muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
########################################################################################
########################################################################################
dvr.inter.ncp = stan('stan/dvr_winter_2level_ncp.stan', data = datalist.chill,
iter = 5000, warmup=2000, control=list(max_treedepth = 15,adapt_delta = 0.99)) ## 7 divergent transitions
sumer.ni <- summary(dvr.inter.ncp)$summary
modelhere <- dvr.inter.ncp
#quartz()
muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
########################################################################################
########################################################################################
dvr.inter.ncp = stan('stan/dvr_winter_2level_ncp.stan', data = datalist.chill,
iter = 5000, warmup=2000, control=list(max_treedepth = 15,adapt_delta = 0.99)) ## 7 divergent transitions
sumer.ni <- summary(dvr.inter.ncp)$summary
modelhere <- dvr.inter.ncp
#quartz()
muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
########################################################################################
########################################################################################
dvr.inter.ncp = stan('stan/dvr_winter_2level_ncp.stan', data = datalist.chill,
iter = 5000, warmup=2000, control=list(max_treedepth = 15,adapt_delta = 0.99)) ## 7 divergent transitions
sumer.ni <- summary(dvr.inter.ncp)$summary
modelhere <- dvr.inter.ncp
#quartz()
muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
rm(list=ls())
options(stringsAsFactors = FALSE)
# Load libraries
library(bayesplot) ## for plotting
library(egg) ## for plotting
library(shinystan)
library(rstanarm)
library(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
# Set working directory
setwd("~/Documents/git/chillfreeze/analyses")
source('source/stan_utility.R')
chill.stan <- read.csv("output/clean_dvr_60dayoutput.csv", header=TRUE)
chill.stan$ht.diff <- chill.stan$X60dayheight - chill.stan$lo.ht
chill.stan <- chill.stan[!is.na(chill.stan$ht.diff),]
chill.stan$ht.rgr <- (log(chill.stan$X60dayheight) - log(chill.stan$lo.ht)) * 10
datalist.chill <- with(chill.stan,
list(y = ht.rgr,
tx = tx,
chill1 = chill1,
chill2 = chill2,
sp = as.numeric(as.factor(species)),
N = nrow(chill.stan),
n_sp = length(unique(chill.stan$species))
)
)
htrgr.inter.normal = stan('stan/htrgr_2level_ncp.stan', data = datalist.chill,
iter = 5000, warmup=3000, control=list(max_treedepth = 15,adapt_delta = 0.99)) ###
figpathmore <- "htrgr.ncp" ### change based on model
source("exp_muplot.R")
chill.stan$species.name <- NA
chill.stan$species.name <- ifelse(chill.stan$species=="ACESAC", "Acer saccharinum", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="ALNRUG", "Alnus rugosa", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="BETPAP", "Betula papyrifera", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="BETPOP", "Betula populifolia", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="CORRAC", "Cornus racemosa", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="SALPUR", "Salix purpurea", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="SORAME", "Sorbus americana", chill.stan$species.name)
chill.stan$species.name <- ifelse(chill.stan$species=="VIBDEN", "Viburnum dentatum", chill.stan$species.name)
figpathmore <- "htrgr.ncp" ### change based on model
source("exp_muplot.R")
cols <- adjustcolor("indianred3", alpha.f = 0.3)
my.pal <- rep(brewer.pal(n = 10, name = "Paired"), 8)
# display.brewer.all()
alphahere = 0.4
xlab <- "Model estimate of change in \nrelative growth rate (height)" ## change based on model
sumer.ni <- summary(htrgr.inter.normal)$summary
sumer.ni[grep("mu_", rownames(sumer.ni)),]
modelhere <- htrgr.inter.normal
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
muplotfx(modelhere, "", 8, 8, c(0,5), c(-1.5, 1.5) , 1.7, 3.5)
#### Now for mu plots based of bb_analysis/models_stan_plotting.R ###
figpath <- "figures"
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
muplotfx(modelhere, "", 8, 8, c(0,5), c(-1.5, 1.5) , 1.7, 3.5)
range(chill.stan$ht.rgr)
datalist.chill <- with(chill.stan,
list(y = ht.diff,
tx = tx,
chill1 = chill1,
chill2 = chill2,
sp = as.numeric(as.factor(species)),
N = nrow(chill.stan),
n_sp = length(unique(chill.stan$species))
)
)
htdiff.inter.ncp = stan('stan/htrgr_2level_ncp.stan', data = datalist.chill,
iter = 5000, warmup=3000, control=list(max_treedepth = 15,adapt_delta = 0.99)) ###
cg <-read.csv("~/Documents/git/wildhellgarden/analyses/2019_data/2019_CG_datasheet.csv", header=TRUE)
xlab <- "Model estimate of change in \nrelative growth rate in height (cm))" ## change based on model
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
muplotfx(modelhere, "", 8, 8, c(0,5), c(-1.5, 1.5) , 1.7, 3.5)
xlab <- "Model estimate of change in \nrelative growth rate in height (cm)" ## change based on model
#quartz()
#muplotfx(modelhere, "", 8, 8, c(0,5), c(-10, 10) , 10.5, 3.5)
muplotfx(modelhere, "", 8, 8, c(0,5), c(-1.5, 1.5) , 1.7, 3.5)
check_all_diagnostics(htrgr.inter.normal)
yrep <- rstan::extract(chl.inter.normal)
yrep <- yrep$yhat
ppc <- ppc_stat(y, yrep)
ppc.max <- ppc_stat(y, yrep, stat = "max")
ppc.min <- ppc_stat(y, yrep, stat = "min")
ppc.sd <- ppc_stat(y, yrep, stat = "sd")
yrep <- rstan::extract(htrgr.inter.normal)
yrep <- yrep$yhat
ppc <- ppc_stat(y, yrep)
ppc.max <- ppc_stat(y, yrep, stat = "max")
y <- as.vector(chill.stan$ht.rgr)
yrep <- yrep$yhat
yrep <- rstan::extract(htrgr.inter.normal)
yrep <- yrep$yhat
ppc <- ppc_stat(y, yrep)
ppc.max <- ppc_stat(y, yrep, stat = "max")
ppc.min <- ppc_stat(y, yrep, stat = "min")
ppc.sd <- ppc_stat(y, yrep, stat = "sd")
#
quartz()
grid.arrange(ppc, ppc.sd, ppc.max, ppc.min, ncol=2, nrow=2)
