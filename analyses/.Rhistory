classes$taxa<-classes$scientific_name
## Libraries
library(dplyr)
foo <- left_join(results, classes)
View(results)
View(foo)
results.sub <- subset(results, c("modelfix", "group", "taxa", "camera", "image"))
results <- left_join(results, classes)
results.sub <- subset(results, c("modelfix", "group", "taxa", "camera", "image"))
results.sub <- subset(results, select=c("modelfix", "group", "taxa", "camera", "image"))
library(ggplot2)
ggplot(results.sub, aes(x=group)) + geom_bar()
results.sub.noempt <- results.sub[!(results.sub$group=="Human"),]
ggplot(results.sub.noempt, aes(x=group)) + geom_bar() + theme_classic()
results.sub.noempt <- results.sub[!(results.sub$group=="Empty"),]
ggplot(results.sub.noempt, aes(x=group)) + geom_bar() + theme_classic()
results$modelfix <- ifelse(results$guess1==22, results$guess2, results$guess1)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
## Libraries
library(dplyr)
library(ggplot2)
#Load the data
results <- read.csv("~/Desktop/test_results_usda_all.csv", header=TRUE)
classes <- read.csv("~/Desktop/listofnames.csv", header=TRUE)
results$image <- gsub(".*/\\s*|'.*", '', results$fileName)
errors <- c(4, 17)
results$modelfix <- ifelse(results$guess1%in%errors, 18, results$guess1)
results$modelfix <- ifelse(results$guess1==22, results$guess2, results$guess1)
results$camera <- gsub("_.*", '', results$image)
classes$modelfix<-classes$Class.ID
classes$group<-classes$Group.name
classes$taxa<-classes$scientific_name
results <- left_join(results, classes)
results.sub <- subset(results, select=c("modelfix", "group", "taxa", "camera", "image"))
results.sub.noempt <- results.sub[!(results.sub$group=="Empty"),]
ggplot(results.sub.noempt, aes(x=group)) + geom_bar() + theme_classic()
uninteresting <- c("Empty", "Human", "Vehicle")
results.sub.noempt <- results.sub[!(results.sub$group%in%uninteresting),]
ggplot(results.sub.noempt, aes(x=group)) + geom_bar() + theme_classic()
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
## Libraries
library(dplyr)
library(ggplot2)
#Load the data
results <- read.csv("~/Desktop/test_results_usda_all.csv", header=TRUE)
classes <- read.csv("~/Desktop/listofnames.csv", header=TRUE)
results$image <- gsub(".*/\\s*|'.*", '', results$fileName)
errors <- c(4, 17)
results$modelfix<-NA
results$modelfix <- ifelse(results$guess1==22, results$guess2, results$modelfix)
results$modelfix <- ifelse(results$guess1==1, results$guess2, results$modelfix)
results$modelfix <- ifelse(results$modelfix%in%errors, 18, results$guess1)
results$camera <- gsub("_.*", '', results$image)
classes$modelfix<-classes$Class.ID
classes$group<-classes$Group.name
classes$taxa<-classes$scientific_name
results <- left_join(results, classes)
tocheck <- read.csv("~/Documents/git/cameratrap/WildlifeDetections_CameraTrap.csv", header=TRUE)
colnames(tocheck)
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$imageID <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$animaltype <- paste(trx$Genus, trx$Species, sep="_")
trx$class <- as.integer(as.factor(trx$animaltype))
trx <- subset(trx, select=c("imageID", "class"))
images <- trx
### Prepare for download...
images$camera <- substr(images$imageID, 0, 6)
images$camera <- ifelse(images$camera == "ATXing", substr(images$imageID, 8, 13), images$camera)
head(images)
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$imageID <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$animaltype <- paste(trx$Genus, trx$Species, sep="_")
trx <- subset(trx, select=c("imageID", "class", "animaltype"))
images <- trx
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$imageID <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$animaltype <- paste(trx$Genus, trx$Species, sep="_")
head(trx)
head(results)
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$imageID <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$animaltype <- paste(trx$Genus, trx$Species, sep=" ")
images <- trx
### Prepare for download...
images$camera <- substr(images$imageID, 0, 6)
images$camera <- ifelse(images$camera == "ATXing", substr(images$imageID, 8, 13), images$camera)
head(images)
goo <- left_join(trx, classes)
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$imageID <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$taxa <- paste(trx$Genus, trx$Species, sep=" ")
trx$camera <- substr(trx$imageID, 0, 6)
trx$camera <- ifelse(trx$camera == "ATXing", substr(trx$imageID, 8, 13), trx$camera)
goo <- left_join(trx, classes)
head(trx)
head(goo)
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$imageID <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$taxa <- paste(trx$Genus, trx$Species, sep=" ")
trx$camera <- substr(trx$imageID, 0, 6)
trx$camera <- ifelse(trx$camera == "ATXing", substr(trx$imageID, 8, 13), trx$camera)
trx <- left_join(trx, classes)
trx$Class.ID <- checkedbyhand
trx$checkedbyhand <- trx$Class.ID
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
## Libraries
library(dplyr)
library(ggplot2)
#Load the data
results <- read.csv("~/Desktop/test_results_usda_all.csv", header=TRUE)
classes <- read.csv("~/Desktop/listofnames.csv", header=TRUE)
results$image <- gsub(".*/\\s*|'.*", '', results$fileName)
errors <- c(4, 17)
results$modelfix<-NA
results$modelfix <- ifelse(results$guess1==22, results$guess2, results$modelfix)
results$modelfix <- ifelse(results$guess1==1, results$guess2, results$modelfix)
results$modelfix <- ifelse(results$modelfix%in%errors, 18, results$guess1)
results$camera <- gsub("_.*", '', results$image)
classes$modelfix<-classes$Class.ID
classes$group<-classes$Group.name
classes$taxa<-classes$scientific_name
results <- left_join(results, classes)
tocheck <- read.csv("~/Documents/git/cameratrap/WildlifeDetections_CameraTrap.csv", header=TRUE)
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$imageID <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$taxa <- paste(trx$Genus, trx$Species, sep=" ")
trx$camera <- substr(trx$imageID, 0, 6)
trx$camera <- ifelse(trx$camera == "ATXing", substr(trx$imageID, 8, 13), trx$camera)
trx <- left_join(trx, classes)
trx$checkedbyhand <- trx$Class.ID
goo <- left_join(results, trx)
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$image <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$taxa <- paste(trx$Genus, trx$Species, sep=" ")
trx$camera <- substr(trx$image, 0, 6)
trx$camera <- ifelse(trx$camera == "ATXing", substr(trx$image, 8, 13), trx$camera)
trx <- left_join(trx, classes)
trx$checkedbyhand <- trx$Class.ID
trx <- subset(trx, select=c("image", "camera", "taxa", "group", "checkedbyhand"))
goo <- left_join(results, trx)
View(goo)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
## Libraries
library(dplyr)
library(ggplot2)
#Load the data
results <- read.csv("~/Desktop/test_results_usda_all.csv", header=TRUE)
classes <- read.csv("~/Desktop/listofnames.csv", header=TRUE)
results$image <- gsub(".*/\\s*|'.*", '', results$fileName)
errors <- c(4, 17)
results$modelfix<-NA
results$modelfix <- ifelse(results$guess1==22, results$guess2, results$modelfix)
results$modelfix <- ifelse(results$guess1==1, results$guess2, results$modelfix)
results$modelfix <- ifelse(results$modelfix%in%errors, 18, results$guess1)
results$camera <- gsub("_.*", '', results$image)
classes$modelfix<-classes$Class.ID
classes$group<-classes$Group.name
classes$taxa<-classes$scientific_name
results <- left_join(results, classes)
tocheck <- read.csv("~/Documents/git/cameratrap/WildlifeDetections_CameraTrap.csv", header=TRUE)
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$image <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$taxa <- paste(trx$Genus, trx$Species, sep=" ")
trx$camera <- substr(trx$image, 0, 6)
trx$camera <- ifelse(trx$camera == "ATXing", substr(trx$image, 8, 13), trx$camera)
trx <- left_join(trx, classes)
trx$checkedbyhand <- trx$Class.ID
trx <- subset(trx, select=c("image", "camera","checkedbyhand"))
goo <- left_join(results, trx)
View(goo)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
## Libraries
library(dplyr)
library(ggplot2)
#Load the data
results <- read.csv("~/Desktop/test_results_usda_all.csv", header=TRUE)
classes <- read.csv("~/Desktop/listofnames.csv", header=TRUE)
results$image <- gsub(".*/\\s*|'.*", '', results$fileName)
errors <- c(4, 17)
results$modelfix<-NA
results$modelfix <- ifelse(results$guess1==22, results$guess2, results$modelfix)
results$modelfix <- ifelse(results$guess1==1, results$guess2, results$modelfix)
results$modelfix <- ifelse(results$modelfix%in%errors, 18, results$modelfix)
View(results)
results$modelfix<-NA
results$modelfix <- ifelse(results$guess1==22, results$guess2, results$modelfix)
View(results)
results$modelfix<-NA
results$modelfix <- ifelse(results$guess1==22, results$guess2, results$guess1)
results$modelfix <- ifelse(results$guess1==1, results$guess2, results$modelfix)
results$modelfix <- ifelse(results$modelfix%in%errors, 18, results$modelfix)
results$camera <- gsub("_.*", '', results$image)
classes$modelfix<-classes$Class.ID
classes$group<-classes$Group.name
classes$taxa<-classes$scientific_name
results <- left_join(results, classes)
tocheck <- read.csv("~/Documents/git/cameratrap/WildlifeDetections_CameraTrap.csv", header=TRUE)
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$image <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$taxa <- paste(trx$Genus, trx$Species, sep=" ")
trx$camera <- substr(trx$image, 0, 6)
trx$camera <- ifelse(trx$camera == "ATXing", substr(trx$image, 8, 13), trx$camera)
trx <- left_join(trx, classes)
trx$checkedbyhand <- trx$Class.ID
trx <- subset(trx, select=c("image", "camera","checkedbyhand"))
goo <- left_join(results, trx)
View(goo)
View(trx)
sort(unique(results$camera))
results$camera <- ifelse(results$camera=="CAM6A", "CAM06A", results$camera)
trx <- left_join(trx, classes)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
## Libraries
library(dplyr)
library(ggplot2)
#Load the data
results <- read.csv("~/Desktop/test_results_usda_all.csv", header=TRUE)
classes <- read.csv("~/Desktop/listofnames.csv", header=TRUE)
results$image <- gsub(".*/\\s*|'.*", '', results$fileName)
errors <- c(4, 17)
results$modelfix<-NA
results$modelfix <- ifelse(results$guess1==22, results$guess2, results$guess1)
results$modelfix <- ifelse(results$guess1==1, results$guess2, results$modelfix)
results$modelfix <- ifelse(results$modelfix%in%errors, 18, results$modelfix)
results$camera <- gsub("_.*", '', results$image)
classes$modelfix<-classes$Class.ID
classes$group<-classes$Group.name
classes$taxa<-classes$scientific_name
results <- left_join(results, classes)
tocheck <- read.csv("~/Documents/git/cameratrap/WildlifeDetections_CameraTrap.csv", header=TRUE)
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$image <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$taxa <- paste(trx$Genus, trx$Species, sep=" ")
trx$camera <- substr(trx$image, 0, 6)
trx$camera <- ifelse(trx$camera == "ATXing", substr(trx$image, 8, 13), trx$camera)
results$camera <- ifelse(results$camera=="CAM6A", "CAM06A", results$camera)
trx <- left_join(trx, classes)
trx$checkedbyhand <- trx$Class.ID
trx <- subset(trx, select=c("image", "camera","checkedbyhand"))
goo <- left_join(results, trx)
View(goo)
View(trx)
tocheck <- read.csv("~/Documents/git/cameratrap/WildlifeDetections_CameraTrap.csv", header=TRUE)
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$image <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$taxa <- paste(trx$Genus, trx$Species, sep=" ")
trx$camera <- substr(trx$image, 0, 6)
trx$camera <- ifelse(trx$camera == "ATXing", substr(trx$image, 8, 13), trx$camera)
results$camera <- ifelse(results$camera=="CAM6A", "CAM06A", results$camera)
trx <- left_join(trx, classes)
View(trx)
View(classes)
trx$group <- ifelse(trx$scientific_name=="Corvus brachyrhynchos", "Bird", trx$group)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
## Libraries
library(dplyr)
library(ggplot2)
#Load the data
results <- read.csv("~/Desktop/test_results_usda_all.csv", header=TRUE)
classes <- read.csv("~/Desktop/listofnames.csv", header=TRUE)
results$image <- gsub(".*/\\s*|'.*", '', results$fileName)
errors <- c(4, 17)
results$modelfix<-NA
results$modelfix <- ifelse(results$guess1==22, results$guess2, results$guess1)
results$modelfix <- ifelse(results$guess1==1, results$guess2, results$modelfix)
results$modelfix <- ifelse(results$modelfix%in%errors, 18, results$modelfix)
results$camera <- gsub("_.*", '', results$image)
classes$modelfix<-classes$Class.ID
classes$group<-classes$Group.name
classes$taxa<-classes$scientific_name
results <- left_join(results, classes)
tocheck <- read.csv("~/Documents/git/cameratrap/WildlifeDetections_CameraTrap.csv", header=TRUE)
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$image <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$taxa <- paste(trx$Genus, trx$Species, sep=" ")
trx$camera <- substr(trx$image, 0, 6)
trx$camera <- ifelse(trx$camera == "ATXing", substr(trx$image, 8, 13), trx$camera)
results$camera <- ifelse(results$camera=="CAM6A", "CAM06A", results$camera)
trx$group <- ifelse(trx$scientific_name=="Vulpes vulpes", "Fox", trx$group)
trx$group <- ifelse(trx$scientific_name=="Canis latrans", "Canidae", trx$group)
trx$group <- ifelse(trx$scientific_name=="Sciurus carolinensis", "Squirrel", trx$group)
trx$group <- ifelse(trx$scientific_name=="Sylvilagus floridanus", "Rabbits", trx$group)
trx$group <- ifelse(trx$scientific_name=="Turdus migratorius", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Carduelis tristis", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Dumetella carolinensis", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Quiscalus quiscula", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Zenaida macroura", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Corvus brachyrhynchos", "Corvid", trx$group)
trx$group <- ifelse(trx$scientific_name=="Urocyon cinereoargenteus", "Fox", trx$group)
trx$group <- ifelse(trx$scientific_name=="Passer domesticus", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Butorides virescens", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Neovison vison", "Mustelidae", trx$group)
trx$group <- ifelse(trx$scientific_name=="Cardinalis cardinalis", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Tamias striatus", "Rodent", trx$group)
trx$group <- ifelse(trx$scientific_name=="Lontra canadensis", "Mustelidae", trx$group)
trx$group <- ifelse(trx$scientific_name=="Ardea herodias", "Bird", trx$group)
trx$group <- ifelse(trx$scientific_name=="Martes pennanti", "Mustelidae", trx$group)
trx$group <- ifelse(trx$scientific_name=="Martes pennanti", "Mustelidae", trx$group)
View(trx)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
## Libraries
library(dplyr)
library(ggplot2)
#Load the data
results <- read.csv("~/Desktop/test_results_usda_all.csv", header=TRUE)
classes <- read.csv("~/Desktop/listofnames.csv", header=TRUE)
results$image <- gsub(".*/\\s*|'.*", '', results$fileName)
errors <- c(4, 17)
results$modelfix<-NA
results$modelfix <- ifelse(results$guess1==22, results$guess2, results$guess1)
results$modelfix <- ifelse(results$guess1==1, results$guess2, results$modelfix)
results$modelfix <- ifelse(results$modelfix%in%errors, 18, results$modelfix)
results$camera <- gsub("_.*", '', results$image)
classes$modelfix<-classes$Class.ID
classes$group<-classes$Group.name
classes$taxa<-classes$scientific_name
results <- left_join(results, classes)
tocheck <- read.csv("~/Documents/git/cameratrap/WildlifeDetections_CameraTrap.csv", header=TRUE)
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$image <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$taxa <- paste(trx$Genus, trx$Species, sep=" ")
trx$camera <- substr(trx$image, 0, 6)
trx$camera <- ifelse(trx$camera == "ATXing", substr(trx$image, 8, 13), trx$camera)
results$camera <- ifelse(results$camera=="CAM6A", "CAM06A", results$camera)
trx$group <- ifelse(trx$taxa=="Vulpes vulpes", "Fox", trx$group)
trx$group <- ifelse(trx$taxa=="Canis latrans", "Canidae", trx$group)
trx$group <- ifelse(trx$taxa=="Sciurus carolinensis", "Squirrel", trx$group)
trx$group <- ifelse(trx$taxa=="Sylvilagus floridanus", "Rabbits", trx$group)
trx$group <- ifelse(trx$taxa=="Turdus migratorius", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Carduelis tristis", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Dumetella carolinensis", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Quiscalus quiscula", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Zenaida macroura", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Corvus brachyrhynchos", "Corvid", trx$group)
trx$group <- ifelse(trx$taxa=="Urocyon cinereoargenteus", "Fox", trx$group)
trx$group <- ifelse(trx$taxa=="Passer domesticus", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Butorides virescens", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Neovison vison", "Mustelidae", trx$group)
trx$group <- ifelse(trx$taxa=="Cardinalis cardinalis", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Tamias striatus", "Rodent", trx$group)
trx$group <- ifelse(trx$taxa=="Lontra canadensis", "Mustelidae", trx$group)
trx$group <- ifelse(trx$taxa=="Ardea herodias", "Bird", trx$group)
trx$group <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$group)
trx$group <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$group)
View(trx)
trx <- left_join(trx, classes)
trx$taxa <- ifelse(trx$taxa=="Vulpes vulpes", "Vulpes vulpes and Urocyon Cinereoargentus", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Canis latrans", "Canidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Sciurus carolinensis", "Sciurus spp.", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Sylvilagus floridanus", "Leporidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Turdus migratorius", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Carduelis tristis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Dumetella carolinensis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Quiscalus quiscula", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Zenaida macroura", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Corvus brachyrhynchos", "Corvidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Urocyon cinereoargenteus", "Vulpes vulpes and Urocyon Cinereoargentus", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Passer domesticus", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Butorides virescens", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Neovison vison", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Cardinalis cardinalis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Tamias striatus", "Rodentia", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Lontra canadensis", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Ardea herodias", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$taxa)
trx<-subset(trx, subset=c("camera", "image", "taxa", "checkedbyhand"))
trx<-subset(trx, select=c("camera", "image", "taxa", "checkedbyhand"))
View(trx)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
## Libraries
library(dplyr)
library(ggplot2)
#Load the data
results <- read.csv("~/Desktop/test_results_usda_all.csv", header=TRUE)
classes <- read.csv("~/Desktop/listofnames.csv", header=TRUE)
results$image <- gsub(".*/\\s*|'.*", '', results$fileName)
errors <- c(4, 17)
results$modelfix<-NA
results$modelfix <- ifelse(results$guess1==22, results$guess2, results$guess1)
results$modelfix <- ifelse(results$guess1==1, results$guess2, results$modelfix)
results$modelfix <- ifelse(results$modelfix%in%errors, 18, results$modelfix)
results$camera <- gsub("_.*", '', results$image)
classes$modelfix<-classes$Class.ID
classes$group<-classes$Group.name
classes$taxa<-classes$scientific_name
results <- left_join(results, classes)
tocheck <- read.csv("~/Documents/git/cameratrap/WildlifeDetections_CameraTrap.csv", header=TRUE)
trx<-subset(tocheck, select=c("Sampling.Event", "Raw.Name", "Genus", "Species"))
trx$image <- paste(trx$Sampling.Event, trx$Raw.Name, sep="_")
trx$taxa <- paste(trx$Genus, trx$Species, sep=" ")
trx$camera <- substr(trx$image, 0, 6)
trx$camera <- ifelse(trx$camera == "ATXing", substr(trx$image, 8, 13), trx$camera)
results$camera <- ifelse(results$camera=="CAM6A", "CAM06A", results$camera)
trx$taxa <- ifelse(trx$taxa=="Vulpes vulpes", "Vulpes vulpes and Urocyon Cinereoargentus", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Canis latrans", "Canidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Sciurus carolinensis", "Sciurus spp.", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Sylvilagus floridanus", "Leporidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Turdus migratorius", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Carduelis tristis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Dumetella carolinensis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Quiscalus quiscula", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Zenaida macroura", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Corvus brachyrhynchos", "Corvidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Urocyon cinereoargenteus", "Vulpes vulpes and Urocyon Cinereoargentus", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Passer domesticus", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Butorides virescens", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Neovison vison", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Cardinalis cardinalis", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Tamias striatus", "Rodentia", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Lontra canadensis", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Ardea herodias", "Aves", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$taxa)
trx$taxa <- ifelse(trx$taxa=="Martes pennanti", "Mustelidae", trx$taxa)
trx<-subset(trx, select=c("camera", "image", "taxa", "checkedbyhand"))
trx<-subset(trx, select=c("camera", "image", "taxa"))
trx <- left_join(trx, classes)
trx$checkedbyhand <- trx$Class.ID
trx <- subset(trx, select=c("image", "camera","checkedbyhand"))
goo <- left_join(results, trx)
goo <- full_join(results, trx)
howmanymatch <- unique(trx$image)
howmanymatch <- unique(trx$image)
foo <- goo[(goo$image%in%howmanymatch),]
View(foo)
goo <- left_join(results, trx)
howmanymatch <- unique(trx$image)
foo <- goo[(goo$image%in%howmanymatch),]
View(goo)
709/821
(exp(-0.48)-1)*100
(exp(0.14)-1)*100
(exp(0.4)-1)*100
(exp(0.19)-1)*100
(exp(0.35)-1)*100
(exp(0.42)-1)*100
(exp(-0.83)-1)*100
load("/Users/catchamberlain/Documents/git/regionalrisk/orig_full.Rdata")
orig.full
(exp(-0.12)-1)*100
broom::tidy(orig.full)
(exp(0.0008967095)-1)*100
rm(list=ls())
options(stringsAsFactors = FALSE)
# Load libraries
library(bayesplot) ## for plotting
library(egg) ## for plotting
library(shinystan)
library(rstanarm)
library(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
# Set working directory
setwd("~/Documents/git/chillfreeze/analyses")
source('source/stan_utility.R')
chill.stan <- read.csv("output/clean_dvr_60dayoutput.csv", header=TRUE)
#chill.stan <- read.csv("output/fakedata_height.csv", header=TRUE)
chill.stan$ht.diff <- chill.stan$X60dayheight - chill.stan$lo.ht
chill.stan <- chill.stan[!is.na(chill.stan$ht.diff),]
chill.stan$ht.rgr <- (log(chill.stan$X60dayheight) - log(chill.stan$lo.ht)) * 10
chill.stan <- chill.stan[!is.na(chill.stan$ht.rgr),]
#chill.stan$thickness <- ((chill.stan$thick1 + chill.stan$thick2)/2)*10
#chill.stan <- chill.stan[!is.na(chill.stan$thickness),]
#chill.stan <- chill.stan[!is.na(chill.stan$mg.cm2),]
#chill.stan <- chill.stan[!is.na(chill.stan$chlavg),]
#chill.stan <- chill.stan[!is.na(chill.stan$ht.rgr),]
#rmspp <- c("FAGGRA", "NYSSYL")
#chill.stan <- chill.stan[!(chill.stan%in%rmspp),]
datalist.chill <- with(chill.stan,
list(y = ht.rgr,
tx = tx,
chill1 = chill1,
chill2 = chill2,
sp = as.numeric(as.factor(species)),
N = nrow(chill.stan),
n_sp = length(unique(chill.stan$species))
)
)
htrgr.inter = stan('stan/htrgr_2level_normal.stan', data = datalist.chill,
iter = 5000, warmup=3000, control=list(max_treedepth = 15,adapt_delta = 0.99)) ###
htrgr.inter = stan('stan/htrgr_2level_ncp.stan', data = datalist.chill,
iter = 5000, warmup=3000, control=list(max_treedepth = 15,adapt_delta = 0.99)) ###
htrgr.inter = stan('stan/growth_winter_2level_skewnormal.stan', data = datalist.chill,
iter = 5000, warmup=3000, control=list(max_treedepth = 15,adapt_delta = 0.99)) ###
46.63*3
139.89+45
46.63*2
93.26+90
htrgr.inter = stan('stan/growth_winter_2level_ncp_skewnormal.stan', data = datalist.chill,
iter = 5000, warmup=3000, control=list(max_treedepth = 15,adapt_delta = 0.99)) ###
htrgr.inter = stan('stan/htrgr_winter_2level_ncp.stan', data = datalist.chill,
iter = 5000, warmup=3000, control=list(max_treedepth = 15,adapt_delta = 0.99)) ###
htrgr.inter = stan('stan/htrgr_2level_normal.stan', data = datalist.chill,
iter = 5000, warmup=3000, control=list(max_treedepth = 15,adapt_delta = 0.99)) ###
