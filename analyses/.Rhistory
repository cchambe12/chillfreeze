"31"="False Spring x \n8wks Chill")) + scale_y_continuous(expand = c(0, 0))
quartz()
rankadj_bytx
speciestxrank <- subset(bbandgs, select=c(species_tx, lobytxchill, txchill, rank))
speciestxrank <- speciestxrank[!duplicated(speciestxrank),]
speciestxrank <- arrange(speciestxrank, rank)
speciestxrank$rank_order <- 1:nrow(speciestxrank)
speciestxrank <- arrange(speciestxrank, txchill, rank)
speciestxrank$rank_adj <- NA
newranks <- c()
for(j in 1:length(txs)) {  #j=5
subby <- subset(speciestxrank, as.numeric(speciestxrank$txchill)==txs[j])
for(i in c(1:nrow(subby))) { ## i=2
if(i==1) {
subby$rank_adj[i] <- subby$rank_order[i]
} else if (i>=3 && (subby$lobytxchill[i] - 3) <= subby$lobytxchill[i-2]) {
subby$rank_adj[i] <- subby$rank_order[i-2] + 0.8
} else if (i>=2 && (subby$lobytxchill[i] - 3) <= subby$lobytxchill[i-1]) {
subby$rank_adj[i] <- subby$rank_order[i-1] + 0.4
} else
subby$rank_adj[i] <- subby$rank_order[i]
}
newranks <- c(newranks, subby$rank_adj)
}
speciestxrank$rank_adj <- NULL
spp_rankfix <- cbind(speciestxrank, newranks)
bbandgs_rankfix <- full_join(bbandgs, spp_rankfix)
cols <- colorRampPalette(brewer.pal(8,"Dark2"))(8)
rankadj_bytx <- ggplot(bbandgs_rankfix, aes(y=newranks, x=txchill, col=species)) +
geom_line(aes(group=species)) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.text.align = 0,
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.text = element_text(face="italic")) +
xlab("") +
ylab("Order/Rank of leafout") +
scale_color_manual(name="Species", values=cols,
labels=c("ACESAC"="Acer saccharinum",
"ALNRUG"="Alnus rugosa",
"BETPAP"="Betula papyrifera",
"BETPOP"="Betula populifolia",
"CORRAC"="Cornus racemosa",
"SALPUR"="Salix purpurea",
"SORAME"="Sorbus americana",
"VIBDEN"="Viburnum dentatum")) +
scale_x_discrete(labels=c("10"="Control x \n4wks Chill",
"11"="False Spring x \n4wks Chill",
"20"="Control x \n6wks Chill",
"21"="False Spring x \n6wks Chill",
"30"="Control x \n8wks Chill",
"31"="False Spring x \n8wks Chill")) + scale_y_continuous(expand = c(0, 0))
rankadj_bytx
##################################################################################
speciestxrank_bset <- subset(bbandgs, select=c(species_tx, bsetbytxchill, txchill, rank))
speciestxrank_bset <- speciestxrank[!duplicated(speciestxrank_bset),]
speciestxrank_bset <- arrange(speciestxrank_bset, rank)
speciestxrank_bset$rank_order <- 1:nrow(speciestxrank_bset)
speciestxrank_bset <- arrange(speciestxrank_bset, txchill, rank)
speciestxrank_bset$rank_adj <- NA
newranks <- c()
for(j in 1:length(txs)) {  #j=5
subby <- subset(speciestxrank_bset, as.numeric(speciestxrank_bset$txchill)==txs[j])
for(i in c(1:nrow(subby))) { ## i=2
if(i==1) {
subby$rank_adj[i] <- subby$rank_order[i]
} else if (i>=3 && (subby$lobytxchill[i] - 3) <= subby$lobytxchill[i-2]) {
subby$rank_adj[i] <- subby$rank_order[i-2] + 0.8
} else if (i>=2 && (subby$lobytxchill[i] - 3) <= subby$lobytxchill[i-1]) {
subby$rank_adj[i] <- subby$rank_order[i-1] + 0.4
} else
subby$rank_adj[i] <- subby$rank_order[i]
}
newranks <- c(newranks, subby$rank_adj)
}
##################################################################################
speciestxrank_bset <- subset(bbandgs, select=c(species_tx, bsetbytxchill, txchill, rank))
speciestxrank_bset <- speciestxrank_bset[!duplicated(speciestxrank_bset),]
speciestxrank_bset <- arrange(speciestxrank_bset, rank)
speciestxrank_bset$rank_order <- 1:nrow(speciestxrank_bset)
speciestxrank_bset <- arrange(speciestxrank_bset, txchill, rank)
speciestxrank_bset$rank_adj <- NA
newranks <- c()
for(j in 1:length(txs)) {  #j=5
subby <- subset(speciestxrank_bset, as.numeric(speciestxrank_bset$txchill)==txs[j])
for(i in c(1:nrow(subby))) { ## i=2
if(i==1) {
subby$rank_adj[i] <- subby$rank_order[i]
} else if (i>=3 && (subby$lobytxchill[i] - 3) <= subby$lobytxchill[i-2]) {
subby$rank_adj[i] <- subby$rank_order[i-2] + 0.8
} else if (i>=2 && (subby$lobytxchill[i] - 3) <= subby$lobytxchill[i-1]) {
subby$rank_adj[i] <- subby$rank_order[i-1] + 0.4
} else
subby$rank_adj[i] <- subby$rank_order[i]
}
newranks <- c(newranks, subby$rank_adj)
}
speciestxrank_bset$rank_adj <- NULL
txs <- sort(unique(speciestxrank_bset$species_tx))
newranks <- c()
subby <- subset(speciestxrank_bset, as.numeric(speciestxrank_bset$txchill)==txs[j])
subby
j=5
subby <- subset(speciestxrank_bset, as.numeric(speciestxrank_bset$txchill)==txs[j])
subby
# Step 1) For budset now
bbandgs$bsetbytxchill <- ave(bbandgs$budsetdoy, bbandgs$species, bbandgs$txchill)
bbandgs$rankbset <- rank(bbandgs$bsetbytxchill, bbandgs$species_tx)
##################################################################################
speciestxrank_bset <- subset(bbandgs, select=c(species_tx, bsetbytxchill, txchill, rankbset))
speciestxrank_bset <- speciestxrank_bset[!duplicated(speciestxrank_bset),]
speciestxrank_bset <- arrange(speciestxrank_bset, rankbset)
speciestxrank_bset$rank_order <- 1:nrow(speciestxrank_bset)
speciestxrank_bset <- arrange(speciestxrank_bset, txchill, rankbset)
speciestxrank_bset$rank_adj <- NA
txs <- sort(unique(speciestxrank_bset$species_tx))
newranks <- c()
for(j in 1:length(txs)) {  #j=5
subby <- subset(speciestxrank_bset, as.numeric(speciestxrank_bset$txchill)==txs[j])
for(i in c(1:nrow(subby))) { ## i=2
if(i==1) {
subby$rank_adj[i] <- subby$rank_order[i]
} else if (i>=3 && (subby$lobytxchill[i] - 3) <= subby$lobytxchill[i-2]) {
subby$rank_adj[i] <- subby$rank_order[i-2] + 0.8
} else if (i>=2 && (subby$lobytxchill[i] - 3) <= subby$lobytxchill[i-1]) {
subby$rank_adj[i] <- subby$rank_order[i-1] + 0.4
} else
subby$rank_adj[i] <- subby$rank_order[i]
}
newranks <- c(newranks, subby$rank_adj)
}
View(speciestxrank_bset)
txs <- sort(unique(speciestxrank_bset$species_tx))
txs
txs <- sort(unique(speciestxrank_bset$txchill))
newranks <- c()
for(j in 1:length(txs)) {  #j=5
subby <- subset(speciestxrank_bset, as.numeric(speciestxrank_bset$txchill)==txs[j])
for(i in c(1:nrow(subby))) { ## i=2
if(i==1) {
subby$rank_adj[i] <- subby$rank_order[i]
} else if (i>=3 && (subby$lobytxchill[i] - 3) <= subby$lobytxchill[i-2]) {
subby$rank_adj[i] <- subby$rank_order[i-2] + 0.8
} else if (i>=2 && (subby$lobytxchill[i] - 3) <= subby$lobytxchill[i-1]) {
subby$rank_adj[i] <- subby$rank_order[i-1] + 0.4
} else
subby$rank_adj[i] <- subby$rank_order[i]
}
newranks <- c(newranks, subby$rank_adj)
}
txs
txs <- as.numeric(sort(unique(speciestxrank_bset$txchill)))
newranks <- c()
for(j in 1:length(txs)) {  #j=5
subby <- subset(speciestxrank_bset, as.numeric(speciestxrank_bset$txchill)==txs[j])
for(i in c(1:nrow(subby))) { ## i=2
if(i==1) {
subby$rank_adj[i] <- subby$rank_order[i]
} else if (i>=3 && (subby$lobytxchill[i] - 3) <= subby$lobytxchill[i-2]) {
subby$rank_adj[i] <- subby$rank_order[i-2] + 0.8
} else if (i>=2 && (subby$lobytxchill[i] - 3) <= subby$lobytxchill[i-1]) {
subby$rank_adj[i] <- subby$rank_order[i-1] + 0.4
} else
subby$rank_adj[i] <- subby$rank_order[i]
}
newranks <- c(newranks, subby$rank_adj)
}
txs <- as.numeric(sort(unique(speciestxrank_bset$txchill)))
txs
1:length(txs)
j=5
subby <- subset(speciestxrank_bset, as.numeric(speciestxrank_bset$txchill)==txs[j])
subby
for(i in c(1:nrow(subby))) { ## i=2
if(i==1) {
subby$rank_adj[i] <- subby$rank_order[i]
} else if (i>=3 && (subby$lobytxchill[i] - 3) <= subby$lobytxchill[i-2]) {
subby$rank_adj[i] <- subby$rank_order[i-2] + 0.8
} else if (i>=2 && (subby$lobytxchill[i] - 3) <= subby$lobytxchill[i-1]) {
subby$rank_adj[i] <- subby$rank_order[i-1] + 0.4
} else
subby$rank_adj[i] <- subby$rank_order[i]
}
txs <- as.numeric(sort(unique(speciestxrank_bset$txchill)))
newranks <- c()
for(j in 1:length(txs)) {  #j=5
subby <- subset(speciestxrank_bset, as.numeric(speciestxrank_bset$txchill)==txs[j])
for(i in c(1:nrow(subby))) { ## i=2
if(i==1) {
subby$rank_adj[i] <- subby$rank_order[i]
} else if (i>=3 && (subby$bsetbytxchill[i] - 3) <= subby$bsetbytxchill[i-2]) {
subby$rank_adj[i] <- subby$rank_order[i-2] + 0.8
} else if (i>=2 && (subby$bsetbytxchill[i] - 3) <= subby$bsetbytxchill[i-1]) {
subby$rank_adj[i] <- subby$rank_order[i-1] + 0.4
} else
subby$rank_adj[i] <- subby$rank_order[i]
}
newranks <- c(newranks, subby$rank_adj)
}
speciestxrank_bset$rank_adj <- NULL
spp_rankfix_bset <- cbind(speciestxrank_bset, newranks)
bbandgs_rankfix_bset <- full_join(bbandgs, spp_rankfix_bset)
cols <- colorRampPalette(brewer.pal(8,"Dark2"))(8)
rankadj_bytx_bset <- ggplot(bbandgs_rankfix_bset, aes(y=newranks, x=txchill, col=species)) +
geom_line(aes(group=species)) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.text.align = 0,
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.text = element_text(face="italic")) +
xlab("") +
ylab("Order/Rank of leafout") +
scale_color_manual(name="Species", values=cols,
labels=c("ACESAC"="Acer saccharinum",
"ALNRUG"="Alnus rugosa",
"BETPAP"="Betula papyrifera",
"BETPOP"="Betula populifolia",
"CORRAC"="Cornus racemosa",
"SALPUR"="Salix purpurea",
"SORAME"="Sorbus americana",
"VIBDEN"="Viburnum dentatum")) +
scale_x_discrete(labels=c("10"="Control x \n4wks Chill",
"11"="False Spring x \n4wks Chill",
"20"="Control x \n6wks Chill",
"21"="False Spring x \n6wks Chill",
"30"="Control x \n8wks Chill",
"31"="False Spring x \n8wks Chill")) + scale_y_continuous(expand = c(0, 0))
quartz()
rankadj_bytx_bset
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(gridExtra)
library(RColorBrewer)
# Set Working Directory
setwd("~/Documents/git/chillfreeze/analyses")
chillfrz <- read.csv("output/clean_dvr_traits.csv", header=TRUE)
rmspp <- c("NYSSYL", "FAGGRA")
chillfrz <- chillfrz[!(chillfrz$species%in%rmspp),]
bbandgs <- subset(chillfrz, select=c("budburst", "leafout", "tx", "chill", "budsetdoy", "species"))
bbandgs <- na.omit(bbandgs)
bbandgs$txchill <- paste0(bbandgs$chill, bbandgs$tx)
unique(bbandgs$txchill)
#### Let's look at overall averages and then do barplots... I think that will be the best first stab
bbandgs$lobyspp <- ave(bbandgs$budburst, bbandgs$species)
bbandgs$code <- reorder(bbandgs$species, bbandgs$lobyspp) ## Levels: SALPUR CORRAC BETPAP BETPOP ALNRUG VIBDEN SORAME ACESAC
### Okay, now we're going to try and rank them based on order by treatment by species
# Step 1)
bbandgs$lobytxchill <- ave(bbandgs$budburst, bbandgs$species, bbandgs$txchill)
bbandgs$species_tx <- paste(bbandgs$species, bbandgs$txchill, sep="_")
bbandgs$code <- reorder(bbandgs$species_tx, bbandgs$lobytxchill)
bbandgs$rank <- rank(bbandgs$lobytxchill, bbandgs$species_tx)
bbandgs.sub <- subset(bbandgs, select=c("rank", "txchill", "species"))
bbandgs.sub <- bbandgs.sub[!duplicated(bbandgs.sub),]
bbandgs.sub <- arrange(bbandgs.sub, rank)
bbandgs.sub$rank_order <- 1:nrow(bbandgs.sub)
# Step 2) Plot using this rank
cols <- colorRampPalette(brewer.pal(8,"Dark2"))(8)
rankbytx <- ggplot(bbandgs.sub, aes(y=rank_order, x=txchill, col=species)) +
geom_line(aes(group=species)) +
coord_cartesian(ylim=c(0, 55)) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.text.align = 0,
legend.position = "none",
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.text = element_text(face="italic")) +
xlab("") +
ylab("Order of budburst") +
scale_color_manual(name="Species", values=cols,
labels=c("ACESAC"="Acer saccharinum",
"ALNRUG"="Alnus rugosa",
"BETPAP"="Betula papyrifera",
"BETPOP"="Betula populifolia",
"CORRAC"="Cornus racemosa",
"SALPUR"="Salix purpurea",
"SORAME"="Sorbus americana",
"VIBDEN"="Viburnum dentatum")) +
scale_x_discrete(labels=c("10"="Control x \n4wks Chill",
"11"="False Spring x \n4wks Chill",
"20"="Control x \n6wks Chill",
"21"="False Spring x \n6wks Chill",
"30"="Control x \n8wks Chill",
"31"="False Spring x \n8wks Chill")) + scale_y_continuous(expand=c(0,0))
#### Now let's look at raw budburst data by treatments
budburstbytx <- ggplot(bbandgs, aes(y=budburst, x=txchill, col=species)) +  geom_jitter(width=0.2) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.text.align = 0,
legend.position="none",
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.text = element_text(face="italic")) +
xlab("") +
ylab("Day of budburst") +
scale_color_manual(name="Species", values=cols,
labels=c("ACESAC"="Acer saccharinum",
"ALNRUG"="Alnus rugosa",
"BETPAP"="Betula papyrifera",
"BETPOP"="Betula populifolia",
"CORRAC"="Cornus racemosa",
"SALPUR"="Salix purpurea",
"SORAME"="Sorbus americana",
"VIBDEN"="Viburnum dentatum")) +
scale_x_discrete(labels=c("10"="Control x \n4wks Chill",
"11"="False Spring x \n4wks Chill",
"20"="Control x \n6wks Chill",
"21"="False Spring x \n6wks Chill",
"30"="Control x \n8wks Chill",
"31"="False Spring x \n8wks Chill"))
#### Now let's look at raw budburst data by treatments
budburstbytx <- ggplot(bbandgs, aes(y=budburst, x=txchill, col=species)) +  geom_jitter(width=0.2) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.text.align = 0,
#legend.position="none",
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.text = element_text(face="italic")) +
xlab("") +
ylab("Day of budburst") +
scale_color_manual(name="Species", values=cols,
labels=c("ACESAC"="Acer saccharinum",
"ALNRUG"="Alnus rugosa",
"BETPAP"="Betula papyrifera",
"BETPOP"="Betula populifolia",
"CORRAC"="Cornus racemosa",
"SALPUR"="Salix purpurea",
"SORAME"="Sorbus americana",
"VIBDEN"="Viburnum dentatum")) +
scale_x_discrete(labels=c("10"="Control x \n4wks Chill",
"11"="False Spring x \n4wks Chill",
"20"="Control x \n6wks Chill",
"21"="False Spring x \n6wks Chill",
"30"="Control x \n8wks Chill",
"31"="False Spring x \n8wks Chill"))
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
mylegend<-g_legend(budburstbytx)
#### Now let's look at raw budburst data by treatments
budburstbytx <- ggplot(bbandgs, aes(y=budburst, x=txchill, col=species)) +  geom_jitter(width=0.2) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.text.align = 0,
legend.position="none",
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.text = element_text(face="italic")) +
xlab("") +
ylab("Day of budburst") +
scale_color_manual(name="Species", values=cols,
labels=c("ACESAC"="Acer saccharinum",
"ALNRUG"="Alnus rugosa",
"BETPAP"="Betula papyrifera",
"BETPOP"="Betula populifolia",
"CORRAC"="Cornus racemosa",
"SALPUR"="Salix purpurea",
"SORAME"="Sorbus americana",
"VIBDEN"="Viburnum dentatum")) +
scale_x_discrete(labels=c("10"="Control x \n4wks Chill",
"11"="False Spring x \n4wks Chill",
"20"="Control x \n6wks Chill",
"21"="False Spring x \n6wks Chill",
"30"="Control x \n8wks Chill",
"31"="False Spring x \n8wks Chill"))
png("figures/budburst_orderandraw.png", ### makes it a nice png and saves it so it doesn't take forever to load as a pdf!
width=12,
height=4.5, units="in", res = 350 )
grid.arrange(rankbytx, budburstbytx, mylegend, ncol=3, widths=c(1.2,1.2,0.35))
dev.off()
View(bbandgs)
###### Also a little prep for reviewers just in case...
corprep <- gather(bbandgs, leafout, txchill)
View(corprep)
###### Also a little prep for reviewers just in case...
corprep <- subset(bbandgs, select=c(leafout, txchill))
View(corprep)
corprep <- spread(corprep, leafout, txchill)
str(corprep)
###### Also a little prep for reviewers just in case...
corprep <- subset(bbandgs, select=c(leafout, txchill))
foo <- spread(corprep, txchill, leafout)
foo <- spread(corprep, key=txchill, value=leafout)
foo <- tidyr::spread(corprep, key=txchill, value=leafout)
foo <- as.data.frame(table(corprep$txchill, corprep$leafout))
View(foo)
foo <- with(corprep, tapply(leafout, list(txchill)))
foo
foo <- spread(corprep, txchll)
foo <- spread(corprep, txchill)
###### Also a little prep for reviewers just in case...
corprep <- subset(bbandgs, select=c(leafout, txchill))
foo <- spread(corprep, txchill)
foo <- spread(corprep, txchill, leafout)
tibble::rowid_to_column(corprep, txchill)
corprep %>% tibble::rowid_to_column(txchill)
corprep %>% tibble::rowid_to_column("txchill")
corprep %>% tibble::rowid_to_column(treatment)
corprep %>% tibble::rowid_to_column("treatment")
corprep %>% spread_with_multiple_values(txchill, leafout)
install.packages("trias")
corprep %>% spread(txchill, leafout)
corprep %>% gather(txchill, leafout)
corprep %>% gather(txchill, leafout) %>% unite(txchill) %>% spread(txchill, leafout)
corprep %>% gather(txchill, leafout) %>% unite(txchill, leafout) %>% spread(txchill, leafout)
corprep %>% gather(txchill, leafout) %>% spread(txchill, lotime)
corprep %>% gather(txchill, leafout) %>% spread(txchill, leafout)
corprep$tx <- NA
corprep$tx <- ifelse(corprep$txchill=="10", "Control x \n4wks Chill", corprep$tx)
corprep$tx <- ifelse(corprep$txchill=="11", "False Spring x \n4wks Chill", corprep$tx)
corprep$tx <- ifelse(corprep$txchill=="20", "Control x \n6wks Chill", corprep$tx)
corprep$tx <- ifelse(corprep$txchill=="21", "False Spring x \n6wks Chill", corprep$tx)
corprep$tx <- ifelse(corprep$txchill=="30", "Control x \n8wks Chill", corprep$tx)
corprep$tx <- ifelse(corprep$txchill=="31", "False Spring x \n8wks Chill", corprep$tx)
corprep %>% spread(tx, leafout, -txchill)
foo <- corprep %>%
tibble::rowid_to_column() %>%
gather(txchill, leafout, -rowid) %>%
spread(txchill, leafout)
foo
###### Also a little prep for reviewers just in case...
corprep <- subset(bbandgs, select=c(leafout, txchill))
foo <- corprep %>%
tibble::rowid_to_column() %>%
gather(txchill, leafout, -rowid)
foo
foo <- corprep %>%
tibble::rowid_to_column() %>%
gather(txchill, leafout, -rowid) %>%
goo <- foo %>%  spread(txchill, leafout)
foo <- corprep %>%
tibble::rowid_to_column() %>%
gather(txchill, leafout, -rowid) %>%
goo <- foo %>% spread(txchill, leafout)
foo <- corprep %>%
tibble::rowid_to_column() %>%
gather(txchill, leafout, -rowid)
goo <- foo %>% spread(txchill, leafout)
goo
goo <- foo %>% spread(txchill, leafout, -rowid)
###### Also a little prep for reviewers just in case...
corprep <- subset(bbandgs, select=c(leafout, txchill))
foo <- corprep %>%
tibble::rowid_to_column() %>%
group_by_at(vars(-leafout)) %>%
mutate(row_id=1:n()) %>%
ungroup() %>%
spread(key=txchill, value=leafout) %>%
select(-row_id)
foo
###### Also a little prep for reviewers just in case...
corprep <- subset(bbandgs, select=c(leafout, txchill))
foo <- corprep %>%
#tibble::rowid_to_column() %>%
group_by_at(vars(-leafout)) %>%
mutate(row_id=1:n()) %>%
ungroup() %>%
spread(key=txchill, value=leafout) %>%
select(-row_id)
foo
cor(foo$`10`, foo$`11`, foo$`20`, foo$`21`, foo$`30`, foo$`31`, method="spearman")
###### Also a little prep for reviewers just in case...
corprep <- subset(bbandgs, select=c(leafout, txchill, rank_order))
bbandgs
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(gridExtra)
library(RColorBrewer)
# Set Working Directory
setwd("~/Documents/git/chillfreeze/analyses")
chillfrz <- read.csv("output/clean_dvr_traits.csv", header=TRUE)
rmspp <- c("NYSSYL", "FAGGRA")
chillfrz <- chillfrz[!(chillfrz$species%in%rmspp),]
### It would be good to know if the order of species changes
# in any of your treatments. You can use  the
# 'order' or 'rank' command in R I think to transform mean leafout to just
#a rank and try to plot how consistent this is across treatments.
bbandgs <- subset(chillfrz, select=c("budburst", "leafout", "tx", "chill", "budsetdoy", "species"))
bbandgs <- na.omit(bbandgs)
bbandgs$txchill <- paste0(bbandgs$chill, bbandgs$tx)
unique(bbandgs$txchill)
# "10"  "11"  "20"  "21"  "30"  "31"
#### Let's look at overall averages and then do barplots... I think that will be the best first stab
bbandgs$lobyspp <- ave(bbandgs$leafout, bbandgs$species)
bbandgs$code <- reorder(bbandgs$species, bbandgs$lobyspp) ## Levels: SALPUR CORRAC BETPAP BETPOP ALNRUG VIBDEN SORAME ACESAC
### Okay, now we're going to try and rank them based on order by treatment by species
# Step 1)
bbandgs$lobytxchill <- ave(bbandgs$leafout, bbandgs$species, bbandgs$txchill)
bbandgs$species_tx <- paste(bbandgs$species, bbandgs$txchill, sep="_")
bbandgs$code <- reorder(bbandgs$species_tx, bbandgs$lobytxchill)
bbandgs$rank <- rank(bbandgs$lobytxchill, bbandgs$species_tx)
bbandgs.sub <- subset(bbandgs, select=c("rank", "txchill", "species"))
bbandgs.sub <- bbandgs.sub[!duplicated(bbandgs.sub),]
bbandgs.sub <- arrange(bbandgs.sub, rank)
bbandgs.sub$rank_order <- 1:nrow(bbandgs.sub)
###### Also a little prep for reviewers just in case...
corprep <- subset(bbandgs.sub, select=c(leafout, txchill, rank_order))
View(bbandgs.sub)
###### Also a little prep for reviewers just in case...
corprep <- subset(bbandgs.sub, select=c( txchill, rank_order))
###### Also a little prep for reviewers just in case...
foo <- bbandgs.sub
lmer(rank_order ~ txchill + (1|species), data=foo)
library(lme4)
lmer(rank_order ~ txchill + (1|species), data=foo)
lm(rank_order ~ txchill + species, data=foo)
anova(lm(rank_order ~ txchill + species, data=foo))
anova(lm(rank_order ~ txchill*species, data=foo))
lm(rank_order ~ txchill*species, data=foo)
